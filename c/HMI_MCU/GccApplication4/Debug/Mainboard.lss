
Mainboard.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00804000  00000aea  00000b7e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000f0  0080401c  0080401c  00000b9a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b9a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bf8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  00000c38  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006084  00000000  00000000  00000e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003891  00000000  00000000  00006f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000153d  00000000  00000000  0000a7ad  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000548  00000000  00000000  0000bcec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002cd3  00000000  00000000  0000c234  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bb6  00000000  00000000  0000ef07  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  0000fabd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
   4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
   c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  10:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  14:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  18:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  1c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  20:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  24:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  28:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  2c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  30:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  34:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  38:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  3c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  40:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  44:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  48:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  4c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  50:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  54:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  58:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  5c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  60:	0c 94 89 01 	jmp	0x312	; 0x312 <__vector_24>
  64:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  68:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__vector_26>
  6c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  70:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  74:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  78:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  7c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  80:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  84:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  88:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  8c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  90:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  94:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  98:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  9c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  a8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ac:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  b4:	0c 94 63 01 	jmp	0x2c6	; 0x2c6 <__vector_45>
  b8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  bc:	0c 94 b8 01 	jmp	0x370	; 0x370 <__vector_47>
  c0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  c8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  cc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  d4:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__vector_53>
  d8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  dc:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <__vector_55>
  e0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  e8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  ec:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
  f0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>

000000f4 <__ctors_end>:
  f4:	11 24       	eor	r1, r1
  f6:	1f be       	out	0x3f, r1	; 63
  f8:	cf ef       	ldi	r28, 0xFF	; 255
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	df e7       	ldi	r29, 0x7F	; 127
  fe:	de bf       	out	0x3e, r29	; 62

00000100 <__do_copy_data>:
 100:	10 e4       	ldi	r17, 0x40	; 64
 102:	a0 e0       	ldi	r26, 0x00	; 0
 104:	b0 e4       	ldi	r27, 0x40	; 64
 106:	ea ee       	ldi	r30, 0xEA	; 234
 108:	fa e0       	ldi	r31, 0x0A	; 10
 10a:	00 e0       	ldi	r16, 0x00	; 0
 10c:	0b bf       	out	0x3b, r16	; 59
 10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
 110:	07 90       	elpm	r0, Z+
 112:	0d 92       	st	X+, r0
 114:	ac 31       	cpi	r26, 0x1C	; 28
 116:	b1 07       	cpc	r27, r17
 118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
 11a:	21 e4       	ldi	r18, 0x41	; 65
 11c:	ac e1       	ldi	r26, 0x1C	; 28
 11e:	b0 e4       	ldi	r27, 0x40	; 64
 120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
 122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
 124:	ac 30       	cpi	r26, 0x0C	; 12
 126:	b2 07       	cpc	r27, r18
 128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
 12a:	0e 94 57 01 	call	0x2ae	; 0x2ae <main>
 12e:	0c 94 73 05 	jmp	0xae6	; 0xae6 <_exit>

00000132 <__bad_interrupt>:
 132:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000136 <ADC0_assign_value>:
	}
	else if(channel==4){
		return AIN4_value;
	}
	adc_conversion_ready =0;
}
 136:	81 e0       	ldi	r24, 0x01	; 1
 138:	80 93 1c 40 	sts	0x401C, r24	; 0x80401c <__data_end>
 13c:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <AIN_selected>
 140:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <AIN_selected+0x1>
 144:	89 2b       	or	r24, r25
 146:	49 f4       	brne	.+18     	; 0x15a <ADC0_assign_value+0x24>
 148:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 14c:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
 150:	80 93 08 40 	sts	0x4008, r24	; 0x804008 <AIN0_value>
 154:	90 93 09 40 	sts	0x4009, r25	; 0x804009 <AIN0_value+0x1>
 158:	08 95       	ret
 15a:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <AIN_selected>
 15e:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <AIN_selected+0x1>
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	49 f4       	brne	.+18     	; 0x178 <ADC0_assign_value+0x42>
 166:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 16a:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
 16e:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <AIN1_value>
 172:	90 93 07 40 	sts	0x4007, r25	; 0x804007 <AIN1_value+0x1>
 176:	08 95       	ret
 178:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <AIN_selected>
 17c:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <AIN_selected+0x1>
 180:	02 97       	sbiw	r24, 0x02	; 2
 182:	49 f4       	brne	.+18     	; 0x196 <ADC0_assign_value+0x60>
 184:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 188:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
 18c:	80 93 04 40 	sts	0x4004, r24	; 0x804004 <AIN2_value>
 190:	90 93 05 40 	sts	0x4005, r25	; 0x804005 <AIN2_value+0x1>
 194:	08 95       	ret
 196:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <AIN_selected>
 19a:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <AIN_selected+0x1>
 19e:	03 97       	sbiw	r24, 0x03	; 3
 1a0:	49 f4       	brne	.+18     	; 0x1b4 <ADC0_assign_value+0x7e>
 1a2:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 1a6:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
 1aa:	80 93 02 40 	sts	0x4002, r24	; 0x804002 <AIN3_value>
 1ae:	90 93 03 40 	sts	0x4003, r25	; 0x804003 <AIN3_value+0x1>
 1b2:	08 95       	ret
 1b4:	80 91 27 40 	lds	r24, 0x4027	; 0x804027 <AIN_selected>
 1b8:	90 91 28 40 	lds	r25, 0x4028	; 0x804028 <AIN_selected+0x1>
 1bc:	04 97       	sbiw	r24, 0x04	; 4
 1be:	41 f4       	brne	.+16     	; 0x1d0 <ADC0_assign_value+0x9a>
 1c0:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
 1c4:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
 1c8:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
 1cc:	90 93 01 40 	sts	0x4001, r25	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
 1d0:	08 95       	ret

000001d2 <__vector_26>:
	USART3_transmitt_char_array(0, " selected\n", strlen(" selected\n"));
	#endif
}


ISR(ADC0_RESRDY_vect){
 1d2:	1f 92       	push	r1
 1d4:	0f 92       	push	r0
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	0f 92       	push	r0
 1da:	11 24       	eor	r1, r1
 1dc:	0b b6       	in	r0, 0x3b	; 59
 1de:	0f 92       	push	r0
 1e0:	2f 93       	push	r18
 1e2:	3f 93       	push	r19
 1e4:	4f 93       	push	r20
 1e6:	5f 93       	push	r21
 1e8:	6f 93       	push	r22
 1ea:	7f 93       	push	r23
 1ec:	8f 93       	push	r24
 1ee:	9f 93       	push	r25
 1f0:	af 93       	push	r26
 1f2:	bf 93       	push	r27
 1f4:	ef 93       	push	r30
 1f6:	ff 93       	push	r31
	ADC0_assign_value();	
 1f8:	0e 94 9b 00 	call	0x136	; 0x136 <ADC0_assign_value>
}
 1fc:	ff 91       	pop	r31
 1fe:	ef 91       	pop	r30
 200:	bf 91       	pop	r27
 202:	af 91       	pop	r26
 204:	9f 91       	pop	r25
 206:	8f 91       	pop	r24
 208:	7f 91       	pop	r23
 20a:	6f 91       	pop	r22
 20c:	5f 91       	pop	r21
 20e:	4f 91       	pop	r20
 210:	3f 91       	pop	r19
 212:	2f 91       	pop	r18
 214:	0f 90       	pop	r0
 216:	0b be       	out	0x3b, r0	; 59
 218:	0f 90       	pop	r0
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	0f 90       	pop	r0
 21e:	1f 90       	pop	r1
 220:	18 95       	reti

00000222 <CLKCTRL_INTERNAL_16M_init>:
	| 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
	| 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
}

void CLKCTRL_INTERNAL_16M_init(){
	ccp_write_io((void *)&(CLKCTRL.OSCHFCTRLA) ,CLKCTRL_FRQSEL_16M_gc         /* 16 MHz internal clock */
 222:	6c e1       	ldi	r22, 0x1C	; 28
 224:	88 e6       	ldi	r24, 0x68	; 104
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	0e 94 6d 05 	call	0xada	; 0xada <ccp_write_io>
 22c:	08 95       	ret

0000022e <button_init>:
	| 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
}


void button_init(void){
	PORTD.DIRCLR   = PIN5_bm | PIN6_bm | PIN7_bm;
 22e:	e0 e6       	ldi	r30, 0x60	; 96
 230:	f4 e0       	ldi	r31, 0x04	; 4
 232:	80 ee       	ldi	r24, 0xE0	; 224
 234:	82 83       	std	Z+2, r24	; 0x02
	PORTD.PIN5CTRL = PORT_PULLUPEN_bm | PORT_ISC_FALLING_gc;
 236:	8b e0       	ldi	r24, 0x0B	; 11
 238:	85 8b       	std	Z+21, r24	; 0x15
	PORTD.PIN6CTRL = PORT_PULLUPEN_bm | PORT_ISC_FALLING_gc;
 23a:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN7CTRL = PORT_PULLUPEN_bm | PORT_ISC_FALLING_gc;	
 23c:	87 8b       	std	Z+23, r24	; 0x17
	
	/* intterrupt for onboard button and led */
	PORTB.DIRCLR = PIN2_bm;
 23e:	e0 e2       	ldi	r30, 0x20	; 32
 240:	f4 e0       	ldi	r31, 0x04	; 4
 242:	84 e0       	ldi	r24, 0x04	; 4
 244:	82 83       	std	Z+2, r24	; 0x02
	//PORTB.IN |=1<<2;
	/* Sett LED0/PB3 pin som output */
	PORTB.DIRSET = PIN3_bm;
 246:	88 e0       	ldi	r24, 0x08	; 8
 248:	81 83       	std	Z+1, r24	; 0x01
 24a:	08 95       	ret

0000024c <button_handler>:
	#endif
}


void button_handler(){
	if(buttondown==1){		
 24c:	80 91 1f 40 	lds	r24, 0x401F	; 0x80401f <buttondown>
 250:	81 30       	cpi	r24, 0x01	; 1
 252:	19 f4       	brne	.+6      	; 0x25a <button_handler+0xe>
		//ButtonDownPressed();
		buttondown=0;	//Reset state of button
 254:	10 92 1f 40 	sts	0x401F, r1	; 0x80401f <buttondown>
 258:	08 95       	ret
		
		#ifdef debugmessages
		USART3_transmitt_char_array(0, "Button down pressed\n", strlen("Button down pressed\n"));
		#endif		
	}
	else if (buttonup==1){
 25a:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <buttonup>
 25e:	81 30       	cpi	r24, 0x01	; 1
 260:	19 f4       	brne	.+6      	; 0x268 <button_handler+0x1c>
		buttonup=0;	//Reset state of button
 262:	10 92 1e 40 	sts	0x401E, r1	; 0x80401e <buttonup>
 266:	08 95       	ret
		#ifdef debugmessages
		USART3_transmitt_char_array(0, "Button up pressed\n", strlen("Button up pressed\n"));
		#endif
		
	}
	else if (buttonenter==1){
 268:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <buttonenter>
 26c:	81 30       	cpi	r24, 0x01	; 1
 26e:	11 f4       	brne	.+4      	; 0x274 <button_handler+0x28>
		buttonenter=0;	//Reset state of button
 270:	10 92 1d 40 	sts	0x401D, r1	; 0x80401d <buttonenter>
 274:	08 95       	ret

00000276 <Initialize_system>:

#include "usart.h"
#include "variables.h"

void Initialize_system(void){
	CLKCTRL_INTERNAL_16M_init();
 276:	0e 94 11 01 	call	0x222	; 0x222 <CLKCTRL_INTERNAL_16M_init>
	
	USART3_init();		//initialize usart
 27a:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <USART3_init>
	button_init();
 27e:	0e 94 17 01 	call	0x22e	; 0x22e <button_init>
	I2C_0_init();		//initialize i2c
 282:	0e 94 4a 01 	call	0x294	; 0x294 <I2C_0_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 286:	83 ed       	ldi	r24, 0xD3	; 211
 288:	90 e3       	ldi	r25, 0x30	; 48
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <Initialize_system+0x14>
 28e:	00 c0       	rjmp	.+0      	; 0x290 <Initialize_system+0x1a>
 290:	00 00       	nop
 292:	08 95       	ret

00000294 <I2C_0_init>:



void I2C_0_init(void)
{
	TWI0.MBAUD = (uint8_t)TWI0_BAUD(I2C_SCL_FREQ, 0);	//Setting baudrate
 294:	e0 e0       	ldi	r30, 0x00	; 0
 296:	f9 e0       	ldi	r31, 0x09	; 9
 298:	83 e7       	ldi	r24, 0x73	; 115
 29a:	86 83       	std	Z+6, r24	; 0x06
	PORTMUX.TWIROUTEA = 0x02;		//Select pins to PC2/PC3
 29c:	82 e0       	ldi	r24, 0x02	; 2
 29e:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7e05e5>
	TWI0.MCTRLA = TWI_ENABLE_bm;	//Enable I2C
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	83 83       	std	Z+3, r24	; 0x03
	TWI0.MADDR = 0x00;				//Setting master address
 2a6:	17 82       	std	Z+7, r1	; 0x07
	TWI0.MDATA = 0x00;				//Initialize register
 2a8:	10 86       	std	Z+8, r1	; 0x08
	TWI0.MSTATUS = TWI_BUSSTATE_IDLE_gc;	//Set bus state to idle	
 2aa:	85 83       	std	Z+5, r24	; 0x05
 2ac:	08 95       	ret

000002ae <main>:
		
														*/


int main(void)
{	Initialize_system();
 2ae:	0e 94 3b 01 	call	0x276	; 0x276 <Initialize_system>
		
	USART3_transmitt_char_array(0, "All systems go\n", strlen("All systems go\n"));
 2b2:	4f e0       	ldi	r20, 0x0F	; 15
 2b4:	6b e0       	ldi	r22, 0x0B	; 11
 2b6:	70 e4       	ldi	r23, 0x40	; 64
 2b8:	80 e0       	ldi	r24, 0x00	; 0
 2ba:	0e 94 30 02 	call	0x460	; 0x460 <USART3_transmitt_char_array>
	sei();	
 2be:	78 94       	sei
	
	while(1){	
		
		button_handler();
 2c0:	0e 94 26 01 	call	0x24c	; 0x24c <button_handler>
 2c4:	fd cf       	rjmp	.-6      	; 0x2c0 <main+0x12>

000002c6 <__vector_45>:
				
    }
}

ISR(PORTB_PORT_vect){	//Curiosity nano button
 2c6:	1f 92       	push	r1
 2c8:	0f 92       	push	r0
 2ca:	0f b6       	in	r0, 0x3f	; 63
 2cc:	0f 92       	push	r0
 2ce:	11 24       	eor	r1, r1
 2d0:	0b b6       	in	r0, 0x3b	; 59
 2d2:	0f 92       	push	r0
 2d4:	8f 93       	push	r24
 2d6:	9f 93       	push	r25
 2d8:	ef 93       	push	r30
 2da:	ff 93       	push	r31
	// Check which pin triggered the interrupt
	now++;
 2dc:	80 91 69 40 	lds	r24, 0x4069	; 0x804069 <now>
 2e0:	90 91 6a 40 	lds	r25, 0x406A	; 0x80406a <now+0x1>
 2e4:	01 96       	adiw	r24, 0x01	; 1
 2e6:	80 93 69 40 	sts	0x4069, r24	; 0x804069 <now>
 2ea:	90 93 6a 40 	sts	0x406A, r25	; 0x80406a <now+0x1>
	PORTB.OUTTGL = PIN3_bm;		// Toggle LED0	
 2ee:	e0 e2       	ldi	r30, 0x20	; 32
 2f0:	f4 e0       	ldi	r31, 0x04	; 4
 2f2:	88 e0       	ldi	r24, 0x08	; 8
 2f4:	87 83       	std	Z+7, r24	; 0x07
	PORTB.INTFLAGS |= (1<<3);		// Reset interrupt flag	
 2f6:	81 85       	ldd	r24, Z+9	; 0x09
 2f8:	88 60       	ori	r24, 0x08	; 8
 2fa:	81 87       	std	Z+9, r24	; 0x09
}
 2fc:	ff 91       	pop	r31
 2fe:	ef 91       	pop	r30
 300:	9f 91       	pop	r25
 302:	8f 91       	pop	r24
 304:	0f 90       	pop	r0
 306:	0b be       	out	0x3b, r0	; 59
 308:	0f 90       	pop	r0
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	0f 90       	pop	r0
 30e:	1f 90       	pop	r1
 310:	18 95       	reti

00000312 <__vector_24>:

ISR(PORTD_PORT_vect){	// Button interrupt service routine
 312:	1f 92       	push	r1
 314:	0f 92       	push	r0
 316:	0f b6       	in	r0, 0x3f	; 63
 318:	0f 92       	push	r0
 31a:	11 24       	eor	r1, r1
 31c:	8f 93       	push	r24
	// Check which pin triggered the interrupt	
	PORTB.OUTTGL = PIN3_bm;	
 31e:	88 e0       	ldi	r24, 0x08	; 8
 320:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <__TEXT_REGION_LENGTH__+0x7e0427>
	if (PORTD.INTFLAGS & PIN5_bm) {
 324:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
 328:	85 ff       	sbrs	r24, 5
 32a:	07 c0       	rjmp	.+14     	; 0x33a <__vector_24+0x28>
		// Clear the interrupt flag
		buttondown = 1;
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <buttondown>
		PORTD.INTFLAGS = PIN5_bm;		
 332:	80 e2       	ldi	r24, 0x20	; 32
 334:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
 338:	15 c0       	rjmp	.+42     	; 0x364 <__vector_24+0x52>
	}
	else if (PORTD.INTFLAGS & PIN6_bm) {
 33a:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
 33e:	86 ff       	sbrs	r24, 6
 340:	07 c0       	rjmp	.+14     	; 0x350 <__vector_24+0x3e>
		// Clear the interrupt flag
		buttonenter=1;		
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <buttonenter>
		PORTD.INTFLAGS = PIN6_bm;		
 348:	80 e4       	ldi	r24, 0x40	; 64
 34a:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
 34e:	0a c0       	rjmp	.+20     	; 0x364 <__vector_24+0x52>
	}
	else if (PORTD.INTFLAGS & PIN7_bm) {
 350:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
 354:	88 23       	and	r24, r24
 356:	34 f4       	brge	.+12     	; 0x364 <__vector_24+0x52>
		// Clear the interrupt flag
		buttonup = 1;
 358:	81 e0       	ldi	r24, 0x01	; 1
 35a:	80 93 1e 40 	sts	0x401E, r24	; 0x80401e <buttonup>
		PORTD.INTFLAGS = PIN7_bm;		
 35e:	80 e8       	ldi	r24, 0x80	; 128
 360:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
	}	
}
 364:	8f 91       	pop	r24
 366:	0f 90       	pop	r0
 368:	0f be       	out	0x3f, r0	; 63
 36a:	0f 90       	pop	r0
 36c:	1f 90       	pop	r1
 36e:	18 95       	reti

00000370 <__vector_47>:
	//printf("%d\n", seconds_from_start);
	return;
}
*/

ISR(TCA1_OVF_vect){
 370:	1f 92       	push	r1
 372:	0f 92       	push	r0
 374:	0f b6       	in	r0, 0x3f	; 63
 376:	0f 92       	push	r0
 378:	11 24       	eor	r1, r1
 37a:	8f 93       	push	r24
 37c:	9f 93       	push	r25
 37e:	af 93       	push	r26
 380:	bf 93       	push	r27
	counted_25ms++;	
 382:	80 91 20 40 	lds	r24, 0x4020	; 0x804020 <counted_25ms>
 386:	90 91 21 40 	lds	r25, 0x4021	; 0x804021 <counted_25ms+0x1>
 38a:	a0 91 22 40 	lds	r26, 0x4022	; 0x804022 <counted_25ms+0x2>
 38e:	b0 91 23 40 	lds	r27, 0x4023	; 0x804023 <counted_25ms+0x3>
 392:	01 96       	adiw	r24, 0x01	; 1
 394:	a1 1d       	adc	r26, r1
 396:	b1 1d       	adc	r27, r1
 398:	80 93 20 40 	sts	0x4020, r24	; 0x804020 <counted_25ms>
 39c:	90 93 21 40 	sts	0x4021, r25	; 0x804021 <counted_25ms+0x1>
 3a0:	a0 93 22 40 	sts	0x4022, r26	; 0x804022 <counted_25ms+0x2>
 3a4:	b0 93 23 40 	sts	0x4023, r27	; 0x804023 <counted_25ms+0x3>
	TCA1.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	80 93 4b 0a 	sts	0x0A4B, r24	; 0x800a4b <__TEXT_REGION_LENGTH__+0x7e0a4b>
}
 3ae:	bf 91       	pop	r27
 3b0:	af 91       	pop	r26
 3b2:	9f 91       	pop	r25
 3b4:	8f 91       	pop	r24
 3b6:	0f 90       	pop	r0
 3b8:	0f be       	out	0x3f, r0	; 63
 3ba:	0f 90       	pop	r0
 3bc:	1f 90       	pop	r1
 3be:	18 95       	reti

000003c0 <USART3_init>:
		else if (c == '>'){	//Recognize end of message
			message_available = 1;	//Set flag for available message
		}
		else{
			message[marker_pos]=c;	//Append to message string
			marker_pos++;	//Increment message position
 3c0:	e0 e6       	ldi	r30, 0x60	; 96
 3c2:	f8 e0       	ldi	r31, 0x08	; 8
 3c4:	86 e1       	ldi	r24, 0x16	; 22
 3c6:	91 e0       	ldi	r25, 0x01	; 1
 3c8:	80 87       	std	Z+8, r24	; 0x08
 3ca:	91 87       	std	Z+9, r25	; 0x09
 3cc:	86 81       	ldd	r24, Z+6	; 0x06
 3ce:	82 6c       	ori	r24, 0xC2	; 194
 3d0:	86 83       	std	Z+6, r24	; 0x06
 3d2:	a0 e2       	ldi	r26, 0x20	; 32
 3d4:	b4 e0       	ldi	r27, 0x04	; 4
 3d6:	8c 91       	ld	r24, X
 3d8:	81 60       	ori	r24, 0x01	; 1
 3da:	8c 93       	st	X, r24
 3dc:	1d 96       	adiw	r26, 0x0d	; 13
 3de:	8c 91       	ld	r24, X
 3e0:	1d 97       	sbiw	r26, 0x0d	; 13
 3e2:	82 60       	ori	r24, 0x02	; 2
 3e4:	1d 96       	adiw	r26, 0x0d	; 13
 3e6:	8c 93       	st	X, r24
 3e8:	85 81       	ldd	r24, Z+5	; 0x05
 3ea:	80 68       	ori	r24, 0x80	; 128
 3ec:	85 83       	std	Z+5, r24	; 0x05
 3ee:	88 e0       	ldi	r24, 0x08	; 8
 3f0:	87 83       	std	Z+7, r24	; 0x07
 3f2:	83 e0       	ldi	r24, 0x03	; 3
 3f4:	87 83       	std	Z+7, r24	; 0x07
 3f6:	08 95       	ret

000003f8 <USART3_transmitt>:
 3f8:	e0 91 25 40 	lds	r30, 0x4025	; 0x804025 <TX_buffer_write>
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	ea 58       	subi	r30, 0x8A	; 138
 400:	ff 4b       	sbci	r31, 0xBF	; 191
 402:	80 83       	st	Z, r24
 404:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <TX_buffer_write>
 408:	8f 5f       	subi	r24, 0xFF	; 255
 40a:	80 93 25 40 	sts	0x4025, r24	; 0x804025 <TX_buffer_write>
 40e:	20 91 25 40 	lds	r18, 0x4025	; 0x804025 <TX_buffer_write>
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <TX_buffer_size>
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	01 96       	adiw	r24, 0x01	; 1
 41c:	28 17       	cp	r18, r24
 41e:	39 07       	cpc	r19, r25
 420:	11 f4       	brne	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	10 92 25 40 	sts	0x4025, r1	; 0x804025 <TX_buffer_write>
 426:	20 91 64 08 	lds	r18, 0x0864	; 0x800864 <__TEXT_REGION_LENGTH__+0x7e0864>
 42a:	25 ff       	sbrs	r18, 5
 42c:	15 c0       	rjmp	.+42     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 42e:	e0 91 24 40 	lds	r30, 0x4024	; 0x804024 <TX_buffer_read>
 432:	f0 e0       	ldi	r31, 0x00	; 0
 434:	ea 58       	subi	r30, 0x8A	; 138
 436:	ff 4b       	sbci	r31, 0xBF	; 191
 438:	20 81       	ld	r18, Z
 43a:	20 93 62 08 	sts	0x0862, r18	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
 43e:	20 91 24 40 	lds	r18, 0x4024	; 0x804024 <TX_buffer_read>
 442:	2f 5f       	subi	r18, 0xFF	; 255
 444:	20 93 24 40 	sts	0x4024, r18	; 0x804024 <TX_buffer_read>
 448:	20 91 24 40 	lds	r18, 0x4024	; 0x804024 <TX_buffer_read>
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	82 17       	cp	r24, r18
 450:	93 07       	cpc	r25, r19
 452:	11 f4       	brne	.+4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 454:	10 92 24 40 	sts	0x4024, r1	; 0x804024 <TX_buffer_read>
 458:	80 e6       	ldi	r24, 0x60	; 96
 45a:	8a 95       	dec	r24
 45c:	f1 f7       	brne	.-4      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 45e:	08 95       	ret

00000460 <USART3_transmitt_char_array>:
 460:	ff 92       	push	r15
 462:	0f 93       	push	r16
 464:	1f 93       	push	r17
 466:	cf 93       	push	r28
 468:	df 93       	push	r29
 46a:	f8 2e       	mov	r15, r24
 46c:	8b 01       	movw	r16, r22
 46e:	d4 2f       	mov	r29, r20
 470:	c0 e0       	ldi	r28, 0x00	; 0
 472:	07 c0       	rjmp	.+14     	; 0x482 <USART3_transmitt_char_array+0x22>
 474:	f8 01       	movw	r30, r16
 476:	ec 0f       	add	r30, r28
 478:	f1 1d       	adc	r31, r1
 47a:	80 81       	ld	r24, Z
 47c:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <USART3_transmitt>
 480:	cf 5f       	subi	r28, 0xFF	; 255
 482:	cd 17       	cp	r28, r29
 484:	b8 f3       	brcs	.-18     	; 0x474 <USART3_transmitt_char_array+0x14>
 486:	ff 20       	and	r15, r15
 488:	19 f0       	breq	.+6      	; 0x490 <USART3_transmitt_char_array+0x30>
 48a:	8a e0       	ldi	r24, 0x0A	; 10
 48c:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <USART3_transmitt>
 490:	df 91       	pop	r29
 492:	cf 91       	pop	r28
 494:	1f 91       	pop	r17
 496:	0f 91       	pop	r16
 498:	ff 90       	pop	r15
 49a:	08 95       	ret

0000049c <__vector_53>:
		
		}
	}
}

ISR(USART3_RXC_vect) {		
 49c:	1f 92       	push	r1
 49e:	0f 92       	push	r0
 4a0:	0f b6       	in	r0, 0x3f	; 63
 4a2:	0f 92       	push	r0
 4a4:	11 24       	eor	r1, r1
 4a6:	0b b6       	in	r0, 0x3b	; 59
 4a8:	0f 92       	push	r0
 4aa:	8f 93       	push	r24
 4ac:	ef 93       	push	r30
 4ae:	ff 93       	push	r31
	char tmp=USART3.RXDATAL;
 4b0:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
	RX_buffer[RX_buffer_write]=tmp;
 4b4:	e0 91 26 40 	lds	r30, 0x4026	; 0x804026 <RX_buffer_write>
 4b8:	f0 e0       	ldi	r31, 0x00	; 0
 4ba:	e8 55       	subi	r30, 0x58	; 88
 4bc:	ff 4b       	sbci	r31, 0xBF	; 191
 4be:	80 83       	st	Z, r24
	RX_buffer_write++;
 4c0:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <RX_buffer_write>
 4c4:	8f 5f       	subi	r24, 0xFF	; 255
 4c6:	80 93 26 40 	sts	0x4026, r24	; 0x804026 <RX_buffer_write>
	if (RX_buffer_write==51)	{
 4ca:	80 91 26 40 	lds	r24, 0x4026	; 0x804026 <RX_buffer_write>
 4ce:	83 33       	cpi	r24, 0x33	; 51
 4d0:	11 f4       	brne	.+4      	; 0x4d6 <__vector_53+0x3a>
		RX_buffer_write=0;
 4d2:	10 92 26 40 	sts	0x4026, r1	; 0x804026 <RX_buffer_write>
	}
		
}
 4d6:	ff 91       	pop	r31
 4d8:	ef 91       	pop	r30
 4da:	8f 91       	pop	r24
 4dc:	0f 90       	pop	r0
 4de:	0b be       	out	0x3b, r0	; 59
 4e0:	0f 90       	pop	r0
 4e2:	0f be       	out	0x3f, r0	; 63
 4e4:	0f 90       	pop	r0
 4e6:	1f 90       	pop	r1
 4e8:	18 95       	reti

000004ea <__vector_55>:


ISR(USART3_TXC_vect){	//Usart transmitt interrupt service routine
 4ea:	1f 92       	push	r1
 4ec:	0f 92       	push	r0
 4ee:	0f b6       	in	r0, 0x3f	; 63
 4f0:	0f 92       	push	r0
 4f2:	11 24       	eor	r1, r1
 4f4:	0b b6       	in	r0, 0x3b	; 59
 4f6:	0f 92       	push	r0
 4f8:	2f 93       	push	r18
 4fa:	3f 93       	push	r19
 4fc:	8f 93       	push	r24
 4fe:	9f 93       	push	r25
 500:	ef 93       	push	r30
 502:	ff 93       	push	r31
	if(TX_buffer_read!=TX_buffer_write){	//if there is not anything unread in buffer
 504:	90 91 24 40 	lds	r25, 0x4024	; 0x804024 <TX_buffer_read>
 508:	80 91 25 40 	lds	r24, 0x4025	; 0x804025 <TX_buffer_write>
 50c:	98 17       	cp	r25, r24
 50e:	f9 f0       	breq	.+62     	; 0x54e <__vector_55+0x64>
		USART3.TXDATAL = TX_buffer[TX_buffer_read];	//Transmitt the next char
 510:	e0 91 24 40 	lds	r30, 0x4024	; 0x804024 <TX_buffer_read>
 514:	f0 e0       	ldi	r31, 0x00	; 0
 516:	ea 58       	subi	r30, 0x8A	; 138
 518:	ff 4b       	sbci	r31, 0xBF	; 191
 51a:	80 81       	ld	r24, Z
 51c:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
		TX_buffer_read++;//Increment read position
 520:	80 91 24 40 	lds	r24, 0x4024	; 0x804024 <TX_buffer_read>
 524:	8f 5f       	subi	r24, 0xFF	; 255
 526:	80 93 24 40 	sts	0x4024, r24	; 0x804024 <TX_buffer_read>
		if (TX_buffer_read ==(TX_buffer_size+1)){//Reset position at end of array
 52a:	20 91 24 40 	lds	r18, 0x4024	; 0x804024 <TX_buffer_read>
 52e:	30 e0       	ldi	r19, 0x00	; 0
 530:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <TX_buffer_size>
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	01 96       	adiw	r24, 0x01	; 1
 538:	28 17       	cp	r18, r24
 53a:	39 07       	cpc	r19, r25
 53c:	11 f4       	brne	.+4      	; 0x542 <__vector_55+0x58>
			TX_buffer_read=0;
 53e:	10 92 24 40 	sts	0x4024, r1	; 0x804024 <TX_buffer_read>
		}
		USART3.STATUS |= USART_TXCIF_bm;	//reset interrupt flag
 542:	e0 e6       	ldi	r30, 0x60	; 96
 544:	f8 e0       	ldi	r31, 0x08	; 8
 546:	84 81       	ldd	r24, Z+4	; 0x04
 548:	80 64       	ori	r24, 0x40	; 64
 54a:	84 83       	std	Z+4, r24	; 0x04
 54c:	05 c0       	rjmp	.+10     	; 0x558 <__vector_55+0x6e>
	}
	else// no problems
	USART3.STATUS |= USART_TXCIF_bm;	//reset interrupt flag
 54e:	e0 e6       	ldi	r30, 0x60	; 96
 550:	f8 e0       	ldi	r31, 0x08	; 8
 552:	84 81       	ldd	r24, Z+4	; 0x04
 554:	80 64       	ori	r24, 0x40	; 64
 556:	84 83       	std	Z+4, r24	; 0x04
	
}
 558:	ff 91       	pop	r31
 55a:	ef 91       	pop	r30
 55c:	9f 91       	pop	r25
 55e:	8f 91       	pop	r24
 560:	3f 91       	pop	r19
 562:	2f 91       	pop	r18
 564:	0f 90       	pop	r0
 566:	0b be       	out	0x3b, r0	; 59
 568:	0f 90       	pop	r0
 56a:	0f be       	out	0x3f, r0	; 63
 56c:	0f 90       	pop	r0
 56e:	1f 90       	pop	r1
 570:	18 95       	reti

00000572 <vfprintf>:
 572:	2f 92       	push	r2
 574:	3f 92       	push	r3
 576:	4f 92       	push	r4
 578:	5f 92       	push	r5
 57a:	6f 92       	push	r6
 57c:	7f 92       	push	r7
 57e:	8f 92       	push	r8
 580:	9f 92       	push	r9
 582:	af 92       	push	r10
 584:	bf 92       	push	r11
 586:	cf 92       	push	r12
 588:	df 92       	push	r13
 58a:	ef 92       	push	r14
 58c:	ff 92       	push	r15
 58e:	0f 93       	push	r16
 590:	1f 93       	push	r17
 592:	cf 93       	push	r28
 594:	df 93       	push	r29
 596:	cd b7       	in	r28, 0x3d	; 61
 598:	de b7       	in	r29, 0x3e	; 62
 59a:	2b 97       	sbiw	r28, 0x0b	; 11
 59c:	cd bf       	out	0x3d, r28	; 61
 59e:	de bf       	out	0x3e, r29	; 62
 5a0:	6c 01       	movw	r12, r24
 5a2:	7b 01       	movw	r14, r22
 5a4:	8a 01       	movw	r16, r20
 5a6:	fc 01       	movw	r30, r24
 5a8:	16 82       	std	Z+6, r1	; 0x06
 5aa:	17 82       	std	Z+7, r1	; 0x07
 5ac:	83 81       	ldd	r24, Z+3	; 0x03
 5ae:	81 ff       	sbrs	r24, 1
 5b0:	cc c1       	rjmp	.+920    	; 0x94a <vfprintf+0x3d8>
 5b2:	ce 01       	movw	r24, r28
 5b4:	01 96       	adiw	r24, 0x01	; 1
 5b6:	3c 01       	movw	r6, r24
 5b8:	f6 01       	movw	r30, r12
 5ba:	93 81       	ldd	r25, Z+3	; 0x03
 5bc:	f7 01       	movw	r30, r14
 5be:	93 fd       	sbrc	r25, 3
 5c0:	85 91       	lpm	r24, Z+
 5c2:	93 ff       	sbrs	r25, 3
 5c4:	81 91       	ld	r24, Z+
 5c6:	7f 01       	movw	r14, r30
 5c8:	88 23       	and	r24, r24
 5ca:	09 f4       	brne	.+2      	; 0x5ce <vfprintf+0x5c>
 5cc:	ba c1       	rjmp	.+884    	; 0x942 <vfprintf+0x3d0>
 5ce:	85 32       	cpi	r24, 0x25	; 37
 5d0:	39 f4       	brne	.+14     	; 0x5e0 <vfprintf+0x6e>
 5d2:	93 fd       	sbrc	r25, 3
 5d4:	85 91       	lpm	r24, Z+
 5d6:	93 ff       	sbrs	r25, 3
 5d8:	81 91       	ld	r24, Z+
 5da:	7f 01       	movw	r14, r30
 5dc:	85 32       	cpi	r24, 0x25	; 37
 5de:	29 f4       	brne	.+10     	; 0x5ea <vfprintf+0x78>
 5e0:	b6 01       	movw	r22, r12
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 5e8:	e7 cf       	rjmp	.-50     	; 0x5b8 <vfprintf+0x46>
 5ea:	91 2c       	mov	r9, r1
 5ec:	21 2c       	mov	r2, r1
 5ee:	31 2c       	mov	r3, r1
 5f0:	ff e1       	ldi	r31, 0x1F	; 31
 5f2:	f3 15       	cp	r31, r3
 5f4:	d8 f0       	brcs	.+54     	; 0x62c <vfprintf+0xba>
 5f6:	8b 32       	cpi	r24, 0x2B	; 43
 5f8:	79 f0       	breq	.+30     	; 0x618 <vfprintf+0xa6>
 5fa:	38 f4       	brcc	.+14     	; 0x60a <vfprintf+0x98>
 5fc:	80 32       	cpi	r24, 0x20	; 32
 5fe:	79 f0       	breq	.+30     	; 0x61e <vfprintf+0xac>
 600:	83 32       	cpi	r24, 0x23	; 35
 602:	a1 f4       	brne	.+40     	; 0x62c <vfprintf+0xba>
 604:	23 2d       	mov	r18, r3
 606:	20 61       	ori	r18, 0x10	; 16
 608:	1d c0       	rjmp	.+58     	; 0x644 <vfprintf+0xd2>
 60a:	8d 32       	cpi	r24, 0x2D	; 45
 60c:	61 f0       	breq	.+24     	; 0x626 <vfprintf+0xb4>
 60e:	80 33       	cpi	r24, 0x30	; 48
 610:	69 f4       	brne	.+26     	; 0x62c <vfprintf+0xba>
 612:	23 2d       	mov	r18, r3
 614:	21 60       	ori	r18, 0x01	; 1
 616:	16 c0       	rjmp	.+44     	; 0x644 <vfprintf+0xd2>
 618:	83 2d       	mov	r24, r3
 61a:	82 60       	ori	r24, 0x02	; 2
 61c:	38 2e       	mov	r3, r24
 61e:	e3 2d       	mov	r30, r3
 620:	e4 60       	ori	r30, 0x04	; 4
 622:	3e 2e       	mov	r3, r30
 624:	2a c0       	rjmp	.+84     	; 0x67a <vfprintf+0x108>
 626:	f3 2d       	mov	r31, r3
 628:	f8 60       	ori	r31, 0x08	; 8
 62a:	1d c0       	rjmp	.+58     	; 0x666 <vfprintf+0xf4>
 62c:	37 fc       	sbrc	r3, 7
 62e:	2d c0       	rjmp	.+90     	; 0x68a <vfprintf+0x118>
 630:	20 ed       	ldi	r18, 0xD0	; 208
 632:	28 0f       	add	r18, r24
 634:	2a 30       	cpi	r18, 0x0A	; 10
 636:	40 f0       	brcs	.+16     	; 0x648 <vfprintf+0xd6>
 638:	8e 32       	cpi	r24, 0x2E	; 46
 63a:	b9 f4       	brne	.+46     	; 0x66a <vfprintf+0xf8>
 63c:	36 fc       	sbrc	r3, 6
 63e:	81 c1       	rjmp	.+770    	; 0x942 <vfprintf+0x3d0>
 640:	23 2d       	mov	r18, r3
 642:	20 64       	ori	r18, 0x40	; 64
 644:	32 2e       	mov	r3, r18
 646:	19 c0       	rjmp	.+50     	; 0x67a <vfprintf+0x108>
 648:	36 fe       	sbrs	r3, 6
 64a:	06 c0       	rjmp	.+12     	; 0x658 <vfprintf+0xe6>
 64c:	8a e0       	ldi	r24, 0x0A	; 10
 64e:	98 9e       	mul	r9, r24
 650:	20 0d       	add	r18, r0
 652:	11 24       	eor	r1, r1
 654:	92 2e       	mov	r9, r18
 656:	11 c0       	rjmp	.+34     	; 0x67a <vfprintf+0x108>
 658:	ea e0       	ldi	r30, 0x0A	; 10
 65a:	2e 9e       	mul	r2, r30
 65c:	20 0d       	add	r18, r0
 65e:	11 24       	eor	r1, r1
 660:	22 2e       	mov	r2, r18
 662:	f3 2d       	mov	r31, r3
 664:	f0 62       	ori	r31, 0x20	; 32
 666:	3f 2e       	mov	r3, r31
 668:	08 c0       	rjmp	.+16     	; 0x67a <vfprintf+0x108>
 66a:	8c 36       	cpi	r24, 0x6C	; 108
 66c:	21 f4       	brne	.+8      	; 0x676 <vfprintf+0x104>
 66e:	83 2d       	mov	r24, r3
 670:	80 68       	ori	r24, 0x80	; 128
 672:	38 2e       	mov	r3, r24
 674:	02 c0       	rjmp	.+4      	; 0x67a <vfprintf+0x108>
 676:	88 36       	cpi	r24, 0x68	; 104
 678:	41 f4       	brne	.+16     	; 0x68a <vfprintf+0x118>
 67a:	f7 01       	movw	r30, r14
 67c:	93 fd       	sbrc	r25, 3
 67e:	85 91       	lpm	r24, Z+
 680:	93 ff       	sbrs	r25, 3
 682:	81 91       	ld	r24, Z+
 684:	7f 01       	movw	r14, r30
 686:	81 11       	cpse	r24, r1
 688:	b3 cf       	rjmp	.-154    	; 0x5f0 <vfprintf+0x7e>
 68a:	98 2f       	mov	r25, r24
 68c:	9f 7d       	andi	r25, 0xDF	; 223
 68e:	95 54       	subi	r25, 0x45	; 69
 690:	93 30       	cpi	r25, 0x03	; 3
 692:	28 f4       	brcc	.+10     	; 0x69e <vfprintf+0x12c>
 694:	0c 5f       	subi	r16, 0xFC	; 252
 696:	1f 4f       	sbci	r17, 0xFF	; 255
 698:	9f e3       	ldi	r25, 0x3F	; 63
 69a:	99 83       	std	Y+1, r25	; 0x01
 69c:	0d c0       	rjmp	.+26     	; 0x6b8 <vfprintf+0x146>
 69e:	83 36       	cpi	r24, 0x63	; 99
 6a0:	31 f0       	breq	.+12     	; 0x6ae <vfprintf+0x13c>
 6a2:	83 37       	cpi	r24, 0x73	; 115
 6a4:	71 f0       	breq	.+28     	; 0x6c2 <vfprintf+0x150>
 6a6:	83 35       	cpi	r24, 0x53	; 83
 6a8:	09 f0       	breq	.+2      	; 0x6ac <vfprintf+0x13a>
 6aa:	59 c0       	rjmp	.+178    	; 0x75e <vfprintf+0x1ec>
 6ac:	21 c0       	rjmp	.+66     	; 0x6f0 <vfprintf+0x17e>
 6ae:	f8 01       	movw	r30, r16
 6b0:	80 81       	ld	r24, Z
 6b2:	89 83       	std	Y+1, r24	; 0x01
 6b4:	0e 5f       	subi	r16, 0xFE	; 254
 6b6:	1f 4f       	sbci	r17, 0xFF	; 255
 6b8:	88 24       	eor	r8, r8
 6ba:	83 94       	inc	r8
 6bc:	91 2c       	mov	r9, r1
 6be:	53 01       	movw	r10, r6
 6c0:	13 c0       	rjmp	.+38     	; 0x6e8 <vfprintf+0x176>
 6c2:	28 01       	movw	r4, r16
 6c4:	f2 e0       	ldi	r31, 0x02	; 2
 6c6:	4f 0e       	add	r4, r31
 6c8:	51 1c       	adc	r5, r1
 6ca:	f8 01       	movw	r30, r16
 6cc:	a0 80       	ld	r10, Z
 6ce:	b1 80       	ldd	r11, Z+1	; 0x01
 6d0:	36 fe       	sbrs	r3, 6
 6d2:	03 c0       	rjmp	.+6      	; 0x6da <vfprintf+0x168>
 6d4:	69 2d       	mov	r22, r9
 6d6:	70 e0       	ldi	r23, 0x00	; 0
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <vfprintf+0x16c>
 6da:	6f ef       	ldi	r22, 0xFF	; 255
 6dc:	7f ef       	ldi	r23, 0xFF	; 255
 6de:	c5 01       	movw	r24, r10
 6e0:	0e 94 c8 04 	call	0x990	; 0x990 <strnlen>
 6e4:	4c 01       	movw	r8, r24
 6e6:	82 01       	movw	r16, r4
 6e8:	f3 2d       	mov	r31, r3
 6ea:	ff 77       	andi	r31, 0x7F	; 127
 6ec:	3f 2e       	mov	r3, r31
 6ee:	16 c0       	rjmp	.+44     	; 0x71c <vfprintf+0x1aa>
 6f0:	28 01       	movw	r4, r16
 6f2:	22 e0       	ldi	r18, 0x02	; 2
 6f4:	42 0e       	add	r4, r18
 6f6:	51 1c       	adc	r5, r1
 6f8:	f8 01       	movw	r30, r16
 6fa:	a0 80       	ld	r10, Z
 6fc:	b1 80       	ldd	r11, Z+1	; 0x01
 6fe:	36 fe       	sbrs	r3, 6
 700:	03 c0       	rjmp	.+6      	; 0x708 <vfprintf+0x196>
 702:	69 2d       	mov	r22, r9
 704:	70 e0       	ldi	r23, 0x00	; 0
 706:	02 c0       	rjmp	.+4      	; 0x70c <vfprintf+0x19a>
 708:	6f ef       	ldi	r22, 0xFF	; 255
 70a:	7f ef       	ldi	r23, 0xFF	; 255
 70c:	c5 01       	movw	r24, r10
 70e:	0e 94 bd 04 	call	0x97a	; 0x97a <strnlen_P>
 712:	4c 01       	movw	r8, r24
 714:	f3 2d       	mov	r31, r3
 716:	f0 68       	ori	r31, 0x80	; 128
 718:	3f 2e       	mov	r3, r31
 71a:	82 01       	movw	r16, r4
 71c:	33 fc       	sbrc	r3, 3
 71e:	1b c0       	rjmp	.+54     	; 0x756 <vfprintf+0x1e4>
 720:	82 2d       	mov	r24, r2
 722:	90 e0       	ldi	r25, 0x00	; 0
 724:	88 16       	cp	r8, r24
 726:	99 06       	cpc	r9, r25
 728:	b0 f4       	brcc	.+44     	; 0x756 <vfprintf+0x1e4>
 72a:	b6 01       	movw	r22, r12
 72c:	80 e2       	ldi	r24, 0x20	; 32
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 734:	2a 94       	dec	r2
 736:	f4 cf       	rjmp	.-24     	; 0x720 <vfprintf+0x1ae>
 738:	f5 01       	movw	r30, r10
 73a:	37 fc       	sbrc	r3, 7
 73c:	85 91       	lpm	r24, Z+
 73e:	37 fe       	sbrs	r3, 7
 740:	81 91       	ld	r24, Z+
 742:	5f 01       	movw	r10, r30
 744:	b6 01       	movw	r22, r12
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 74c:	21 10       	cpse	r2, r1
 74e:	2a 94       	dec	r2
 750:	21 e0       	ldi	r18, 0x01	; 1
 752:	82 1a       	sub	r8, r18
 754:	91 08       	sbc	r9, r1
 756:	81 14       	cp	r8, r1
 758:	91 04       	cpc	r9, r1
 75a:	71 f7       	brne	.-36     	; 0x738 <vfprintf+0x1c6>
 75c:	e8 c0       	rjmp	.+464    	; 0x92e <vfprintf+0x3bc>
 75e:	84 36       	cpi	r24, 0x64	; 100
 760:	11 f0       	breq	.+4      	; 0x766 <vfprintf+0x1f4>
 762:	89 36       	cpi	r24, 0x69	; 105
 764:	41 f5       	brne	.+80     	; 0x7b6 <vfprintf+0x244>
 766:	f8 01       	movw	r30, r16
 768:	37 fe       	sbrs	r3, 7
 76a:	07 c0       	rjmp	.+14     	; 0x77a <vfprintf+0x208>
 76c:	60 81       	ld	r22, Z
 76e:	71 81       	ldd	r23, Z+1	; 0x01
 770:	82 81       	ldd	r24, Z+2	; 0x02
 772:	93 81       	ldd	r25, Z+3	; 0x03
 774:	0c 5f       	subi	r16, 0xFC	; 252
 776:	1f 4f       	sbci	r17, 0xFF	; 255
 778:	08 c0       	rjmp	.+16     	; 0x78a <vfprintf+0x218>
 77a:	60 81       	ld	r22, Z
 77c:	71 81       	ldd	r23, Z+1	; 0x01
 77e:	07 2e       	mov	r0, r23
 780:	00 0c       	add	r0, r0
 782:	88 0b       	sbc	r24, r24
 784:	99 0b       	sbc	r25, r25
 786:	0e 5f       	subi	r16, 0xFE	; 254
 788:	1f 4f       	sbci	r17, 0xFF	; 255
 78a:	f3 2d       	mov	r31, r3
 78c:	ff 76       	andi	r31, 0x6F	; 111
 78e:	3f 2e       	mov	r3, r31
 790:	97 ff       	sbrs	r25, 7
 792:	09 c0       	rjmp	.+18     	; 0x7a6 <vfprintf+0x234>
 794:	90 95       	com	r25
 796:	80 95       	com	r24
 798:	70 95       	com	r23
 79a:	61 95       	neg	r22
 79c:	7f 4f       	sbci	r23, 0xFF	; 255
 79e:	8f 4f       	sbci	r24, 0xFF	; 255
 7a0:	9f 4f       	sbci	r25, 0xFF	; 255
 7a2:	f0 68       	ori	r31, 0x80	; 128
 7a4:	3f 2e       	mov	r3, r31
 7a6:	2a e0       	ldi	r18, 0x0A	; 10
 7a8:	30 e0       	ldi	r19, 0x00	; 0
 7aa:	a3 01       	movw	r20, r6
 7ac:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__ultoa_invert>
 7b0:	88 2e       	mov	r8, r24
 7b2:	86 18       	sub	r8, r6
 7b4:	45 c0       	rjmp	.+138    	; 0x840 <vfprintf+0x2ce>
 7b6:	85 37       	cpi	r24, 0x75	; 117
 7b8:	31 f4       	brne	.+12     	; 0x7c6 <vfprintf+0x254>
 7ba:	23 2d       	mov	r18, r3
 7bc:	2f 7e       	andi	r18, 0xEF	; 239
 7be:	b2 2e       	mov	r11, r18
 7c0:	2a e0       	ldi	r18, 0x0A	; 10
 7c2:	30 e0       	ldi	r19, 0x00	; 0
 7c4:	25 c0       	rjmp	.+74     	; 0x810 <vfprintf+0x29e>
 7c6:	93 2d       	mov	r25, r3
 7c8:	99 7f       	andi	r25, 0xF9	; 249
 7ca:	b9 2e       	mov	r11, r25
 7cc:	8f 36       	cpi	r24, 0x6F	; 111
 7ce:	c1 f0       	breq	.+48     	; 0x800 <vfprintf+0x28e>
 7d0:	18 f4       	brcc	.+6      	; 0x7d8 <vfprintf+0x266>
 7d2:	88 35       	cpi	r24, 0x58	; 88
 7d4:	79 f0       	breq	.+30     	; 0x7f4 <vfprintf+0x282>
 7d6:	b5 c0       	rjmp	.+362    	; 0x942 <vfprintf+0x3d0>
 7d8:	80 37       	cpi	r24, 0x70	; 112
 7da:	19 f0       	breq	.+6      	; 0x7e2 <vfprintf+0x270>
 7dc:	88 37       	cpi	r24, 0x78	; 120
 7de:	21 f0       	breq	.+8      	; 0x7e8 <vfprintf+0x276>
 7e0:	b0 c0       	rjmp	.+352    	; 0x942 <vfprintf+0x3d0>
 7e2:	e9 2f       	mov	r30, r25
 7e4:	e0 61       	ori	r30, 0x10	; 16
 7e6:	be 2e       	mov	r11, r30
 7e8:	b4 fe       	sbrs	r11, 4
 7ea:	0d c0       	rjmp	.+26     	; 0x806 <vfprintf+0x294>
 7ec:	fb 2d       	mov	r31, r11
 7ee:	f4 60       	ori	r31, 0x04	; 4
 7f0:	bf 2e       	mov	r11, r31
 7f2:	09 c0       	rjmp	.+18     	; 0x806 <vfprintf+0x294>
 7f4:	34 fe       	sbrs	r3, 4
 7f6:	0a c0       	rjmp	.+20     	; 0x80c <vfprintf+0x29a>
 7f8:	29 2f       	mov	r18, r25
 7fa:	26 60       	ori	r18, 0x06	; 6
 7fc:	b2 2e       	mov	r11, r18
 7fe:	06 c0       	rjmp	.+12     	; 0x80c <vfprintf+0x29a>
 800:	28 e0       	ldi	r18, 0x08	; 8
 802:	30 e0       	ldi	r19, 0x00	; 0
 804:	05 c0       	rjmp	.+10     	; 0x810 <vfprintf+0x29e>
 806:	20 e1       	ldi	r18, 0x10	; 16
 808:	30 e0       	ldi	r19, 0x00	; 0
 80a:	02 c0       	rjmp	.+4      	; 0x810 <vfprintf+0x29e>
 80c:	20 e1       	ldi	r18, 0x10	; 16
 80e:	32 e0       	ldi	r19, 0x02	; 2
 810:	f8 01       	movw	r30, r16
 812:	b7 fe       	sbrs	r11, 7
 814:	07 c0       	rjmp	.+14     	; 0x824 <vfprintf+0x2b2>
 816:	60 81       	ld	r22, Z
 818:	71 81       	ldd	r23, Z+1	; 0x01
 81a:	82 81       	ldd	r24, Z+2	; 0x02
 81c:	93 81       	ldd	r25, Z+3	; 0x03
 81e:	0c 5f       	subi	r16, 0xFC	; 252
 820:	1f 4f       	sbci	r17, 0xFF	; 255
 822:	06 c0       	rjmp	.+12     	; 0x830 <vfprintf+0x2be>
 824:	60 81       	ld	r22, Z
 826:	71 81       	ldd	r23, Z+1	; 0x01
 828:	80 e0       	ldi	r24, 0x00	; 0
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 5f       	subi	r16, 0xFE	; 254
 82e:	1f 4f       	sbci	r17, 0xFF	; 255
 830:	a3 01       	movw	r20, r6
 832:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__ultoa_invert>
 836:	88 2e       	mov	r8, r24
 838:	86 18       	sub	r8, r6
 83a:	fb 2d       	mov	r31, r11
 83c:	ff 77       	andi	r31, 0x7F	; 127
 83e:	3f 2e       	mov	r3, r31
 840:	36 fe       	sbrs	r3, 6
 842:	0d c0       	rjmp	.+26     	; 0x85e <vfprintf+0x2ec>
 844:	23 2d       	mov	r18, r3
 846:	2e 7f       	andi	r18, 0xFE	; 254
 848:	a2 2e       	mov	r10, r18
 84a:	89 14       	cp	r8, r9
 84c:	58 f4       	brcc	.+22     	; 0x864 <vfprintf+0x2f2>
 84e:	34 fe       	sbrs	r3, 4
 850:	0b c0       	rjmp	.+22     	; 0x868 <vfprintf+0x2f6>
 852:	32 fc       	sbrc	r3, 2
 854:	09 c0       	rjmp	.+18     	; 0x868 <vfprintf+0x2f6>
 856:	83 2d       	mov	r24, r3
 858:	8e 7e       	andi	r24, 0xEE	; 238
 85a:	a8 2e       	mov	r10, r24
 85c:	05 c0       	rjmp	.+10     	; 0x868 <vfprintf+0x2f6>
 85e:	b8 2c       	mov	r11, r8
 860:	a3 2c       	mov	r10, r3
 862:	03 c0       	rjmp	.+6      	; 0x86a <vfprintf+0x2f8>
 864:	b8 2c       	mov	r11, r8
 866:	01 c0       	rjmp	.+2      	; 0x86a <vfprintf+0x2f8>
 868:	b9 2c       	mov	r11, r9
 86a:	a4 fe       	sbrs	r10, 4
 86c:	0f c0       	rjmp	.+30     	; 0x88c <vfprintf+0x31a>
 86e:	fe 01       	movw	r30, r28
 870:	e8 0d       	add	r30, r8
 872:	f1 1d       	adc	r31, r1
 874:	80 81       	ld	r24, Z
 876:	80 33       	cpi	r24, 0x30	; 48
 878:	21 f4       	brne	.+8      	; 0x882 <vfprintf+0x310>
 87a:	9a 2d       	mov	r25, r10
 87c:	99 7e       	andi	r25, 0xE9	; 233
 87e:	a9 2e       	mov	r10, r25
 880:	09 c0       	rjmp	.+18     	; 0x894 <vfprintf+0x322>
 882:	a2 fe       	sbrs	r10, 2
 884:	06 c0       	rjmp	.+12     	; 0x892 <vfprintf+0x320>
 886:	b3 94       	inc	r11
 888:	b3 94       	inc	r11
 88a:	04 c0       	rjmp	.+8      	; 0x894 <vfprintf+0x322>
 88c:	8a 2d       	mov	r24, r10
 88e:	86 78       	andi	r24, 0x86	; 134
 890:	09 f0       	breq	.+2      	; 0x894 <vfprintf+0x322>
 892:	b3 94       	inc	r11
 894:	a3 fc       	sbrc	r10, 3
 896:	11 c0       	rjmp	.+34     	; 0x8ba <vfprintf+0x348>
 898:	a0 fe       	sbrs	r10, 0
 89a:	06 c0       	rjmp	.+12     	; 0x8a8 <vfprintf+0x336>
 89c:	b2 14       	cp	r11, r2
 89e:	88 f4       	brcc	.+34     	; 0x8c2 <vfprintf+0x350>
 8a0:	28 0c       	add	r2, r8
 8a2:	92 2c       	mov	r9, r2
 8a4:	9b 18       	sub	r9, r11
 8a6:	0e c0       	rjmp	.+28     	; 0x8c4 <vfprintf+0x352>
 8a8:	b2 14       	cp	r11, r2
 8aa:	60 f4       	brcc	.+24     	; 0x8c4 <vfprintf+0x352>
 8ac:	b6 01       	movw	r22, r12
 8ae:	80 e2       	ldi	r24, 0x20	; 32
 8b0:	90 e0       	ldi	r25, 0x00	; 0
 8b2:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 8b6:	b3 94       	inc	r11
 8b8:	f7 cf       	rjmp	.-18     	; 0x8a8 <vfprintf+0x336>
 8ba:	b2 14       	cp	r11, r2
 8bc:	18 f4       	brcc	.+6      	; 0x8c4 <vfprintf+0x352>
 8be:	2b 18       	sub	r2, r11
 8c0:	02 c0       	rjmp	.+4      	; 0x8c6 <vfprintf+0x354>
 8c2:	98 2c       	mov	r9, r8
 8c4:	21 2c       	mov	r2, r1
 8c6:	a4 fe       	sbrs	r10, 4
 8c8:	10 c0       	rjmp	.+32     	; 0x8ea <vfprintf+0x378>
 8ca:	b6 01       	movw	r22, r12
 8cc:	80 e3       	ldi	r24, 0x30	; 48
 8ce:	90 e0       	ldi	r25, 0x00	; 0
 8d0:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 8d4:	a2 fe       	sbrs	r10, 2
 8d6:	17 c0       	rjmp	.+46     	; 0x906 <vfprintf+0x394>
 8d8:	a1 fc       	sbrc	r10, 1
 8da:	03 c0       	rjmp	.+6      	; 0x8e2 <vfprintf+0x370>
 8dc:	88 e7       	ldi	r24, 0x78	; 120
 8de:	90 e0       	ldi	r25, 0x00	; 0
 8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <vfprintf+0x374>
 8e2:	88 e5       	ldi	r24, 0x58	; 88
 8e4:	90 e0       	ldi	r25, 0x00	; 0
 8e6:	b6 01       	movw	r22, r12
 8e8:	0c c0       	rjmp	.+24     	; 0x902 <vfprintf+0x390>
 8ea:	8a 2d       	mov	r24, r10
 8ec:	86 78       	andi	r24, 0x86	; 134
 8ee:	59 f0       	breq	.+22     	; 0x906 <vfprintf+0x394>
 8f0:	a1 fe       	sbrs	r10, 1
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <vfprintf+0x386>
 8f4:	8b e2       	ldi	r24, 0x2B	; 43
 8f6:	01 c0       	rjmp	.+2      	; 0x8fa <vfprintf+0x388>
 8f8:	80 e2       	ldi	r24, 0x20	; 32
 8fa:	a7 fc       	sbrc	r10, 7
 8fc:	8d e2       	ldi	r24, 0x2D	; 45
 8fe:	b6 01       	movw	r22, r12
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 906:	89 14       	cp	r8, r9
 908:	38 f4       	brcc	.+14     	; 0x918 <vfprintf+0x3a6>
 90a:	b6 01       	movw	r22, r12
 90c:	80 e3       	ldi	r24, 0x30	; 48
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 914:	9a 94       	dec	r9
 916:	f7 cf       	rjmp	.-18     	; 0x906 <vfprintf+0x394>
 918:	8a 94       	dec	r8
 91a:	f3 01       	movw	r30, r6
 91c:	e8 0d       	add	r30, r8
 91e:	f1 1d       	adc	r31, r1
 920:	80 81       	ld	r24, Z
 922:	b6 01       	movw	r22, r12
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 92a:	81 10       	cpse	r8, r1
 92c:	f5 cf       	rjmp	.-22     	; 0x918 <vfprintf+0x3a6>
 92e:	22 20       	and	r2, r2
 930:	09 f4       	brne	.+2      	; 0x934 <vfprintf+0x3c2>
 932:	42 ce       	rjmp	.-892    	; 0x5b8 <vfprintf+0x46>
 934:	b6 01       	movw	r22, r12
 936:	80 e2       	ldi	r24, 0x20	; 32
 938:	90 e0       	ldi	r25, 0x00	; 0
 93a:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <fputc>
 93e:	2a 94       	dec	r2
 940:	f6 cf       	rjmp	.-20     	; 0x92e <vfprintf+0x3bc>
 942:	f6 01       	movw	r30, r12
 944:	86 81       	ldd	r24, Z+6	; 0x06
 946:	97 81       	ldd	r25, Z+7	; 0x07
 948:	02 c0       	rjmp	.+4      	; 0x94e <vfprintf+0x3dc>
 94a:	8f ef       	ldi	r24, 0xFF	; 255
 94c:	9f ef       	ldi	r25, 0xFF	; 255
 94e:	2b 96       	adiw	r28, 0x0b	; 11
 950:	cd bf       	out	0x3d, r28	; 61
 952:	de bf       	out	0x3e, r29	; 62
 954:	df 91       	pop	r29
 956:	cf 91       	pop	r28
 958:	1f 91       	pop	r17
 95a:	0f 91       	pop	r16
 95c:	ff 90       	pop	r15
 95e:	ef 90       	pop	r14
 960:	df 90       	pop	r13
 962:	cf 90       	pop	r12
 964:	bf 90       	pop	r11
 966:	af 90       	pop	r10
 968:	9f 90       	pop	r9
 96a:	8f 90       	pop	r8
 96c:	7f 90       	pop	r7
 96e:	6f 90       	pop	r6
 970:	5f 90       	pop	r5
 972:	4f 90       	pop	r4
 974:	3f 90       	pop	r3
 976:	2f 90       	pop	r2
 978:	08 95       	ret

0000097a <strnlen_P>:
 97a:	fc 01       	movw	r30, r24
 97c:	05 90       	lpm	r0, Z+
 97e:	61 50       	subi	r22, 0x01	; 1
 980:	70 40       	sbci	r23, 0x00	; 0
 982:	01 10       	cpse	r0, r1
 984:	d8 f7       	brcc	.-10     	; 0x97c <strnlen_P+0x2>
 986:	80 95       	com	r24
 988:	90 95       	com	r25
 98a:	8e 0f       	add	r24, r30
 98c:	9f 1f       	adc	r25, r31
 98e:	08 95       	ret

00000990 <strnlen>:
 990:	fc 01       	movw	r30, r24
 992:	61 50       	subi	r22, 0x01	; 1
 994:	70 40       	sbci	r23, 0x00	; 0
 996:	01 90       	ld	r0, Z+
 998:	01 10       	cpse	r0, r1
 99a:	d8 f7       	brcc	.-10     	; 0x992 <strnlen+0x2>
 99c:	80 95       	com	r24
 99e:	90 95       	com	r25
 9a0:	8e 0f       	add	r24, r30
 9a2:	9f 1f       	adc	r25, r31
 9a4:	08 95       	ret

000009a6 <fputc>:
 9a6:	0f 93       	push	r16
 9a8:	1f 93       	push	r17
 9aa:	cf 93       	push	r28
 9ac:	df 93       	push	r29
 9ae:	fb 01       	movw	r30, r22
 9b0:	23 81       	ldd	r18, Z+3	; 0x03
 9b2:	21 fd       	sbrc	r18, 1
 9b4:	03 c0       	rjmp	.+6      	; 0x9bc <fputc+0x16>
 9b6:	8f ef       	ldi	r24, 0xFF	; 255
 9b8:	9f ef       	ldi	r25, 0xFF	; 255
 9ba:	2c c0       	rjmp	.+88     	; 0xa14 <fputc+0x6e>
 9bc:	22 ff       	sbrs	r18, 2
 9be:	16 c0       	rjmp	.+44     	; 0x9ec <fputc+0x46>
 9c0:	46 81       	ldd	r20, Z+6	; 0x06
 9c2:	57 81       	ldd	r21, Z+7	; 0x07
 9c4:	24 81       	ldd	r18, Z+4	; 0x04
 9c6:	35 81       	ldd	r19, Z+5	; 0x05
 9c8:	42 17       	cp	r20, r18
 9ca:	53 07       	cpc	r21, r19
 9cc:	44 f4       	brge	.+16     	; 0x9de <fputc+0x38>
 9ce:	a0 81       	ld	r26, Z
 9d0:	b1 81       	ldd	r27, Z+1	; 0x01
 9d2:	9d 01       	movw	r18, r26
 9d4:	2f 5f       	subi	r18, 0xFF	; 255
 9d6:	3f 4f       	sbci	r19, 0xFF	; 255
 9d8:	20 83       	st	Z, r18
 9da:	31 83       	std	Z+1, r19	; 0x01
 9dc:	8c 93       	st	X, r24
 9de:	26 81       	ldd	r18, Z+6	; 0x06
 9e0:	37 81       	ldd	r19, Z+7	; 0x07
 9e2:	2f 5f       	subi	r18, 0xFF	; 255
 9e4:	3f 4f       	sbci	r19, 0xFF	; 255
 9e6:	26 83       	std	Z+6, r18	; 0x06
 9e8:	37 83       	std	Z+7, r19	; 0x07
 9ea:	14 c0       	rjmp	.+40     	; 0xa14 <fputc+0x6e>
 9ec:	8b 01       	movw	r16, r22
 9ee:	ec 01       	movw	r28, r24
 9f0:	fb 01       	movw	r30, r22
 9f2:	00 84       	ldd	r0, Z+8	; 0x08
 9f4:	f1 85       	ldd	r31, Z+9	; 0x09
 9f6:	e0 2d       	mov	r30, r0
 9f8:	09 95       	icall
 9fa:	89 2b       	or	r24, r25
 9fc:	e1 f6       	brne	.-72     	; 0x9b6 <fputc+0x10>
 9fe:	d8 01       	movw	r26, r16
 a00:	16 96       	adiw	r26, 0x06	; 6
 a02:	8d 91       	ld	r24, X+
 a04:	9c 91       	ld	r25, X
 a06:	17 97       	sbiw	r26, 0x07	; 7
 a08:	01 96       	adiw	r24, 0x01	; 1
 a0a:	16 96       	adiw	r26, 0x06	; 6
 a0c:	8d 93       	st	X+, r24
 a0e:	9c 93       	st	X, r25
 a10:	17 97       	sbiw	r26, 0x07	; 7
 a12:	ce 01       	movw	r24, r28
 a14:	df 91       	pop	r29
 a16:	cf 91       	pop	r28
 a18:	1f 91       	pop	r17
 a1a:	0f 91       	pop	r16
 a1c:	08 95       	ret

00000a1e <__ultoa_invert>:
 a1e:	fa 01       	movw	r30, r20
 a20:	aa 27       	eor	r26, r26
 a22:	28 30       	cpi	r18, 0x08	; 8
 a24:	51 f1       	breq	.+84     	; 0xa7a <__ultoa_invert+0x5c>
 a26:	20 31       	cpi	r18, 0x10	; 16
 a28:	81 f1       	breq	.+96     	; 0xa8a <__ultoa_invert+0x6c>
 a2a:	e8 94       	clt
 a2c:	6f 93       	push	r22
 a2e:	6e 7f       	andi	r22, 0xFE	; 254
 a30:	6e 5f       	subi	r22, 0xFE	; 254
 a32:	7f 4f       	sbci	r23, 0xFF	; 255
 a34:	8f 4f       	sbci	r24, 0xFF	; 255
 a36:	9f 4f       	sbci	r25, 0xFF	; 255
 a38:	af 4f       	sbci	r26, 0xFF	; 255
 a3a:	b1 e0       	ldi	r27, 0x01	; 1
 a3c:	3e d0       	rcall	.+124    	; 0xaba <__ultoa_invert+0x9c>
 a3e:	b4 e0       	ldi	r27, 0x04	; 4
 a40:	3c d0       	rcall	.+120    	; 0xaba <__ultoa_invert+0x9c>
 a42:	67 0f       	add	r22, r23
 a44:	78 1f       	adc	r23, r24
 a46:	89 1f       	adc	r24, r25
 a48:	9a 1f       	adc	r25, r26
 a4a:	a1 1d       	adc	r26, r1
 a4c:	68 0f       	add	r22, r24
 a4e:	79 1f       	adc	r23, r25
 a50:	8a 1f       	adc	r24, r26
 a52:	91 1d       	adc	r25, r1
 a54:	a1 1d       	adc	r26, r1
 a56:	6a 0f       	add	r22, r26
 a58:	71 1d       	adc	r23, r1
 a5a:	81 1d       	adc	r24, r1
 a5c:	91 1d       	adc	r25, r1
 a5e:	a1 1d       	adc	r26, r1
 a60:	20 d0       	rcall	.+64     	; 0xaa2 <__ultoa_invert+0x84>
 a62:	09 f4       	brne	.+2      	; 0xa66 <__ultoa_invert+0x48>
 a64:	68 94       	set
 a66:	3f 91       	pop	r19
 a68:	2a e0       	ldi	r18, 0x0A	; 10
 a6a:	26 9f       	mul	r18, r22
 a6c:	11 24       	eor	r1, r1
 a6e:	30 19       	sub	r19, r0
 a70:	30 5d       	subi	r19, 0xD0	; 208
 a72:	31 93       	st	Z+, r19
 a74:	de f6       	brtc	.-74     	; 0xa2c <__ultoa_invert+0xe>
 a76:	cf 01       	movw	r24, r30
 a78:	08 95       	ret
 a7a:	46 2f       	mov	r20, r22
 a7c:	47 70       	andi	r20, 0x07	; 7
 a7e:	40 5d       	subi	r20, 0xD0	; 208
 a80:	41 93       	st	Z+, r20
 a82:	b3 e0       	ldi	r27, 0x03	; 3
 a84:	0f d0       	rcall	.+30     	; 0xaa4 <__ultoa_invert+0x86>
 a86:	c9 f7       	brne	.-14     	; 0xa7a <__ultoa_invert+0x5c>
 a88:	f6 cf       	rjmp	.-20     	; 0xa76 <__ultoa_invert+0x58>
 a8a:	46 2f       	mov	r20, r22
 a8c:	4f 70       	andi	r20, 0x0F	; 15
 a8e:	40 5d       	subi	r20, 0xD0	; 208
 a90:	4a 33       	cpi	r20, 0x3A	; 58
 a92:	18 f0       	brcs	.+6      	; 0xa9a <__ultoa_invert+0x7c>
 a94:	49 5d       	subi	r20, 0xD9	; 217
 a96:	31 fd       	sbrc	r19, 1
 a98:	40 52       	subi	r20, 0x20	; 32
 a9a:	41 93       	st	Z+, r20
 a9c:	02 d0       	rcall	.+4      	; 0xaa2 <__ultoa_invert+0x84>
 a9e:	a9 f7       	brne	.-22     	; 0xa8a <__ultoa_invert+0x6c>
 aa0:	ea cf       	rjmp	.-44     	; 0xa76 <__ultoa_invert+0x58>
 aa2:	b4 e0       	ldi	r27, 0x04	; 4
 aa4:	a6 95       	lsr	r26
 aa6:	97 95       	ror	r25
 aa8:	87 95       	ror	r24
 aaa:	77 95       	ror	r23
 aac:	67 95       	ror	r22
 aae:	ba 95       	dec	r27
 ab0:	c9 f7       	brne	.-14     	; 0xaa4 <__ultoa_invert+0x86>
 ab2:	00 97       	sbiw	r24, 0x00	; 0
 ab4:	61 05       	cpc	r22, r1
 ab6:	71 05       	cpc	r23, r1
 ab8:	08 95       	ret
 aba:	9b 01       	movw	r18, r22
 abc:	ac 01       	movw	r20, r24
 abe:	0a 2e       	mov	r0, r26
 ac0:	06 94       	lsr	r0
 ac2:	57 95       	ror	r21
 ac4:	47 95       	ror	r20
 ac6:	37 95       	ror	r19
 ac8:	27 95       	ror	r18
 aca:	ba 95       	dec	r27
 acc:	c9 f7       	brne	.-14     	; 0xac0 <__ultoa_invert+0xa2>
 ace:	62 0f       	add	r22, r18
 ad0:	73 1f       	adc	r23, r19
 ad2:	84 1f       	adc	r24, r20
 ad4:	95 1f       	adc	r25, r21
 ad6:	a0 1d       	adc	r26, r0
 ad8:	08 95       	ret

00000ada <ccp_write_io>:
 ada:	dc 01       	movw	r26, r24
 adc:	28 ed       	ldi	r18, 0xD8	; 216
 ade:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x7e0034>
 ae2:	6c 93       	st	X, r22
 ae4:	08 95       	ret

00000ae6 <_exit>:
 ae6:	f8 94       	cli

00000ae8 <__stop_program>:
 ae8:	ff cf       	rjmp	.-2      	; 0xae8 <__stop_program>
