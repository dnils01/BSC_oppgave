
HMI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000164  00804000  00003012  000030a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003012  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000104  00804164  00804164  0000320a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000320a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003268  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000328  00000000  00000000  000032a8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a929  00000000  00000000  000035d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003643  00000000  00000000  0000def9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002f24  00000000  00000000  0001153c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006c4  00000000  00000000  00014460  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002f99  00000000  00000000  00014b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a72  00000000  00000000  00017abd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000268  00000000  00000000  0001952f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 58 00 	jmp	0xb0	; 0xb0 <__ctors_end>
       4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 ab 11 	jmp	0x2356	; 0x2356 <__vector_14>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 58 11 	jmp	0x22b0	; 0x22b0 <__vector_24>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 b4 12 	jmp	0x2568	; 0x2568 <__vector_32>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 db 12 	jmp	0x25b6	; 0x25b6 <__vector_34>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b0 <__ctors_end>:
      b0:	11 24       	eor	r1, r1
      b2:	1f be       	out	0x3f, r1	; 63
      b4:	cf ef       	ldi	r28, 0xFF	; 255
      b6:	cd bf       	out	0x3d, r28	; 61
      b8:	df e7       	ldi	r29, 0x7F	; 127
      ba:	de bf       	out	0x3e, r29	; 62

000000bc <__do_copy_data>:
      bc:	11 e4       	ldi	r17, 0x41	; 65
      be:	a0 e0       	ldi	r26, 0x00	; 0
      c0:	b0 e4       	ldi	r27, 0x40	; 64
      c2:	e2 e1       	ldi	r30, 0x12	; 18
      c4:	f0 e3       	ldi	r31, 0x30	; 48
      c6:	00 e0       	ldi	r16, 0x00	; 0
      c8:	0b bf       	out	0x3b, r16	; 59
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x14>
      cc:	07 90       	elpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	a4 36       	cpi	r26, 0x64	; 100
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0x10>

000000d6 <__do_clear_bss>:
      d6:	22 e4       	ldi	r18, 0x42	; 66
      d8:	a4 e6       	ldi	r26, 0x64	; 100
      da:	b1 e4       	ldi	r27, 0x41	; 65
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a8 36       	cpi	r26, 0x68	; 104
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <main>
      ea:	0c 94 07 18 	jmp	0x300e	; 0x300e <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <ADC0_start>:
	}
	else if(AIN_selected==3){
		AIN3_value= ADC0.RES;
	}	
	else if(AIN_selected==4){
		AIN4_value= ADC0.RES;
      f2:	81 e0       	ldi	r24, 0x01	; 1
      f4:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
      f8:	08 95       	ret

000000fa <ADC0_change_input>:
	
}

void ADC0_change_input(uint8_t input){
	//adc0_stop();
	AIN_selected = input;
      fa:	28 2f       	mov	r18, r24
      fc:	30 e0       	ldi	r19, 0x00	; 0
      fe:	20 93 8b 41 	sts	0x418B, r18	; 0x80418b <AIN_selected>
     102:	30 93 8c 41 	sts	0x418C, r19	; 0x80418c <AIN_selected+0x1>
	if (input == 0 ){
     106:	81 11       	cpse	r24, r1
     108:	03 c0       	rjmp	.+6      	; 0x110 <ADC0_change_input+0x16>
		ADC0.MUXPOS = ADC_MUXPOS_AIN0_gc;		
     10a:	10 92 08 06 	sts	0x0608, r1	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
     10e:	13 c0       	rjmp	.+38     	; 0x136 <ADC0_change_input+0x3c>
	}
	else if (input == 1){
     110:	81 30       	cpi	r24, 0x01	; 1
     112:	19 f4       	brne	.+6      	; 0x11a <ADC0_change_input+0x20>
		ADC0.MUXPOS = ADC_MUXPOS_AIN1_gc;
     114:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
     118:	0e c0       	rjmp	.+28     	; 0x136 <ADC0_change_input+0x3c>
	}
	else if (input == 2){
     11a:	82 30       	cpi	r24, 0x02	; 2
     11c:	19 f4       	brne	.+6      	; 0x124 <ADC0_change_input+0x2a>
		ADC0.MUXPOS = ADC_MUXPOS_AIN2_gc;		
     11e:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
     122:	09 c0       	rjmp	.+18     	; 0x136 <ADC0_change_input+0x3c>
	}
	else if (input == 3){
     124:	83 30       	cpi	r24, 0x03	; 3
     126:	19 f4       	brne	.+6      	; 0x12e <ADC0_change_input+0x34>
		ADC0.MUXPOS = ADC_MUXPOS_AIN3_gc;		
     128:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
     12c:	04 c0       	rjmp	.+8      	; 0x136 <ADC0_change_input+0x3c>
	}
	else if (input == 4){
     12e:	84 30       	cpi	r24, 0x04	; 4
     130:	11 f4       	brne	.+4      	; 0x136 <ADC0_change_input+0x3c>
		ADC0.MUXPOS = ADC_MUXPOS_AIN4_gc;
     132:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
	}	
	ADC0_start();
     136:	0e 94 79 00 	call	0xf2	; 0xf2 <ADC0_start>
     13a:	08 95       	ret

0000013c <ADC0_init>:
volatile uint8_t adc_conversion_ready =0;
volatile uint8_t ADC_reading_ready=0;


void ADC0_init(void) {	
	VREF.ADC0REF |= VREF_REFSEL_2V500_gc ;//Configure ADC voltageref
     13c:	e0 eb       	ldi	r30, 0xB0	; 176
     13e:	f0 e0       	ldi	r31, 0x00	; 0
     140:	80 81       	ld	r24, Z
     142:	83 60       	ori	r24, 0x03	; 3
     144:	80 83       	st	Z, r24
	ADC0.CTRLC |= ADC_PRESC_DIV256_gc ;  // 1MHz @ 16MHz main clock
     146:	e0 e0       	ldi	r30, 0x00	; 0
     148:	f6 e0       	ldi	r31, 0x06	; 6
     14a:	82 81       	ldd	r24, Z+2	; 0x02
     14c:	8d 60       	ori	r24, 0x0D	; 13
     14e:	82 83       	std	Z+2, r24	; 0x02
	//ADC0_CTRLB |=ADC_SAMPNUM_ACC128_gc;	
	
	ADC0.CTRLA |= ADC_ENABLE_bm	;		//enable ADC
     150:	80 81       	ld	r24, Z
     152:	81 60       	ori	r24, 0x01	; 1
     154:	80 83       	st	Z, r24
	ADC0.CTRLA |= ADC_RESSEL_12BIT_gc;	//12-bit resolution
     156:	80 81       	ld	r24, Z
     158:	80 83       	st	Z, r24
	ADC0.CTRLA |= ADC_FREERUN_bm;		//freerun mode
     15a:	80 81       	ld	r24, Z
     15c:	82 60       	ori	r24, 0x02	; 2
     15e:	80 83       	st	Z, r24
	
	//ADC0.INTCTRL |= ADC_RESRDY_bm;		//Enable interrupt when result ready
	
	ADC0_change_input(1);//set input to PD1
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	0e 94 7d 00 	call	0xfa	; 0xfa <ADC0_change_input>
     166:	08 95       	ret

00000168 <ADC0_read_value>:
void ADC0_stop(void){
	ADC0.COMMAND = ADC_SPCONV_bm; //stopping conversion
}

uint16_t ADC0_read_value(uint8_t channel){	
	if (AIN_selected!=channel){
     168:	48 2f       	mov	r20, r24
     16a:	50 e0       	ldi	r21, 0x00	; 0
     16c:	20 91 8b 41 	lds	r18, 0x418B	; 0x80418b <AIN_selected>
     170:	30 91 8c 41 	lds	r19, 0x418C	; 0x80418c <AIN_selected+0x1>
     174:	42 17       	cp	r20, r18
     176:	53 07       	cpc	r21, r19
     178:	11 f0       	breq	.+4      	; 0x17e <ADC0_read_value+0x16>
		ADC0_change_input(channel);	
     17a:	0e 94 7d 00 	call	0xfa	; 0xfa <ADC0_change_input>
	}
	
	while (!(ADC0.INTFLAGS&ADC_RESRDY_bm));
     17e:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
     182:	80 ff       	sbrs	r24, 0
     184:	fc cf       	rjmp	.-8      	; 0x17e <ADC0_read_value+0x16>
	return ADC0.RES;
     186:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
     18a:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
}
     18e:	08 95       	ret

00000190 <CLKCTRL_INTERNAL_16M_init>:
volatile uint16_t rpm_value=0;
volatile uint16_t backemf_value=0;
volatile uint16_t current_value=0;

void CLKCTRL_INTERNAL_16M_init(){
	ccp_write_io((void *)&(CLKCTRL.OSCHFCTRLA) ,CLKCTRL_FRQSEL_16M_gc         /* 16 MHz internal clock */
     190:	6c e1       	ldi	r22, 0x1C	; 28
     192:	88 e6       	ldi	r24, 0x68	; 104
     194:	90 e0       	ldi	r25, 0x00	; 0
     196:	0e 94 01 18 	call	0x3002	; 0x3002 <ccp_write_io>
     19a:	08 95       	ret

0000019c <LEDS_init>:
	| 0 << CLKCTRL_AUTOTUNE_bp /* Auto-Tune enable: disabled */
	| 0 << CLKCTRL_RUNSTDBY_bp /* Run standby: disabled */);
}

void LEDS_init(void){
	PORTF.DIRCLR = (1<<DIN_pin) | (1<<DOUT_pin) | (1<<AIN_pin) |(1<<AOUT_pin);	// Clear pins
     19c:	e0 ea       	ldi	r30, 0xA0	; 160
     19e:	f4 e0       	ldi	r31, 0x04	; 4
     1a0:	8f e0       	ldi	r24, 0x0F	; 15
     1a2:	82 83       	std	Z+2, r24	; 0x02
	PORTF.DIRSET = (1<<DIN_pin) | (1<<DOUT_pin) | (1<<AIN_pin) |(1<<AOUT_pin);	// Set pins as output
     1a4:	81 83       	std	Z+1, r24	; 0x01
	PORTF.OUTSET = (1<<DIN_pin)| (1<<DOUT_pin) | (1<<AIN_pin) |(1<<AOUT_pin);	// Set high
     1a6:	85 83       	std	Z+5, r24	; 0x05
     1a8:	08 95       	ret

000001aa <button_init>:
	
}

void button_init(void){
	PORTD.DIRCLR   = PIN5_bm | PIN6_bm | PIN7_bm;	// Clear pins
     1aa:	e0 e6       	ldi	r30, 0x60	; 96
     1ac:	f4 e0       	ldi	r31, 0x04	; 4
     1ae:	80 ee       	ldi	r24, 0xE0	; 224
     1b0:	82 83       	std	Z+2, r24	; 0x02
	PORTD.PIN5CTRL = PORT_ISC_FALLING_gc; //PORT_PULLUPEN_bm | 	//Enable pullup and interrupt on falling edge
     1b2:	83 e0       	ldi	r24, 0x03	; 3
     1b4:	85 8b       	std	Z+21, r24	; 0x15
	PORTD.PIN6CTRL = PORT_ISC_FALLING_gc;
     1b6:	86 8b       	std	Z+22, r24	; 0x16
	PORTD.PIN7CTRL = PORT_ISC_FALLING_gc;		
     1b8:	87 8b       	std	Z+23, r24	; 0x17
     1ba:	08 95       	ret

000001bc <button_handler>:
}


void button_handler(){
	if(buttondown==1){		
     1bc:	80 91 70 41 	lds	r24, 0x4170	; 0x804170 <buttondown>
     1c0:	81 30       	cpi	r24, 0x01	; 1
     1c2:	29 f4       	brne	.+10     	; 0x1ce <button_handler+0x12>
		ButtonDownPressed();
     1c4:	0e 94 99 05 	call	0xb32	; 0xb32 <ButtonDownPressed>
		buttondown=0;	//Reset state of button			
     1c8:	10 92 70 41 	sts	0x4170, r1	; 0x804170 <buttondown>
     1cc:	08 95       	ret
	}
	else if (buttonup==1){
     1ce:	80 91 6f 41 	lds	r24, 0x416F	; 0x80416f <buttonup>
     1d2:	81 30       	cpi	r24, 0x01	; 1
     1d4:	29 f4       	brne	.+10     	; 0x1e0 <button_handler+0x24>
		ButtonUpPressed();
     1d6:	0e 94 a6 04 	call	0x94c	; 0x94c <ButtonUpPressed>
		buttonup=0;	//Reset state of button
     1da:	10 92 6f 41 	sts	0x416F, r1	; 0x80416f <buttonup>
     1de:	08 95       	ret
	}
	else if (buttonenter==1){
     1e0:	80 91 6e 41 	lds	r24, 0x416E	; 0x80416e <buttonenter>
     1e4:	81 30       	cpi	r24, 0x01	; 1
     1e6:	21 f4       	brne	.+8      	; 0x1f0 <button_handler+0x34>
		ButtonEnterPressed();		
     1e8:	0e 94 62 06 	call	0xcc4	; 0xcc4 <ButtonEnterPressed>
		buttonenter=0;	//Reset state of button
     1ec:	10 92 6e 41 	sts	0x416E, r1	; 0x80416e <buttonenter>
     1f0:	08 95       	ret

000001f2 <led_handler>:
	}
}

void led_handler(void){
	if (digital_in_status==1){
     1f2:	80 91 01 40 	lds	r24, 0x4001	; 0x804001 <digital_in_status>
     1f6:	81 30       	cpi	r24, 0x01	; 1
     1f8:	31 f4       	brne	.+12     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
			PORTF.OUT |=(1<<DIN_pin);	//enable led for DIN		
     1fa:	e0 ea       	ldi	r30, 0xA0	; 160
     1fc:	f4 e0       	ldi	r31, 0x04	; 4
     1fe:	84 81       	ldd	r24, Z+4	; 0x04
     200:	81 60       	ori	r24, 0x01	; 1
     202:	84 83       	std	Z+4, r24	; 0x04
     204:	07 c0       	rjmp	.+14     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
	}
	else if (digital_in_status==0){
     206:	81 11       	cpse	r24, r1
     208:	05 c0       	rjmp	.+10     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
		PORTF.OUT &=~(1<<DIN_pin);	//disable led for DIN		
     20a:	e0 ea       	ldi	r30, 0xA0	; 160
     20c:	f4 e0       	ldi	r31, 0x04	; 4
     20e:	84 81       	ldd	r24, Z+4	; 0x04
     210:	8e 7f       	andi	r24, 0xFE	; 254
     212:	84 83       	std	Z+4, r24	; 0x04
	}
	if (digital_out_status==1){
     214:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     218:	81 30       	cpi	r24, 0x01	; 1
     21a:	31 f4       	brne	.+12     	; 0x228 <__EEPROM_REGION_LENGTH__+0x28>
		PORTF.OUT |=(1<<DOUT_pin);		//enable led for DOUT		
     21c:	e0 ea       	ldi	r30, 0xA0	; 160
     21e:	f4 e0       	ldi	r31, 0x04	; 4
     220:	84 81       	ldd	r24, Z+4	; 0x04
     222:	82 60       	ori	r24, 0x02	; 2
     224:	84 83       	std	Z+4, r24	; 0x04
     226:	07 c0       	rjmp	.+14     	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
	}
	else if (digital_out_status==0){
     228:	81 11       	cpse	r24, r1
     22a:	05 c0       	rjmp	.+10     	; 0x236 <__EEPROM_REGION_LENGTH__+0x36>
		PORTF.OUT &=~(1<<DOUT_pin);	//disable led for DOUT		
     22c:	e0 ea       	ldi	r30, 0xA0	; 160
     22e:	f4 e0       	ldi	r31, 0x04	; 4
     230:	84 81       	ldd	r24, Z+4	; 0x04
     232:	8d 7f       	andi	r24, 0xFD	; 253
     234:	84 83       	std	Z+4, r24	; 0x04
	}	
	if (analog_in_status==1){
     236:	80 91 6d 41 	lds	r24, 0x416D	; 0x80416d <analog_in_status>
     23a:	81 30       	cpi	r24, 0x01	; 1
     23c:	31 f4       	brne	.+12     	; 0x24a <__EEPROM_REGION_LENGTH__+0x4a>
		PORTF.OUT |=(1<<AIN_pin);		//enable led for AIN
     23e:	e0 ea       	ldi	r30, 0xA0	; 160
     240:	f4 e0       	ldi	r31, 0x04	; 4
     242:	84 81       	ldd	r24, Z+4	; 0x04
     244:	84 60       	ori	r24, 0x04	; 4
     246:	84 83       	std	Z+4, r24	; 0x04
     248:	07 c0       	rjmp	.+14     	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
	}
	else if (analog_in_status==0){
     24a:	81 11       	cpse	r24, r1
     24c:	05 c0       	rjmp	.+10     	; 0x258 <__EEPROM_REGION_LENGTH__+0x58>
		PORTF.OUT &=~(1<<AIN_pin);	//disable led for AIN
     24e:	e0 ea       	ldi	r30, 0xA0	; 160
     250:	f4 e0       	ldi	r31, 0x04	; 4
     252:	84 81       	ldd	r24, Z+4	; 0x04
     254:	8b 7f       	andi	r24, 0xFB	; 251
     256:	84 83       	std	Z+4, r24	; 0x04
	}
	if (analog_out_status==1){
     258:	80 91 6c 41 	lds	r24, 0x416C	; 0x80416c <analog_out_status>
     25c:	81 30       	cpi	r24, 0x01	; 1
     25e:	31 f4       	brne	.+12     	; 0x26c <__EEPROM_REGION_LENGTH__+0x6c>
		PORTF.OUT |=(1<<AOUT_pin);		//enable led for AOUT
     260:	e0 ea       	ldi	r30, 0xA0	; 160
     262:	f4 e0       	ldi	r31, 0x04	; 4
     264:	84 81       	ldd	r24, Z+4	; 0x04
     266:	88 60       	ori	r24, 0x08	; 8
     268:	84 83       	std	Z+4, r24	; 0x04
     26a:	08 95       	ret
	}
	else if (analog_out_status==0){
     26c:	81 11       	cpse	r24, r1
     26e:	05 c0       	rjmp	.+10     	; 0x27a <__EEPROM_REGION_LENGTH__+0x7a>
		PORTF.OUT &=~(1<<AOUT_pin);	//disable led for AOUT
     270:	e0 ea       	ldi	r30, 0xA0	; 160
     272:	f4 e0       	ldi	r31, 0x04	; 4
     274:	84 81       	ldd	r24, Z+4	; 0x04
     276:	87 7f       	andi	r24, 0xF7	; 247
     278:	84 83       	std	Z+4, r24	; 0x04
     27a:	08 95       	ret

0000027c <GeneratorSetDutycycle>:
	}	
}

void GeneratorSetDutycycle(uint16_t duty){
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
	if (duty==0){
     280:	00 97       	sbiw	r24, 0x00	; 0
     282:	59 f4       	brne	.+22     	; 0x29a <GeneratorSetDutycycle+0x1e>
		//TCA0_PWM_disable();
		TCA0.SINGLE.CTRLB &= ~TCA_SINGLE_CMP2EN_bm;
     284:	e0 e0       	ldi	r30, 0x00	; 0
     286:	fa e0       	ldi	r31, 0x0A	; 10
     288:	81 81       	ldd	r24, Z+1	; 0x01
     28a:	8f 7b       	andi	r24, 0xBF	; 191
     28c:	81 83       	std	Z+1, r24	; 0x01
		PORTA.OUTSET |=PIN2_bm;	
     28e:	e0 e0       	ldi	r30, 0x00	; 0
     290:	f4 e0       	ldi	r31, 0x04	; 4
     292:	85 81       	ldd	r24, Z+5	; 0x05
     294:	84 60       	ori	r24, 0x04	; 4
     296:	85 83       	std	Z+5, r24	; 0x05
     298:	1a c0       	rjmp	.+52     	; 0x2ce <GeneratorSetDutycycle+0x52>
	}	
	else if(duty<=100&&duty>=1){
     29a:	9c 01       	movw	r18, r24
     29c:	21 50       	subi	r18, 0x01	; 1
     29e:	31 09       	sbc	r19, r1
     2a0:	24 36       	cpi	r18, 0x64	; 100
     2a2:	31 05       	cpc	r19, r1
     2a4:	a0 f4       	brcc	.+40     	; 0x2ce <GeneratorSetDutycycle+0x52>
		uint16_t tmp_period=duty*(TCA0_period/100);
     2a6:	ec 01       	movw	r28, r24
     2a8:	cc 0f       	add	r28, r28
     2aa:	dd 1f       	adc	r29, r29
     2ac:	cc 0f       	add	r28, r28
     2ae:	dd 1f       	adc	r29, r29
		TCA0.SINGLE.CTRLB |= TCA_SINGLE_CMP2EN_bm;
     2b0:	e0 e0       	ldi	r30, 0x00	; 0
     2b2:	fa e0       	ldi	r31, 0x0A	; 10
     2b4:	81 81       	ldd	r24, Z+1	; 0x01
     2b6:	80 64       	ori	r24, 0x40	; 64
     2b8:	81 83       	std	Z+1, r24	; 0x01
		TCA0_PWM_set_duty(200);
     2ba:	88 ec       	ldi	r24, 0xC8	; 200
     2bc:	90 e0       	ldi	r25, 0x00	; 0
     2be:	0e 94 9b 11 	call	0x2336	; 0x2336 <TCA0_PWM_set_duty>
		
		uint16_t tmp = 400-tmp_period;
		TCA0_PWM_set_duty(tmp);			
     2c2:	80 e9       	ldi	r24, 0x90	; 144
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	8c 1b       	sub	r24, r28
     2c8:	9d 0b       	sbc	r25, r29
     2ca:	0e 94 9b 11 	call	0x2336	; 0x2336 <TCA0_PWM_set_duty>
	}
}
     2ce:	df 91       	pop	r29
     2d0:	cf 91       	pop	r28
     2d2:	08 95       	ret

000002d4 <SendStatus2otherMCU>:
		strcpy(USART1message, "");
		update_variable_uint8(&USART1message_available,0);
	}
}

void SendStatus2otherMCU(void){		//function for sending status of everything to other main mcu
     2d4:	df 92       	push	r13
     2d6:	ef 92       	push	r14
     2d8:	ff 92       	push	r15
     2da:	0f 93       	push	r16
     2dc:	1f 93       	push	r17
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	cd b7       	in	r28, 0x3d	; 61
     2e4:	de b7       	in	r29, 0x3e	; 62
     2e6:	25 97       	sbiw	r28, 0x05	; 5
     2e8:	cd bf       	out	0x3d, r28	; 61
     2ea:	de bf       	out	0x3e, r29	; 62
	if (io_changed==1){
     2ec:	80 91 73 41 	lds	r24, 0x4173	; 0x804173 <io_changed>
     2f0:	81 30       	cpi	r24, 0x01	; 1
     2f2:	f9 f4       	brne	.+62     	; 0x332 <SendStatus2otherMCU+0x5e>
		char buffer[5];
		io_changed=0;
     2f4:	10 92 73 41 	sts	0x4173, r1	; 0x804173 <io_changed>
		USART1_transmitt('<');
     2f8:	8c e3       	ldi	r24, 0x3C	; 60
     2fa:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
		USART1_transmitt('A');
     2fe:	81 e4       	ldi	r24, 0x41	; 65
     300:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
		USART1_transmit_int(digital_in_status);	//IO status for index 0-3
     304:	80 91 01 40 	lds	r24, 0x4001	; 0x804001 <digital_in_status>
     308:	90 e0       	ldi	r25, 0x00	; 0
     30a:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <USART1_transmit_int>
		USART1_transmit_int(digital_out_status);
     30e:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <USART1_transmit_int>
		USART1_transmit_int(analog_in_status);
     318:	80 91 6d 41 	lds	r24, 0x416D	; 0x80416d <analog_in_status>
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <USART1_transmit_int>
		USART1_transmit_int(analog_out_status);
     322:	80 91 6c 41 	lds	r24, 0x416C	; 0x80416c <analog_out_status>
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <USART1_transmit_int>
		USART1_transmitt('>');
     32c:	8e e3       	ldi	r24, 0x3E	; 62
     32e:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
	}
	
	if (regulatormode_changed==1){
     332:	80 91 71 41 	lds	r24, 0x4171	; 0x804171 <regulatormode_changed>
     336:	81 30       	cpi	r24, 0x01	; 1
     338:	09 f0       	breq	.+2      	; 0x33c <SendStatus2otherMCU+0x68>
     33a:	6e c0       	rjmp	.+220    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		char buffer[5];
		regulatormode_changed=1;
     33c:	80 93 71 41 	sts	0x4171, r24	; 0x804171 <regulatormode_changed>
		USART1_transmitt('<');
     340:	8c e3       	ldi	r24, 0x3C	; 60
     342:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
		USART1_transmitt('R');	//index 0
     346:	82 e5       	ldi	r24, 0x52	; 82
     348:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
		USART1_transmit_int(regulatormodestatus);//status for enabled regulator index 1
     34c:	80 91 80 41 	lds	r24, 0x4180	; 0x804180 <regulatormodestatus>
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	0e 94 5b 12 	call	0x24b6	; 0x24b6 <USART1_transmit_int>
		snprintf(buffer,5, "%04d", adjustsetpoint);
     356:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <adjustsetpoint>
     35a:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <adjustsetpoint+0x1>
     35e:	9f 93       	push	r25
     360:	8f 93       	push	r24
     362:	0f 2e       	mov	r0, r31
     364:	f3 e3       	ldi	r31, 0x33	; 51
     366:	ef 2e       	mov	r14, r31
     368:	f1 e4       	ldi	r31, 0x41	; 65
     36a:	ff 2e       	mov	r15, r31
     36c:	f0 2d       	mov	r31, r0
     36e:	ff 92       	push	r15
     370:	ef 92       	push	r14
     372:	1f 92       	push	r1
     374:	0f 2e       	mov	r0, r31
     376:	f5 e0       	ldi	r31, 0x05	; 5
     378:	df 2e       	mov	r13, r31
     37a:	f0 2d       	mov	r31, r0
     37c:	df 92       	push	r13
     37e:	8e 01       	movw	r16, r28
     380:	0f 5f       	subi	r16, 0xFF	; 255
     382:	1f 4f       	sbci	r17, 0xFF	; 255
     384:	1f 93       	push	r17
     386:	0f 93       	push	r16
     388:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <snprintf>
		USART1_transmitt_char_array(0,buffer, 4);	// setpoint for index 2-5
     38c:	44 e0       	ldi	r20, 0x04	; 4
     38e:	b8 01       	movw	r22, r16
     390:	80 e0       	ldi	r24, 0x00	; 0
     392:	0e 94 3d 12 	call	0x247a	; 0x247a <USART1_transmitt_char_array>
		strcpy(buffer, "");
     396:	19 82       	std	Y+1, r1	; 0x01
		snprintf(buffer,5, "%04d", adjustkp);
     398:	80 91 7d 41 	lds	r24, 0x417D	; 0x80417d <adjustkp>
     39c:	90 91 7e 41 	lds	r25, 0x417E	; 0x80417e <adjustkp+0x1>
     3a0:	9f 93       	push	r25
     3a2:	8f 93       	push	r24
     3a4:	ff 92       	push	r15
     3a6:	ef 92       	push	r14
     3a8:	1f 92       	push	r1
     3aa:	df 92       	push	r13
     3ac:	1f 93       	push	r17
     3ae:	0f 93       	push	r16
     3b0:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <snprintf>
		USART1_transmitt_char_array(0,buffer, 4);	// kp for index 6-9
     3b4:	44 e0       	ldi	r20, 0x04	; 4
     3b6:	b8 01       	movw	r22, r16
     3b8:	80 e0       	ldi	r24, 0x00	; 0
     3ba:	0e 94 3d 12 	call	0x247a	; 0x247a <USART1_transmitt_char_array>
		strcpy(buffer, "");
     3be:	19 82       	std	Y+1, r1	; 0x01
		snprintf(buffer,5, "%04d", adjustki);
     3c0:	80 91 7b 41 	lds	r24, 0x417B	; 0x80417b <adjustki>
     3c4:	90 91 7c 41 	lds	r25, 0x417C	; 0x80417c <adjustki+0x1>
     3c8:	9f 93       	push	r25
     3ca:	8f 93       	push	r24
     3cc:	ff 92       	push	r15
     3ce:	ef 92       	push	r14
     3d0:	1f 92       	push	r1
     3d2:	df 92       	push	r13
     3d4:	1f 93       	push	r17
     3d6:	0f 93       	push	r16
     3d8:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <snprintf>
		USART1_transmitt_char_array(0,buffer, 4);	// ki for index 10-13
     3dc:	44 e0       	ldi	r20, 0x04	; 4
     3de:	b8 01       	movw	r22, r16
     3e0:	80 e0       	ldi	r24, 0x00	; 0
     3e2:	0e 94 3d 12 	call	0x247a	; 0x247a <USART1_transmitt_char_array>
		strcpy(buffer, "");
     3e6:	19 82       	std	Y+1, r1	; 0x01
		snprintf(buffer,5, "%04d", adjustkd);
     3e8:	80 91 79 41 	lds	r24, 0x4179	; 0x804179 <adjustkd>
     3ec:	90 91 7a 41 	lds	r25, 0x417A	; 0x80417a <adjustkd+0x1>
     3f0:	9f 93       	push	r25
     3f2:	8f 93       	push	r24
     3f4:	ff 92       	push	r15
     3f6:	ef 92       	push	r14
     3f8:	1f 92       	push	r1
     3fa:	df 92       	push	r13
     3fc:	1f 93       	push	r17
     3fe:	0f 93       	push	r16
     400:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <snprintf>
		USART1_transmitt_char_array(0,buffer, 4);	// kd for index 14-17
     404:	cd bf       	out	0x3d, r28	; 61
     406:	de bf       	out	0x3e, r29	; 62
     408:	44 e0       	ldi	r20, 0x04	; 4
     40a:	b8 01       	movw	r22, r16
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	0e 94 3d 12 	call	0x247a	; 0x247a <USART1_transmitt_char_array>
		USART1_transmitt('>');
     412:	8e e3       	ldi	r24, 0x3E	; 62
     414:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
	}
	
	if (generator_changed==1){
     418:	80 91 72 41 	lds	r24, 0x4172	; 0x804172 <generator_changed>
     41c:	81 30       	cpi	r24, 0x01	; 1
     41e:	31 f5       	brne	.+76     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
		char buffer[5];
		generator_changed=0;
     420:	10 92 72 41 	sts	0x4172, r1	; 0x804172 <generator_changed>
		USART1_transmitt('<');
     424:	8c e3       	ldi	r24, 0x3C	; 60
     426:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
		USART1_transmitt('G');
     42a:	87 e4       	ldi	r24, 0x47	; 71
     42c:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
		snprintf(buffer,4, "%03d", adjustgenerator);// generator duty cycle 
     430:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     434:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     438:	9f 93       	push	r25
     43a:	8f 93       	push	r24
     43c:	88 e3       	ldi	r24, 0x38	; 56
     43e:	91 e4       	ldi	r25, 0x41	; 65
     440:	9f 93       	push	r25
     442:	8f 93       	push	r24
     444:	1f 92       	push	r1
     446:	84 e0       	ldi	r24, 0x04	; 4
     448:	8f 93       	push	r24
     44a:	8e 01       	movw	r16, r28
     44c:	0f 5f       	subi	r16, 0xFF	; 255
     44e:	1f 4f       	sbci	r17, 0xFF	; 255
     450:	1f 93       	push	r17
     452:	0f 93       	push	r16
     454:	0e 94 06 15 	call	0x2a0c	; 0x2a0c <snprintf>
		USART1_transmitt_char_array(0,buffer, 3);
     458:	43 e0       	ldi	r20, 0x03	; 3
     45a:	b8 01       	movw	r22, r16
     45c:	80 e0       	ldi	r24, 0x00	; 0
     45e:	0e 94 3d 12 	call	0x247a	; 0x247a <USART1_transmitt_char_array>
		USART1_transmitt('>');
     462:	8e e3       	ldi	r24, 0x3E	; 62
     464:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
     468:	cd bf       	out	0x3d, r28	; 61
     46a:	de bf       	out	0x3e, r29	; 62
	}
}
     46c:	25 96       	adiw	r28, 0x05	; 5
     46e:	cd bf       	out	0x3d, r28	; 61
     470:	de bf       	out	0x3e, r29	; 62
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	1f 91       	pop	r17
     478:	0f 91       	pop	r16
     47a:	ff 90       	pop	r15
     47c:	ef 90       	pop	r14
     47e:	df 90       	pop	r13
     480:	08 95       	ret

00000482 <update_variable>:

void update_variable(volatile uint16_t *var,uint16_t new_value){	
	*var=new_value;	
     482:	fc 01       	movw	r30, r24
     484:	60 83       	st	Z, r22
     486:	71 83       	std	Z+1, r23	; 0x01
     488:	08 95       	ret

0000048a <update_variable_uint8>:
}
void update_variable_uint8(volatile uint8_t *var, uint8_t new_value){
	*var=new_value;
     48a:	fc 01       	movw	r30, r24
     48c:	60 83       	st	Z, r22
     48e:	08 95       	ret

00000490 <message_handler_HMI>:
		uint16_t tmp = 400-tmp_period;
		TCA0_PWM_set_duty(tmp);			
	}
}

void message_handler_HMI(void){		//Function for handling messages and assigning values
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
     494:	00 d0       	rcall	.+0      	; 0x496 <message_handler_HMI+0x6>
     496:	1f 92       	push	r1
     498:	cd b7       	in	r28, 0x3d	; 61
     49a:	de b7       	in	r29, 0x3e	; 62
	USART1buffer2message();
     49c:	0e 94 7f 12 	call	0x24fe	; 0x24fe <USART1buffer2message>
	if(USART1message_available){	//If message is available
     4a0:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <USART1message_available>
     4a4:	88 23       	and	r24, r24
     4a6:	09 f4       	brne	.+2      	; 0x4aa <message_handler_HMI+0x1a>
     4a8:	36 c1       	rjmp	.+620    	; 0x716 <message_handler_HMI+0x286>
		if (USART1message[0] == 'R'){	//RPM message
     4aa:	80 91 9b 41 	lds	r24, 0x419B	; 0x80419b <USART1message>
     4ae:	82 35       	cpi	r24, 0x52	; 82
     4b0:	a1 f4       	brne	.+40     	; 0x4da <message_handler_HMI+0x4a>
			char tmp[3];
			tmp[0]=USART1message[1];
     4b2:	eb e9       	ldi	r30, 0x9B	; 155
     4b4:	f1 e4       	ldi	r31, 0x41	; 65
     4b6:	81 81       	ldd	r24, Z+1	; 0x01
     4b8:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     4ba:	82 81       	ldd	r24, Z+2	; 0x02
     4bc:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     4be:	83 81       	ldd	r24, Z+3	; 0x03
     4c0:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];
     4c2:	84 81       	ldd	r24, Z+4	; 0x04
     4c4:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&rpm_value, atoi(tmp));						
     4c6:	ce 01       	movw	r24, r28
     4c8:	01 96       	adiw	r24, 0x01	; 1
     4ca:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     4ce:	bc 01       	movw	r22, r24
     4d0:	88 e6       	ldi	r24, 0x68	; 104
     4d2:	91 e4       	ldi	r25, 0x41	; 65
     4d4:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     4d8:	17 c1       	rjmp	.+558    	; 0x708 <message_handler_HMI+0x278>
		}
		else if (USART1message[0] == 'I'){ //Current message
     4da:	89 34       	cpi	r24, 0x49	; 73
     4dc:	a1 f4       	brne	.+40     	; 0x506 <message_handler_HMI+0x76>
			char tmp[3];
			tmp[0]=USART1message[1];
     4de:	eb e9       	ldi	r30, 0x9B	; 155
     4e0:	f1 e4       	ldi	r31, 0x41	; 65
     4e2:	81 81       	ldd	r24, Z+1	; 0x01
     4e4:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     4e6:	82 81       	ldd	r24, Z+2	; 0x02
     4e8:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     4ea:	83 81       	ldd	r24, Z+3	; 0x03
     4ec:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];
     4ee:	84 81       	ldd	r24, Z+4	; 0x04
     4f0:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&current_value, atoi(tmp));
     4f2:	ce 01       	movw	r24, r28
     4f4:	01 96       	adiw	r24, 0x01	; 1
     4f6:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     4fa:	bc 01       	movw	r22, r24
     4fc:	84 e6       	ldi	r24, 0x64	; 100
     4fe:	91 e4       	ldi	r25, 0x41	; 65
     500:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     504:	01 c1       	rjmp	.+514    	; 0x708 <message_handler_HMI+0x278>
		}
		else if (USART1message[0] == 'B'){ //BACK_emf message
     506:	82 34       	cpi	r24, 0x42	; 66
     508:	a1 f4       	brne	.+40     	; 0x532 <message_handler_HMI+0xa2>
			char tmp[3];
			tmp[0]=USART1message[1];
     50a:	eb e9       	ldi	r30, 0x9B	; 155
     50c:	f1 e4       	ldi	r31, 0x41	; 65
     50e:	81 81       	ldd	r24, Z+1	; 0x01
     510:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     512:	82 81       	ldd	r24, Z+2	; 0x02
     514:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     516:	83 81       	ldd	r24, Z+3	; 0x03
     518:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];
     51a:	84 81       	ldd	r24, Z+4	; 0x04
     51c:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&backemf_value, atoi(tmp));
     51e:	ce 01       	movw	r24, r28
     520:	01 96       	adiw	r24, 0x01	; 1
     522:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     526:	bc 01       	movw	r22, r24
     528:	86 e6       	ldi	r24, 0x66	; 102
     52a:	91 e4       	ldi	r25, 0x41	; 65
     52c:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     530:	eb c0       	rjmp	.+470    	; 0x708 <message_handler_HMI+0x278>
		}
		else if (USART1message[0] == 'D'){ //Motor duty cycle message
     532:	84 34       	cpi	r24, 0x44	; 68
     534:	a1 f4       	brne	.+40     	; 0x55e <message_handler_HMI+0xce>
			char tmp[3];
			tmp[0]=USART1message[1];
     536:	eb e9       	ldi	r30, 0x9B	; 155
     538:	f1 e4       	ldi	r31, 0x41	; 65
     53a:	81 81       	ldd	r24, Z+1	; 0x01
     53c:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     53e:	82 81       	ldd	r24, Z+2	; 0x02
     540:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     542:	83 81       	ldd	r24, Z+3	; 0x03
     544:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];			
     546:	84 81       	ldd	r24, Z+4	; 0x04
     548:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&dutycycle_value, atoi(tmp));
     54a:	ce 01       	movw	r24, r28
     54c:	01 96       	adiw	r24, 0x01	; 1
     54e:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     552:	bc 01       	movw	r22, r24
     554:	8a e6       	ldi	r24, 0x6A	; 106
     556:	91 e4       	ldi	r25, 0x41	; 65
     558:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     55c:	d5 c0       	rjmp	.+426    	; 0x708 <message_handler_HMI+0x278>
		}
		else if (USART1message[0] == 'G'){ //Generator duty cycle message
     55e:	87 34       	cpi	r24, 0x47	; 71
     560:	09 f0       	breq	.+2      	; 0x564 <message_handler_HMI+0xd4>
     562:	48 c0       	rjmp	.+144    	; 0x5f4 <message_handler_HMI+0x164>
			char tmp[3];
			tmp[0]=USART1message[1];
     564:	eb e9       	ldi	r30, 0x9B	; 155
     566:	f1 e4       	ldi	r31, 0x41	; 65
     568:	81 81       	ldd	r24, Z+1	; 0x01
     56a:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     56c:	82 81       	ldd	r24, Z+2	; 0x02
     56e:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     570:	83 81       	ldd	r24, Z+3	; 0x03
     572:	8b 83       	std	Y+3, r24	; 0x03
			update_variable(&adjustgenerator, atoi(tmp));
     574:	ce 01       	movw	r24, r28
     576:	01 96       	adiw	r24, 0x01	; 1
     578:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     57c:	bc 01       	movw	r22, r24
     57e:	87 e7       	ldi	r24, 0x77	; 119
     580:	91 e4       	ldi	r25, 0x41	; 65
     582:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
			if (generatorADCenable==0)
     586:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <generatorADCenable>
     58a:	81 11       	cpse	r24, r1
     58c:	bd c0       	rjmp	.+378    	; 0x708 <message_handler_HMI+0x278>
			{
				if (adjustgenerator==0){		//Turn off generator
     58e:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     592:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     596:	89 2b       	or	r24, r25
     598:	31 f4       	brne	.+12     	; 0x5a6 <message_handler_HMI+0x116>
					update_variable_uint8(&generatorenable,0);
     59a:	60 e0       	ldi	r22, 0x00	; 0
     59c:	86 e7       	ldi	r24, 0x76	; 118
     59e:	91 e4       	ldi	r25, 0x41	; 65
     5a0:	0e 94 45 02 	call	0x48a	; 0x48a <update_variable_uint8>
     5a4:	b1 c0       	rjmp	.+354    	; 0x708 <message_handler_HMI+0x278>
				}
				else if(adjustgenerator>=1 && adjustgenerator<=100){
     5a6:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     5aa:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     5ae:	89 2b       	or	r24, r25
     5b0:	91 f0       	breq	.+36     	; 0x5d6 <message_handler_HMI+0x146>
     5b2:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     5b6:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     5ba:	85 36       	cpi	r24, 0x65	; 101
     5bc:	91 05       	cpc	r25, r1
     5be:	58 f4       	brcc	.+22     	; 0x5d6 <message_handler_HMI+0x146>
					update_variable_uint8(&generatorenable,1);			//Turn on generator
     5c0:	61 e0       	ldi	r22, 0x01	; 1
     5c2:	86 e7       	ldi	r24, 0x76	; 118
     5c4:	91 e4       	ldi	r25, 0x41	; 65
     5c6:	0e 94 45 02 	call	0x48a	; 0x48a <update_variable_uint8>
					update_variable_uint8(&generatorADCenable,0);
     5ca:	60 e0       	ldi	r22, 0x00	; 0
     5cc:	85 e7       	ldi	r24, 0x75	; 117
     5ce:	91 e4       	ldi	r25, 0x41	; 65
     5d0:	0e 94 45 02 	call	0x48a	; 0x48a <update_variable_uint8>
     5d4:	99 c0       	rjmp	.+306    	; 0x708 <message_handler_HMI+0x278>
				}
				else if (adjustgenerator>=101){
     5d6:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     5da:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     5de:	85 36       	cpi	r24, 0x65	; 101
     5e0:	91 05       	cpc	r25, r1
     5e2:	08 f4       	brcc	.+2      	; 0x5e6 <message_handler_HMI+0x156>
     5e4:	91 c0       	rjmp	.+290    	; 0x708 <message_handler_HMI+0x278>
					update_variable(&adjustgenerator, 100);
     5e6:	64 e6       	ldi	r22, 0x64	; 100
     5e8:	70 e0       	ldi	r23, 0x00	; 0
     5ea:	87 e7       	ldi	r24, 0x77	; 119
     5ec:	91 e4       	ldi	r25, 0x41	; 65
     5ee:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     5f2:	8a c0       	rjmp	.+276    	; 0x708 <message_handler_HMI+0x278>
				}
			}
		}
		else if (USART1message[0] == 'Y'){ //Setpoint message
     5f4:	89 35       	cpi	r24, 0x59	; 89
     5f6:	11 f5       	brne	.+68     	; 0x63c <message_handler_HMI+0x1ac>
			char tmp[3];
			tmp[0]=USART1message[1];
     5f8:	eb e9       	ldi	r30, 0x9B	; 155
     5fa:	f1 e4       	ldi	r31, 0x41	; 65
     5fc:	81 81       	ldd	r24, Z+1	; 0x01
     5fe:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     600:	82 81       	ldd	r24, Z+2	; 0x02
     602:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     604:	83 81       	ldd	r24, Z+3	; 0x03
     606:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];
     608:	84 81       	ldd	r24, Z+4	; 0x04
     60a:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&adjustsetpoint, atoi(tmp));
     60c:	ce 01       	movw	r24, r28
     60e:	01 96       	adiw	r24, 0x01	; 1
     610:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     614:	bc 01       	movw	r22, r24
     616:	88 e1       	ldi	r24, 0x18	; 24
     618:	90 e4       	ldi	r25, 0x40	; 64
     61a:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
			if(adjustsetpoint>=4000){
     61e:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <adjustsetpoint>
     622:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <adjustsetpoint+0x1>
     626:	80 3a       	cpi	r24, 0xA0	; 160
     628:	9f 40       	sbci	r25, 0x0F	; 15
     62a:	08 f4       	brcc	.+2      	; 0x62e <message_handler_HMI+0x19e>
     62c:	6d c0       	rjmp	.+218    	; 0x708 <message_handler_HMI+0x278>
				update_variable(&adjustsetpoint, 4000);
     62e:	60 ea       	ldi	r22, 0xA0	; 160
     630:	7f e0       	ldi	r23, 0x0F	; 15
     632:	88 e1       	ldi	r24, 0x18	; 24
     634:	90 e4       	ldi	r25, 0x40	; 64
     636:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     63a:	66 c0       	rjmp	.+204    	; 0x708 <message_handler_HMI+0x278>
			}
		}
		else if (USART1message[0] == 'p'){ //pid kp message
     63c:	80 37       	cpi	r24, 0x70	; 112
     63e:	09 f5       	brne	.+66     	; 0x682 <message_handler_HMI+0x1f2>
			char tmp[3];
			tmp[0]=USART1message[1];
     640:	eb e9       	ldi	r30, 0x9B	; 155
     642:	f1 e4       	ldi	r31, 0x41	; 65
     644:	81 81       	ldd	r24, Z+1	; 0x01
     646:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     648:	82 81       	ldd	r24, Z+2	; 0x02
     64a:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     64c:	83 81       	ldd	r24, Z+3	; 0x03
     64e:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];
     650:	84 81       	ldd	r24, Z+4	; 0x04
     652:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&adjustkp, atoi(tmp));
     654:	ce 01       	movw	r24, r28
     656:	01 96       	adiw	r24, 0x01	; 1
     658:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     65c:	bc 01       	movw	r22, r24
     65e:	8d e7       	ldi	r24, 0x7D	; 125
     660:	91 e4       	ldi	r25, 0x41	; 65
     662:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
			if(adjustkp<=0){
     666:	80 91 7d 41 	lds	r24, 0x417D	; 0x80417d <adjustkp>
     66a:	90 91 7e 41 	lds	r25, 0x417E	; 0x80417e <adjustkp+0x1>
     66e:	89 2b       	or	r24, r25
     670:	09 f0       	breq	.+2      	; 0x674 <message_handler_HMI+0x1e4>
     672:	4a c0       	rjmp	.+148    	; 0x708 <message_handler_HMI+0x278>
				update_variable(&adjustkp, 0);
     674:	60 e0       	ldi	r22, 0x00	; 0
     676:	70 e0       	ldi	r23, 0x00	; 0
     678:	8d e7       	ldi	r24, 0x7D	; 125
     67a:	91 e4       	ldi	r25, 0x41	; 65
     67c:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     680:	43 c0       	rjmp	.+134    	; 0x708 <message_handler_HMI+0x278>
			}
		}
		else if (USART1message[0] == 'i'){ //pid ki message
     682:	89 36       	cpi	r24, 0x69	; 105
     684:	01 f5       	brne	.+64     	; 0x6c6 <message_handler_HMI+0x236>
			char tmp[3];
			tmp[0]=USART1message[1];
     686:	eb e9       	ldi	r30, 0x9B	; 155
     688:	f1 e4       	ldi	r31, 0x41	; 65
     68a:	81 81       	ldd	r24, Z+1	; 0x01
     68c:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     68e:	82 81       	ldd	r24, Z+2	; 0x02
     690:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     692:	83 81       	ldd	r24, Z+3	; 0x03
     694:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];
     696:	84 81       	ldd	r24, Z+4	; 0x04
     698:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&adjustki, atoi(tmp));
     69a:	ce 01       	movw	r24, r28
     69c:	01 96       	adiw	r24, 0x01	; 1
     69e:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     6a2:	bc 01       	movw	r22, r24
     6a4:	8b e7       	ldi	r24, 0x7B	; 123
     6a6:	91 e4       	ldi	r25, 0x41	; 65
     6a8:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
			if(adjustki<=0){
     6ac:	80 91 7b 41 	lds	r24, 0x417B	; 0x80417b <adjustki>
     6b0:	90 91 7c 41 	lds	r25, 0x417C	; 0x80417c <adjustki+0x1>
     6b4:	89 2b       	or	r24, r25
     6b6:	41 f5       	brne	.+80     	; 0x708 <message_handler_HMI+0x278>
				update_variable(&adjustki, 0);
     6b8:	60 e0       	ldi	r22, 0x00	; 0
     6ba:	70 e0       	ldi	r23, 0x00	; 0
     6bc:	8b e7       	ldi	r24, 0x7B	; 123
     6be:	91 e4       	ldi	r25, 0x41	; 65
     6c0:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
     6c4:	21 c0       	rjmp	.+66     	; 0x708 <message_handler_HMI+0x278>
			}
		}
		else if (USART1message[0] == 'd'){ //pid kd message
     6c6:	84 36       	cpi	r24, 0x64	; 100
     6c8:	f9 f4       	brne	.+62     	; 0x708 <message_handler_HMI+0x278>
			char tmp[3];
			tmp[0]=USART1message[1];
     6ca:	eb e9       	ldi	r30, 0x9B	; 155
     6cc:	f1 e4       	ldi	r31, 0x41	; 65
     6ce:	81 81       	ldd	r24, Z+1	; 0x01
     6d0:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=USART1message[2];
     6d2:	82 81       	ldd	r24, Z+2	; 0x02
     6d4:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]=USART1message[3];
     6d6:	83 81       	ldd	r24, Z+3	; 0x03
     6d8:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=USART1message[4];
     6da:	84 81       	ldd	r24, Z+4	; 0x04
     6dc:	8c 83       	std	Y+4, r24	; 0x04
			update_variable(&adjustkd, atoi(tmp));
     6de:	ce 01       	movw	r24, r28
     6e0:	01 96       	adiw	r24, 0x01	; 1
     6e2:	0e 94 bb 14 	call	0x2976	; 0x2976 <atoi>
     6e6:	bc 01       	movw	r22, r24
     6e8:	89 e7       	ldi	r24, 0x79	; 121
     6ea:	91 e4       	ldi	r25, 0x41	; 65
     6ec:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
			if(adjustkd<=0){
     6f0:	80 91 79 41 	lds	r24, 0x4179	; 0x804179 <adjustkd>
     6f4:	90 91 7a 41 	lds	r25, 0x417A	; 0x80417a <adjustkd+0x1>
     6f8:	89 2b       	or	r24, r25
     6fa:	31 f4       	brne	.+12     	; 0x708 <message_handler_HMI+0x278>
				update_variable(&adjustkd, 0);
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	70 e0       	ldi	r23, 0x00	; 0
     700:	89 e7       	ldi	r24, 0x79	; 121
     702:	91 e4       	ldi	r25, 0x41	; 65
     704:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
			}
		}
				
		strcpy(USART1message, "");
     708:	10 92 9b 41 	sts	0x419B, r1	; 0x80419b <USART1message>
		update_variable_uint8(&USART1message_available,0);
     70c:	60 e0       	ldi	r22, 0x00	; 0
     70e:	8a e8       	ldi	r24, 0x8A	; 138
     710:	91 e4       	ldi	r25, 0x41	; 65
     712:	0e 94 45 02 	call	0x48a	; 0x48a <update_variable_uint8>
	}
}
     716:	23 96       	adiw	r28, 0x03	; 3
     718:	cd bf       	out	0x3d, r28	; 61
     71a:	de bf       	out	0x3e, r29	; 62
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	08 95       	ret

00000722 <int2percentage>:
}
void update_variable_uint8(volatile uint8_t *var, uint8_t new_value){
	*var=new_value;
}

uint16_t int2percentage(uint16_t input, uint16_t input_max_value){
     722:	cf 92       	push	r12
     724:	df 92       	push	r13
     726:	ef 92       	push	r14
     728:	ff 92       	push	r15
     72a:	cf 93       	push	r28
     72c:	df 93       	push	r29
     72e:	eb 01       	movw	r28, r22
	float percentage = ((float)input * (100.0 / (float) input_max_value));
     730:	bc 01       	movw	r22, r24
     732:	80 e0       	ldi	r24, 0x00	; 0
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	0e 94 c0 13 	call	0x2780	; 0x2780 <__floatunsisf>
     73a:	6b 01       	movw	r12, r22
     73c:	7c 01       	movw	r14, r24
     73e:	be 01       	movw	r22, r28
     740:	80 e0       	ldi	r24, 0x00	; 0
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	0e 94 c0 13 	call	0x2780	; 0x2780 <__floatunsisf>
     748:	9b 01       	movw	r18, r22
     74a:	ac 01       	movw	r20, r24
     74c:	60 e0       	ldi	r22, 0x00	; 0
     74e:	70 e0       	ldi	r23, 0x00	; 0
     750:	88 ec       	ldi	r24, 0xC8	; 200
     752:	92 e4       	ldi	r25, 0x42	; 66
     754:	0e 94 1f 13 	call	0x263e	; 0x263e <__divsf3>
     758:	9b 01       	movw	r18, r22
     75a:	ac 01       	movw	r20, r24
     75c:	c7 01       	movw	r24, r14
     75e:	b6 01       	movw	r22, r12
     760:	0e 94 4e 14 	call	0x289c	; 0x289c <__mulsf3>
	uint16_t tmp_value=(uint16_t)percentage;
     764:	0e 94 91 13 	call	0x2722	; 0x2722 <__fixunssfsi>
	return tmp_value;
}
     768:	cb 01       	movw	r24, r22
     76a:	df 91       	pop	r29
     76c:	cf 91       	pop	r28
     76e:	ff 90       	pop	r15
     770:	ef 90       	pop	r14
     772:	df 90       	pop	r13
     774:	cf 90       	pop	r12
     776:	08 95       	ret

00000778 <Initialize_system>:
#include "tca.h"
#include "tcb.h"
#include "usart.h"
#include "variables.h"

void Initialize_system(void){
     778:	cf 93       	push	r28
	CLKCTRL_INTERNAL_16M_init();
     77a:	0e 94 c8 00 	call	0x190	; 0x190 <CLKCTRL_INTERNAL_16M_init>
	
	I2C_0_init();		//initialize i2c
     77e:	0e 94 da 10 	call	0x21b4	; 0x21b4 <I2C_0_init>
	LEDS_init();
     782:	0e 94 ce 00 	call	0x19c	; 0x19c <LEDS_init>
	USART1_init();
     786:	0e 94 ea 11 	call	0x23d4	; 0x23d4 <USART1_init>
	HD44780_PCF8574_Init(address);
     78a:	c0 91 3d 41 	lds	r28, 0x413D	; 0x80413d <address>
     78e:	8c 2f       	mov	r24, r28
     790:	0e 94 36 10 	call	0x206c	; 0x206c <HD44780_PCF8574_Init>
	button_init();
     794:	0e 94 d5 00 	call	0x1aa	; 0x1aa <button_init>
	ADC0_init();
     798:	0e 94 9e 00 	call	0x13c	; 0x13c <ADC0_init>
	TCA0_PWM_init();
     79c:	0e 94 84 11 	call	0x2308	; 0x2308 <TCA0_PWM_init>
	TCB0_init();
     7a0:	0e 94 a0 11 	call	0x2340	; 0x2340 <TCB0_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7a4:	83 ed       	ldi	r24, 0xD3	; 211
     7a6:	90 e3       	ldi	r25, 0x30	; 48
     7a8:	01 97       	sbiw	r24, 0x01	; 1
     7aa:	f1 f7       	brne	.-4      	; 0x7a8 <Initialize_system+0x30>
     7ac:	00 c0       	rjmp	.+0      	; 0x7ae <Initialize_system+0x36>
     7ae:	00 00       	nop
	
	_delay_ms(50);
	HD44780_PCF8574_CursorBlink(address);
     7b0:	8c 2f       	mov	r24, r28
     7b2:	0e 94 a3 10 	call	0x2146	; 0x2146 <HD44780_PCF8574_CursorBlink>
     7b6:	83 ed       	ldi	r24, 0xD3	; 211
     7b8:	90 e3       	ldi	r25, 0x30	; 48
     7ba:	01 97       	sbiw	r24, 0x01	; 1
     7bc:	f1 f7       	brne	.-4      	; 0x7ba <Initialize_system+0x42>
     7be:	00 c0       	rjmp	.+0      	; 0x7c0 <Initialize_system+0x48>
     7c0:	00 00       	nop
	_delay_ms(50);
	
	Menu_Intro();	
     7c2:	0e 94 e5 03 	call	0x7ca	; 0x7ca <Menu_Intro>
     7c6:	cf 91       	pop	r28
     7c8:	08 95       	ret

000007ca <Menu_Intro>:

volatile uint8_t io_changed=0;
volatile uint8_t generator_changed=0;
volatile uint8_t regulatormode_changed=0;

void Menu_Intro(void){
     7ca:	cf 93       	push	r28
	HD44780_PCF8574_DisplayClear(addr);
     7cc:	87 e2       	ldi	r24, 0x27	; 39
     7ce:	0e 94 9f 10 	call	0x213e	; 0x213e <HD44780_PCF8574_DisplayClear>
     7d2:	2f ef       	ldi	r18, 0xFF	; 255
     7d4:	89 e6       	ldi	r24, 0x69	; 105
     7d6:	98 e1       	ldi	r25, 0x18	; 24
     7d8:	21 50       	subi	r18, 0x01	; 1
     7da:	80 40       	sbci	r24, 0x00	; 0
     7dc:	90 40       	sbci	r25, 0x00	; 0
     7de:	e1 f7       	brne	.-8      	; 0x7d8 <Menu_Intro+0xe>
     7e0:	00 c0       	rjmp	.+0      	; 0x7e2 <Menu_Intro+0x18>
     7e2:	00 00       	nop
	_delay_ms(500);
	HD44780_PCF8574_PositionXY(addr, 0,0);
     7e4:	40 e0       	ldi	r20, 0x00	; 0
     7e6:	60 e0       	ldi	r22, 0x00	; 0
     7e8:	87 e2       	ldi	r24, 0x27	; 39
     7ea:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "O");
     7ee:	6f e3       	ldi	r22, 0x3F	; 63
     7f0:	71 e4       	ldi	r23, 0x41	; 65
     7f2:	87 e2       	ldi	r24, 0x27	; 39
     7f4:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	HD44780_PCF8574_PositionXY(addr, 0,3);
     7f8:	43 e0       	ldi	r20, 0x03	; 3
     7fa:	60 e0       	ldi	r22, 0x00	; 0
     7fc:	87 e2       	ldi	r24, 0x27	; 39
     7fe:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "O");
     802:	6f e3       	ldi	r22, 0x3F	; 63
     804:	71 e4       	ldi	r23, 0x41	; 65
     806:	87 e2       	ldi	r24, 0x27	; 39
     808:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>

	for (uint8_t i=1;i<19;i++){
     80c:	c1 e0       	ldi	r28, 0x01	; 1
     80e:	27 c0       	rjmp	.+78     	; 0x85e <Menu_Intro+0x94>
		HD44780_PCF8574_PositionXY(addr, i,0);
     810:	40 e0       	ldi	r20, 0x00	; 0
     812:	6c 2f       	mov	r22, r28
     814:	87 e2       	ldi	r24, 0x27	; 39
     816:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, "-");
     81a:	61 e4       	ldi	r22, 0x41	; 65
     81c:	71 e4       	ldi	r23, 0x41	; 65
     81e:	87 e2       	ldi	r24, 0x27	; 39
     820:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
     824:	2f ef       	ldi	r18, 0xFF	; 255
     826:	86 e7       	ldi	r24, 0x76	; 118
     828:	91 e0       	ldi	r25, 0x01	; 1
     82a:	21 50       	subi	r18, 0x01	; 1
     82c:	80 40       	sbci	r24, 0x00	; 0
     82e:	90 40       	sbci	r25, 0x00	; 0
     830:	e1 f7       	brne	.-8      	; 0x82a <Menu_Intro+0x60>
     832:	00 c0       	rjmp	.+0      	; 0x834 <Menu_Intro+0x6a>
     834:	00 00       	nop
		_delay_ms(30);
		HD44780_PCF8574_PositionXY(addr, i,3);
     836:	43 e0       	ldi	r20, 0x03	; 3
     838:	6c 2f       	mov	r22, r28
     83a:	87 e2       	ldi	r24, 0x27	; 39
     83c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, "-");
     840:	61 e4       	ldi	r22, 0x41	; 65
     842:	71 e4       	ldi	r23, 0x41	; 65
     844:	87 e2       	ldi	r24, 0x27	; 39
     846:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
     84a:	2f ef       	ldi	r18, 0xFF	; 255
     84c:	86 e7       	ldi	r24, 0x76	; 118
     84e:	91 e0       	ldi	r25, 0x01	; 1
     850:	21 50       	subi	r18, 0x01	; 1
     852:	80 40       	sbci	r24, 0x00	; 0
     854:	90 40       	sbci	r25, 0x00	; 0
     856:	e1 f7       	brne	.-8      	; 0x850 <Menu_Intro+0x86>
     858:	00 c0       	rjmp	.+0      	; 0x85a <Menu_Intro+0x90>
     85a:	00 00       	nop
	HD44780_PCF8574_PositionXY(addr, 0,0);
	HD44780_PCF8574_DrawString(addr, "O");
	HD44780_PCF8574_PositionXY(addr, 0,3);
	HD44780_PCF8574_DrawString(addr, "O");

	for (uint8_t i=1;i<19;i++){
     85c:	cf 5f       	subi	r28, 0xFF	; 255
     85e:	c3 31       	cpi	r28, 0x13	; 19
     860:	b8 f2       	brcs	.-82     	; 0x810 <Menu_Intro+0x46>
		_delay_ms(30);
		HD44780_PCF8574_PositionXY(addr, i,3);
		HD44780_PCF8574_DrawString(addr, "-");
		_delay_ms(30);
	}
	HD44780_PCF8574_PositionXY(addr, 19,0);
     862:	40 e0       	ldi	r20, 0x00	; 0
     864:	63 e1       	ldi	r22, 0x13	; 19
     866:	87 e2       	ldi	r24, 0x27	; 39
     868:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "0");
     86c:	63 e4       	ldi	r22, 0x43	; 67
     86e:	71 e4       	ldi	r23, 0x41	; 65
     870:	87 e2       	ldi	r24, 0x27	; 39
     872:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	HD44780_PCF8574_PositionXY(addr, 19,3);
     876:	43 e0       	ldi	r20, 0x03	; 3
     878:	63 e1       	ldi	r22, 0x13	; 19
     87a:	87 e2       	ldi	r24, 0x27	; 39
     87c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "0");
     880:	63 e4       	ldi	r22, 0x43	; 67
     882:	71 e4       	ldi	r23, 0x41	; 65
     884:	87 e2       	ldi	r24, 0x27	; 39
     886:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	
	HD44780_PCF8574_PositionXY(addr, 0,1);
     88a:	41 e0       	ldi	r20, 0x01	; 1
     88c:	60 e0       	ldi	r22, 0x00	; 0
     88e:	87 e2       	ldi	r24, 0x27	; 39
     890:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "|");
     894:	65 e4       	ldi	r22, 0x45	; 69
     896:	71 e4       	ldi	r23, 0x41	; 65
     898:	87 e2       	ldi	r24, 0x27	; 39
     89a:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	HD44780_PCF8574_PositionXY(addr, 19,1);
     89e:	41 e0       	ldi	r20, 0x01	; 1
     8a0:	63 e1       	ldi	r22, 0x13	; 19
     8a2:	87 e2       	ldi	r24, 0x27	; 39
     8a4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "|");
     8a8:	65 e4       	ldi	r22, 0x45	; 69
     8aa:	71 e4       	ldi	r23, 0x41	; 65
     8ac:	87 e2       	ldi	r24, 0x27	; 39
     8ae:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	HD44780_PCF8574_PositionXY(addr, 0,2);
     8b2:	42 e0       	ldi	r20, 0x02	; 2
     8b4:	60 e0       	ldi	r22, 0x00	; 0
     8b6:	87 e2       	ldi	r24, 0x27	; 39
     8b8:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "|");
     8bc:	65 e4       	ldi	r22, 0x45	; 69
     8be:	71 e4       	ldi	r23, 0x41	; 65
     8c0:	87 e2       	ldi	r24, 0x27	; 39
     8c2:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	HD44780_PCF8574_PositionXY(addr, 19,2);
     8c6:	42 e0       	ldi	r20, 0x02	; 2
     8c8:	63 e1       	ldi	r22, 0x13	; 19
     8ca:	87 e2       	ldi	r24, 0x27	; 39
     8cc:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "|");
     8d0:	65 e4       	ldi	r22, 0x45	; 69
     8d2:	71 e4       	ldi	r23, 0x41	; 65
     8d4:	87 e2       	ldi	r24, 0x27	; 39
     8d6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	HD44780_PCF8574_PositionXY(addr, 2,1);
     8da:	41 e0       	ldi	r20, 0x01	; 1
     8dc:	62 e0       	ldi	r22, 0x02	; 2
     8de:	87 e2       	ldi	r24, 0x27	; 39
     8e0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "This ");
     8e4:	67 e4       	ldi	r22, 0x47	; 71
     8e6:	71 e4       	ldi	r23, 0x41	; 65
     8e8:	87 e2       	ldi	r24, 0x27	; 39
     8ea:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
     8ee:	2f ef       	ldi	r18, 0xFF	; 255
     8f0:	8f e0       	ldi	r24, 0x0F	; 15
     8f2:	97 e2       	ldi	r25, 0x27	; 39
     8f4:	21 50       	subi	r18, 0x01	; 1
     8f6:	80 40       	sbci	r24, 0x00	; 0
     8f8:	90 40       	sbci	r25, 0x00	; 0
     8fa:	e1 f7       	brne	.-8      	; 0x8f4 <Menu_Intro+0x12a>
     8fc:	00 c0       	rjmp	.+0      	; 0x8fe <Menu_Intro+0x134>
     8fe:	00 00       	nop
	_delay_ms(800);
	HD44780_PCF8574_DrawString(addr, "is");
     900:	6d e4       	ldi	r22, 0x4D	; 77
     902:	71 e4       	ldi	r23, 0x41	; 65
     904:	87 e2       	ldi	r24, 0x27	; 39
     906:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
     90a:	2f ef       	ldi	r18, 0xFF	; 255
     90c:	8f e0       	ldi	r24, 0x0F	; 15
     90e:	97 e2       	ldi	r25, 0x27	; 39
     910:	21 50       	subi	r18, 0x01	; 1
     912:	80 40       	sbci	r24, 0x00	; 0
     914:	90 40       	sbci	r25, 0x00	; 0
     916:	e1 f7       	brne	.-8      	; 0x910 <Menu_Intro+0x146>
     918:	00 c0       	rjmp	.+0      	; 0x91a <Menu_Intro+0x150>
     91a:	00 00       	nop
	_delay_ms(800);
	HD44780_PCF8574_PositionXY(addr, 9,2);
     91c:	42 e0       	ldi	r20, 0x02	; 2
     91e:	69 e0       	ldi	r22, 0x09	; 9
     920:	87 e2       	ldi	r24, 0x27	; 39
     922:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
	HD44780_PCF8574_DrawString(addr, "THE RIGG");
     926:	60 e5       	ldi	r22, 0x50	; 80
     928:	71 e4       	ldi	r23, 0x41	; 65
     92a:	87 e2       	ldi	r24, 0x27	; 39
     92c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
     930:	2f ef       	ldi	r18, 0xFF	; 255
     932:	8b e7       	ldi	r24, 0x7B	; 123
     934:	92 e9       	ldi	r25, 0x92	; 146
     936:	21 50       	subi	r18, 0x01	; 1
     938:	80 40       	sbci	r24, 0x00	; 0
     93a:	90 40       	sbci	r25, 0x00	; 0
     93c:	e1 f7       	brne	.-8      	; 0x936 <Menu_Intro+0x16c>
     93e:	00 c0       	rjmp	.+0      	; 0x940 <Menu_Intro+0x176>
     940:	00 00       	nop
	
	_delay_ms(3000);
	refresh_screen=1;
     942:	81 e0       	ldi	r24, 0x01	; 1
     944:	80 93 74 41 	sts	0x4174, r24	; 0x804174 <refresh_screen>
}
     948:	cf 91       	pop	r28
     94a:	08 95       	ret

0000094c <ButtonUpPressed>:

void ButtonUpPressed(void){	
	if (indexselected > 0 && adjustmode != 1){	
     94c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     950:	88 23       	and	r24, r24
     952:	01 f1       	breq	.+64     	; 0x994 <ButtonUpPressed+0x48>
     954:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     958:	81 30       	cpi	r24, 0x01	; 1
     95a:	e1 f0       	breq	.+56     	; 0x994 <ButtonUpPressed+0x48>
		indexselected--;
     95c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     960:	81 50       	subi	r24, 0x01	; 1
     962:	80 93 81 41 	sts	0x4181, r24	; 0x804181 <indexselected>
		if (indexselected==1){	//scroll menu up
     966:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     96a:	81 30       	cpi	r24, 0x01	; 1
     96c:	39 f4       	brne	.+14     	; 0x97c <ButtonUpPressed+0x30>
			show_0_3=0;
     96e:	10 92 30 41 	sts	0x4130, r1	; 0x804130 <show_0_3>
			show_1_4=1;
     972:	80 93 83 41 	sts	0x4183, r24	; 0x804183 <show_1_4>
			show_2_5=0;
     976:	10 92 82 41 	sts	0x4182, r1	; 0x804182 <show_2_5>
     97a:	d7 c0       	rjmp	.+430    	; 0xb2a <ButtonUpPressed+0x1de>
		}
		else if (indexselected==0){	//scroll menu up
     97c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     980:	81 11       	cpse	r24, r1
     982:	d3 c0       	rjmp	.+422    	; 0xb2a <ButtonUpPressed+0x1de>
			show_0_3=1;
     984:	81 e0       	ldi	r24, 0x01	; 1
     986:	80 93 30 41 	sts	0x4130, r24	; 0x804130 <show_0_3>
			show_1_4=0;
     98a:	10 92 83 41 	sts	0x4183, r1	; 0x804183 <show_1_4>
			show_2_5=0;
     98e:	10 92 82 41 	sts	0x4182, r1	; 0x804182 <show_2_5>
     992:	cb c0       	rjmp	.+406    	; 0xb2a <ButtonUpPressed+0x1de>
		}
	}
	else if(adjustmode==1){
     994:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     998:	81 30       	cpi	r24, 0x01	; 1
     99a:	09 f0       	breq	.+2      	; 0x99e <ButtonUpPressed+0x52>
     99c:	c6 c0       	rjmp	.+396    	; 0xb2a <ButtonUpPressed+0x1de>
		if (menuselected==2){
     99e:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
     9a2:	82 30       	cpi	r24, 0x02	; 2
     9a4:	09 f0       	breq	.+2      	; 0x9a8 <ButtonUpPressed+0x5c>
     9a6:	94 c0       	rjmp	.+296    	; 0xad0 <ButtonUpPressed+0x184>
			if (indexselected == 1){	//selected setpoint
     9a8:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     9ac:	81 30       	cpi	r24, 0x01	; 1
     9ae:	09 f5       	brne	.+66     	; 0x9f2 <ButtonUpPressed+0xa6>
				if (adjustsetpoint<=(adjustsetpointmax-adjustsetpointstep)){//limit upper value of setpoint
     9b0:	80 91 0e 40 	lds	r24, 0x400E	; 0x80400e <adjustsetpointmax>
     9b4:	90 91 0f 40 	lds	r25, 0x400F	; 0x80400f <adjustsetpointmax+0x1>
     9b8:	20 91 16 40 	lds	r18, 0x4016	; 0x804016 <adjustsetpointstep>
     9bc:	30 91 17 40 	lds	r19, 0x4017	; 0x804017 <adjustsetpointstep+0x1>
     9c0:	82 1b       	sub	r24, r18
     9c2:	93 0b       	sbc	r25, r19
     9c4:	20 91 18 40 	lds	r18, 0x4018	; 0x804018 <adjustsetpoint>
     9c8:	30 91 19 40 	lds	r19, 0x4019	; 0x804019 <adjustsetpoint+0x1>
     9cc:	82 17       	cp	r24, r18
     9ce:	93 07       	cpc	r25, r19
     9d0:	08 f4       	brcc	.+2      	; 0x9d4 <ButtonUpPressed+0x88>
     9d2:	ab c0       	rjmp	.+342    	; 0xb2a <ButtonUpPressed+0x1de>
					adjustsetpoint = adjustsetpoint+adjustsetpointstep;
     9d4:	20 91 18 40 	lds	r18, 0x4018	; 0x804018 <adjustsetpoint>
     9d8:	30 91 19 40 	lds	r19, 0x4019	; 0x804019 <adjustsetpoint+0x1>
     9dc:	80 91 16 40 	lds	r24, 0x4016	; 0x804016 <adjustsetpointstep>
     9e0:	90 91 17 40 	lds	r25, 0x4017	; 0x804017 <adjustsetpointstep+0x1>
     9e4:	82 0f       	add	r24, r18
     9e6:	93 1f       	adc	r25, r19
     9e8:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <adjustsetpoint>
     9ec:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <adjustsetpoint+0x1>
     9f0:	9c c0       	rjmp	.+312    	; 0xb2a <ButtonUpPressed+0x1de>
				}
				
			}
			else if (indexselected==2){	//selected KP
     9f2:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     9f6:	82 30       	cpi	r24, 0x02	; 2
     9f8:	09 f5       	brne	.+66     	; 0xa3c <ButtonUpPressed+0xf0>
				if (adjustkp<=(adjustkpmax-adjustkpstep)){	//limit upper value of KP
     9fa:	80 91 0c 40 	lds	r24, 0x400C	; 0x80400c <adjustkpmax>
     9fe:	90 91 0d 40 	lds	r25, 0x400D	; 0x80400d <adjustkpmax+0x1>
     a02:	20 91 14 40 	lds	r18, 0x4014	; 0x804014 <adjustkpstep>
     a06:	30 91 15 40 	lds	r19, 0x4015	; 0x804015 <adjustkpstep+0x1>
     a0a:	82 1b       	sub	r24, r18
     a0c:	93 0b       	sbc	r25, r19
     a0e:	20 91 7d 41 	lds	r18, 0x417D	; 0x80417d <adjustkp>
     a12:	30 91 7e 41 	lds	r19, 0x417E	; 0x80417e <adjustkp+0x1>
     a16:	82 17       	cp	r24, r18
     a18:	93 07       	cpc	r25, r19
     a1a:	08 f4       	brcc	.+2      	; 0xa1e <ButtonUpPressed+0xd2>
     a1c:	86 c0       	rjmp	.+268    	; 0xb2a <ButtonUpPressed+0x1de>
					adjustkp=adjustkp+adjustkpstep;
     a1e:	20 91 7d 41 	lds	r18, 0x417D	; 0x80417d <adjustkp>
     a22:	30 91 7e 41 	lds	r19, 0x417E	; 0x80417e <adjustkp+0x1>
     a26:	80 91 14 40 	lds	r24, 0x4014	; 0x804014 <adjustkpstep>
     a2a:	90 91 15 40 	lds	r25, 0x4015	; 0x804015 <adjustkpstep+0x1>
     a2e:	82 0f       	add	r24, r18
     a30:	93 1f       	adc	r25, r19
     a32:	80 93 7d 41 	sts	0x417D, r24	; 0x80417d <adjustkp>
     a36:	90 93 7e 41 	sts	0x417E, r25	; 0x80417e <adjustkp+0x1>
     a3a:	77 c0       	rjmp	.+238    	; 0xb2a <ButtonUpPressed+0x1de>
				}
			}
			else if (indexselected==3){	//selected KI
     a3c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     a40:	83 30       	cpi	r24, 0x03	; 3
     a42:	09 f5       	brne	.+66     	; 0xa86 <ButtonUpPressed+0x13a>
				if (adjustki<=(adjustkimax-adjustkistep)){	//limit upper value of KI
     a44:	80 91 0a 40 	lds	r24, 0x400A	; 0x80400a <adjustkimax>
     a48:	90 91 0b 40 	lds	r25, 0x400B	; 0x80400b <adjustkimax+0x1>
     a4c:	20 91 12 40 	lds	r18, 0x4012	; 0x804012 <adjustkistep>
     a50:	30 91 13 40 	lds	r19, 0x4013	; 0x804013 <adjustkistep+0x1>
     a54:	82 1b       	sub	r24, r18
     a56:	93 0b       	sbc	r25, r19
     a58:	20 91 7b 41 	lds	r18, 0x417B	; 0x80417b <adjustki>
     a5c:	30 91 7c 41 	lds	r19, 0x417C	; 0x80417c <adjustki+0x1>
     a60:	82 17       	cp	r24, r18
     a62:	93 07       	cpc	r25, r19
     a64:	08 f4       	brcc	.+2      	; 0xa68 <ButtonUpPressed+0x11c>
     a66:	61 c0       	rjmp	.+194    	; 0xb2a <ButtonUpPressed+0x1de>
					adjustki=adjustki+adjustkistep;
     a68:	20 91 7b 41 	lds	r18, 0x417B	; 0x80417b <adjustki>
     a6c:	30 91 7c 41 	lds	r19, 0x417C	; 0x80417c <adjustki+0x1>
     a70:	80 91 12 40 	lds	r24, 0x4012	; 0x804012 <adjustkistep>
     a74:	90 91 13 40 	lds	r25, 0x4013	; 0x804013 <adjustkistep+0x1>
     a78:	82 0f       	add	r24, r18
     a7a:	93 1f       	adc	r25, r19
     a7c:	80 93 7b 41 	sts	0x417B, r24	; 0x80417b <adjustki>
     a80:	90 93 7c 41 	sts	0x417C, r25	; 0x80417c <adjustki+0x1>
     a84:	52 c0       	rjmp	.+164    	; 0xb2a <ButtonUpPressed+0x1de>
				}
			}
			else if (indexselected==4){	//selected KD
     a86:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     a8a:	84 30       	cpi	r24, 0x04	; 4
     a8c:	09 f0       	breq	.+2      	; 0xa90 <ButtonUpPressed+0x144>
     a8e:	4d c0       	rjmp	.+154    	; 0xb2a <ButtonUpPressed+0x1de>
				if (adjustkd<=(adjustkdmax-adjustkdstep)){	//limit upper value of KD
     a90:	80 91 08 40 	lds	r24, 0x4008	; 0x804008 <adjustkdmax>
     a94:	90 91 09 40 	lds	r25, 0x4009	; 0x804009 <adjustkdmax+0x1>
     a98:	20 91 10 40 	lds	r18, 0x4010	; 0x804010 <adjustkdstep>
     a9c:	30 91 11 40 	lds	r19, 0x4011	; 0x804011 <adjustkdstep+0x1>
     aa0:	82 1b       	sub	r24, r18
     aa2:	93 0b       	sbc	r25, r19
     aa4:	20 91 79 41 	lds	r18, 0x4179	; 0x804179 <adjustkd>
     aa8:	30 91 7a 41 	lds	r19, 0x417A	; 0x80417a <adjustkd+0x1>
     aac:	82 17       	cp	r24, r18
     aae:	93 07       	cpc	r25, r19
     ab0:	e0 f1       	brcs	.+120    	; 0xb2a <ButtonUpPressed+0x1de>
					adjustkd=adjustkd+adjustkdstep;
     ab2:	20 91 79 41 	lds	r18, 0x4179	; 0x804179 <adjustkd>
     ab6:	30 91 7a 41 	lds	r19, 0x417A	; 0x80417a <adjustkd+0x1>
     aba:	80 91 10 40 	lds	r24, 0x4010	; 0x804010 <adjustkdstep>
     abe:	90 91 11 40 	lds	r25, 0x4011	; 0x804011 <adjustkdstep+0x1>
     ac2:	82 0f       	add	r24, r18
     ac4:	93 1f       	adc	r25, r19
     ac6:	80 93 79 41 	sts	0x4179, r24	; 0x804179 <adjustkd>
     aca:	90 93 7a 41 	sts	0x417A, r25	; 0x80417a <adjustkd+0x1>
     ace:	2d c0       	rjmp	.+90     	; 0xb2a <ButtonUpPressed+0x1de>
				}
			}
		}
		else if(menuselected=4){	//generator menu selected
     ad0:	84 e0       	ldi	r24, 0x04	; 4
     ad2:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <menuselected>
			if (indexselected == 2){	//load selected
     ad6:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     ada:	82 30       	cpi	r24, 0x02	; 2
     adc:	31 f5       	brne	.+76     	; 0xb2a <ButtonUpPressed+0x1de>
				if (adjustgenerator <adjustgeneratormax){
     ade:	20 91 77 41 	lds	r18, 0x4177	; 0x804177 <adjustgenerator>
     ae2:	30 91 78 41 	lds	r19, 0x4178	; 0x804178 <adjustgenerator+0x1>
     ae6:	80 91 02 40 	lds	r24, 0x4002	; 0x804002 <adjustgeneratormax>
     aea:	90 91 03 40 	lds	r25, 0x4003	; 0x804003 <adjustgeneratormax+0x1>
     aee:	28 17       	cp	r18, r24
     af0:	39 07       	cpc	r19, r25
     af2:	d8 f4       	brcc	.+54     	; 0xb2a <ButtonUpPressed+0x1de>
					adjustgenerator=adjustgenerator+adjustgeneratorstep;
     af4:	20 91 77 41 	lds	r18, 0x4177	; 0x804177 <adjustgenerator>
     af8:	30 91 78 41 	lds	r19, 0x4178	; 0x804178 <adjustgenerator+0x1>
     afc:	80 91 04 40 	lds	r24, 0x4004	; 0x804004 <adjustgeneratorstep>
     b00:	90 91 05 40 	lds	r25, 0x4005	; 0x804005 <adjustgeneratorstep+0x1>
     b04:	82 0f       	add	r24, r18
     b06:	93 1f       	adc	r25, r19
     b08:	80 93 77 41 	sts	0x4177, r24	; 0x804177 <adjustgenerator>
     b0c:	90 93 78 41 	sts	0x4178, r25	; 0x804178 <adjustgenerator+0x1>
					if (adjustgenerator>= 100){
     b10:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     b14:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     b18:	84 36       	cpi	r24, 0x64	; 100
     b1a:	91 05       	cpc	r25, r1
     b1c:	30 f0       	brcs	.+12     	; 0xb2a <ButtonUpPressed+0x1de>
						adjustgenerator=100;
     b1e:	84 e6       	ldi	r24, 0x64	; 100
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	80 93 77 41 	sts	0x4177, r24	; 0x804177 <adjustgenerator>
     b26:	90 93 78 41 	sts	0x4178, r25	; 0x804178 <adjustgenerator+0x1>
				}
			}
		}
		
	}
	refresh_screen=1;
     b2a:	81 e0       	ldi	r24, 0x01	; 1
     b2c:	80 93 74 41 	sts	0x4174, r24	; 0x804174 <refresh_screen>
     b30:	08 95       	ret

00000b32 <ButtonDownPressed>:
}

void ButtonDownPressed(void){	
	if (indexselected < max_menu_index && adjustmode != 1){
     b32:	90 91 81 41 	lds	r25, 0x4181	; 0x804181 <indexselected>
     b36:	80 91 31 41 	lds	r24, 0x4131	; 0x804131 <max_menu_index>
     b3a:	98 17       	cp	r25, r24
     b3c:	10 f5       	brcc	.+68     	; 0xb82 <ButtonDownPressed+0x50>
     b3e:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     b42:	81 30       	cpi	r24, 0x01	; 1
     b44:	f1 f0       	breq	.+60     	; 0xb82 <ButtonDownPressed+0x50>
		indexselected++;
     b46:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     b4a:	8f 5f       	subi	r24, 0xFF	; 255
     b4c:	80 93 81 41 	sts	0x4181, r24	; 0x804181 <indexselected>
		if (indexselected==4){		//scroll down menu
     b50:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     b54:	84 30       	cpi	r24, 0x04	; 4
     b56:	41 f4       	brne	.+16     	; 0xb68 <ButtonDownPressed+0x36>
			show_0_3=0;
     b58:	10 92 30 41 	sts	0x4130, r1	; 0x804130 <show_0_3>
			show_1_4=1;
     b5c:	81 e0       	ldi	r24, 0x01	; 1
     b5e:	80 93 83 41 	sts	0x4183, r24	; 0x804183 <show_1_4>
			show_2_5=0;		
     b62:	10 92 82 41 	sts	0x4182, r1	; 0x804182 <show_2_5>
     b66:	aa c0       	rjmp	.+340    	; 0xcbc <ButtonDownPressed+0x18a>
		}
		else if (indexselected==5){	//scroll down menu
     b68:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     b6c:	85 30       	cpi	r24, 0x05	; 5
     b6e:	09 f0       	breq	.+2      	; 0xb72 <ButtonDownPressed+0x40>
     b70:	a5 c0       	rjmp	.+330    	; 0xcbc <ButtonDownPressed+0x18a>
			show_0_3=0;
     b72:	10 92 30 41 	sts	0x4130, r1	; 0x804130 <show_0_3>
			show_1_4=0;
     b76:	10 92 83 41 	sts	0x4183, r1	; 0x804183 <show_1_4>
			show_2_5=1;
     b7a:	81 e0       	ldi	r24, 0x01	; 1
     b7c:	80 93 82 41 	sts	0x4182, r24	; 0x804182 <show_2_5>
     b80:	9d c0       	rjmp	.+314    	; 0xcbc <ButtonDownPressed+0x18a>
		}
	}
	else if(adjustmode==1){
     b82:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     b86:	81 30       	cpi	r24, 0x01	; 1
     b88:	09 f0       	breq	.+2      	; 0xb8c <ButtonDownPressed+0x5a>
     b8a:	98 c0       	rjmp	.+304    	; 0xcbc <ButtonDownPressed+0x18a>
		if (menuselected==2){	// Regulator menu selected
     b8c:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
     b90:	82 30       	cpi	r24, 0x02	; 2
     b92:	09 f0       	breq	.+2      	; 0xb96 <ButtonDownPressed+0x64>
     b94:	6e c0       	rjmp	.+220    	; 0xc72 <ButtonDownPressed+0x140>
			if (indexselected == 1){	//Setpoint marked
     b96:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     b9a:	81 30       	cpi	r24, 0x01	; 1
     b9c:	e9 f4       	brne	.+58     	; 0xbd8 <ButtonDownPressed+0xa6>
				adjustsetpoint = adjustsetpoint-adjustsetpointstep;
     b9e:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <adjustsetpoint>
     ba2:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <adjustsetpoint+0x1>
     ba6:	20 91 16 40 	lds	r18, 0x4016	; 0x804016 <adjustsetpointstep>
     baa:	30 91 17 40 	lds	r19, 0x4017	; 0x804017 <adjustsetpointstep+0x1>
     bae:	82 1b       	sub	r24, r18
     bb0:	93 0b       	sbc	r25, r19
     bb2:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <adjustsetpoint>
     bb6:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <adjustsetpoint+0x1>
				if(adjustsetpoint<=100){
     bba:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <adjustsetpoint>
     bbe:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <adjustsetpoint+0x1>
     bc2:	85 36       	cpi	r24, 0x65	; 101
     bc4:	91 05       	cpc	r25, r1
     bc6:	08 f0       	brcs	.+2      	; 0xbca <ButtonDownPressed+0x98>
     bc8:	79 c0       	rjmp	.+242    	; 0xcbc <ButtonDownPressed+0x18a>
					adjustsetpoint=100;
     bca:	84 e6       	ldi	r24, 0x64	; 100
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	80 93 18 40 	sts	0x4018, r24	; 0x804018 <adjustsetpoint>
     bd2:	90 93 19 40 	sts	0x4019, r25	; 0x804019 <adjustsetpoint+0x1>
     bd6:	72 c0       	rjmp	.+228    	; 0xcbc <ButtonDownPressed+0x18a>
				}
			}
			else if (indexselected==2){	//KP marked
     bd8:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     bdc:	82 30       	cpi	r24, 0x02	; 2
     bde:	b1 f4       	brne	.+44     	; 0xc0c <ButtonDownPressed+0xda>
				
				if (adjustkp!=0){
     be0:	80 91 7d 41 	lds	r24, 0x417D	; 0x80417d <adjustkp>
     be4:	90 91 7e 41 	lds	r25, 0x417E	; 0x80417e <adjustkp+0x1>
     be8:	89 2b       	or	r24, r25
     bea:	09 f4       	brne	.+2      	; 0xbee <ButtonDownPressed+0xbc>
     bec:	67 c0       	rjmp	.+206    	; 0xcbc <ButtonDownPressed+0x18a>
					adjustkp=adjustkp-adjustkpstep;
     bee:	80 91 7d 41 	lds	r24, 0x417D	; 0x80417d <adjustkp>
     bf2:	90 91 7e 41 	lds	r25, 0x417E	; 0x80417e <adjustkp+0x1>
     bf6:	20 91 14 40 	lds	r18, 0x4014	; 0x804014 <adjustkpstep>
     bfa:	30 91 15 40 	lds	r19, 0x4015	; 0x804015 <adjustkpstep+0x1>
     bfe:	82 1b       	sub	r24, r18
     c00:	93 0b       	sbc	r25, r19
     c02:	80 93 7d 41 	sts	0x417D, r24	; 0x80417d <adjustkp>
     c06:	90 93 7e 41 	sts	0x417E, r25	; 0x80417e <adjustkp+0x1>
     c0a:	58 c0       	rjmp	.+176    	; 0xcbc <ButtonDownPressed+0x18a>
				}
			}
			else if (indexselected==3){	//KI marked
     c0c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     c10:	83 30       	cpi	r24, 0x03	; 3
     c12:	b1 f4       	brne	.+44     	; 0xc40 <ButtonDownPressed+0x10e>
				if (adjustki!=0){
     c14:	80 91 7b 41 	lds	r24, 0x417B	; 0x80417b <adjustki>
     c18:	90 91 7c 41 	lds	r25, 0x417C	; 0x80417c <adjustki+0x1>
     c1c:	89 2b       	or	r24, r25
     c1e:	09 f4       	brne	.+2      	; 0xc22 <ButtonDownPressed+0xf0>
     c20:	4d c0       	rjmp	.+154    	; 0xcbc <ButtonDownPressed+0x18a>
					adjustki=adjustki-adjustkistep;
     c22:	80 91 7b 41 	lds	r24, 0x417B	; 0x80417b <adjustki>
     c26:	90 91 7c 41 	lds	r25, 0x417C	; 0x80417c <adjustki+0x1>
     c2a:	20 91 12 40 	lds	r18, 0x4012	; 0x804012 <adjustkistep>
     c2e:	30 91 13 40 	lds	r19, 0x4013	; 0x804013 <adjustkistep+0x1>
     c32:	82 1b       	sub	r24, r18
     c34:	93 0b       	sbc	r25, r19
     c36:	80 93 7b 41 	sts	0x417B, r24	; 0x80417b <adjustki>
     c3a:	90 93 7c 41 	sts	0x417C, r25	; 0x80417c <adjustki+0x1>
     c3e:	3e c0       	rjmp	.+124    	; 0xcbc <ButtonDownPressed+0x18a>
				}
			}
			else if (indexselected==4){	//KD marked
     c40:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     c44:	84 30       	cpi	r24, 0x04	; 4
     c46:	d1 f5       	brne	.+116    	; 0xcbc <ButtonDownPressed+0x18a>
				
				if (adjustkd!=0){
     c48:	80 91 79 41 	lds	r24, 0x4179	; 0x804179 <adjustkd>
     c4c:	90 91 7a 41 	lds	r25, 0x417A	; 0x80417a <adjustkd+0x1>
     c50:	89 2b       	or	r24, r25
     c52:	a1 f1       	breq	.+104    	; 0xcbc <ButtonDownPressed+0x18a>
					adjustkd=adjustkd-adjustkdstep;
     c54:	80 91 79 41 	lds	r24, 0x4179	; 0x804179 <adjustkd>
     c58:	90 91 7a 41 	lds	r25, 0x417A	; 0x80417a <adjustkd+0x1>
     c5c:	20 91 10 40 	lds	r18, 0x4010	; 0x804010 <adjustkdstep>
     c60:	30 91 11 40 	lds	r19, 0x4011	; 0x804011 <adjustkdstep+0x1>
     c64:	82 1b       	sub	r24, r18
     c66:	93 0b       	sbc	r25, r19
     c68:	80 93 79 41 	sts	0x4179, r24	; 0x804179 <adjustkd>
     c6c:	90 93 7a 41 	sts	0x417A, r25	; 0x80417a <adjustkd+0x1>
     c70:	25 c0       	rjmp	.+74     	; 0xcbc <ButtonDownPressed+0x18a>
				}
			}
		}
		else if(menuselected=4){	//Generator menu selected
     c72:	84 e0       	ldi	r24, 0x04	; 4
     c74:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <menuselected>
			if (indexselected == 2){	//Load marked
     c78:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     c7c:	82 30       	cpi	r24, 0x02	; 2
     c7e:	f1 f4       	brne	.+60     	; 0xcbc <ButtonDownPressed+0x18a>
				if (adjustgenerator !=0){
     c80:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     c84:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     c88:	89 2b       	or	r24, r25
     c8a:	c1 f0       	breq	.+48     	; 0xcbc <ButtonDownPressed+0x18a>
					adjustgenerator=adjustgenerator-adjustgeneratorstep;
     c8c:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     c90:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     c94:	20 91 04 40 	lds	r18, 0x4004	; 0x804004 <adjustgeneratorstep>
     c98:	30 91 05 40 	lds	r19, 0x4005	; 0x804005 <adjustgeneratorstep+0x1>
     c9c:	82 1b       	sub	r24, r18
     c9e:	93 0b       	sbc	r25, r19
     ca0:	80 93 77 41 	sts	0x4177, r24	; 0x804177 <adjustgenerator>
     ca4:	90 93 78 41 	sts	0x4178, r25	; 0x804178 <adjustgenerator+0x1>
					if (adjustgenerator <=0){
     ca8:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
     cac:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
     cb0:	89 2b       	or	r24, r25
     cb2:	21 f4       	brne	.+8      	; 0xcbc <ButtonDownPressed+0x18a>
						adjustgenerator=0;
     cb4:	10 92 77 41 	sts	0x4177, r1	; 0x804177 <adjustgenerator>
     cb8:	10 92 78 41 	sts	0x4178, r1	; 0x804178 <adjustgenerator+0x1>
				}
			}			
		}
		
	}
	refresh_screen=1;
     cbc:	81 e0       	ldi	r24, 0x01	; 1
     cbe:	80 93 74 41 	sts	0x4174, r24	; 0x804174 <refresh_screen>
     cc2:	08 95       	ret

00000cc4 <ButtonEnterPressed>:
}

void ButtonEnterPressed(void){
	if (menuselected == 0){		//main menu
     cc4:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
     cc8:	81 11       	cpse	r24, r1
     cca:	34 c0       	rjmp	.+104    	; 0xd34 <ButtonEnterPressed+0x70>
		if (indexselected == 0){	//info screen selected
     ccc:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     cd0:	81 11       	cpse	r24, r1
     cd2:	08 c0       	rjmp	.+16     	; 0xce4 <ButtonEnterPressed+0x20>
			menuselected = 1;
     cd4:	81 e0       	ldi	r24, 0x01	; 1
     cd6:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <menuselected>
			max_menu_index=0;
     cda:	10 92 31 41 	sts	0x4131, r1	; 0x804131 <max_menu_index>
			indexselected=0;
     cde:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
     ce2:	c8 c1       	rjmp	.+912    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected == 1){	//regulatormode
     ce4:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     ce8:	81 30       	cpi	r24, 0x01	; 1
     cea:	49 f4       	brne	.+18     	; 0xcfe <ButtonEnterPressed+0x3a>
			menuselected = 2;
     cec:	82 e0       	ldi	r24, 0x02	; 2
     cee:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <menuselected>
			indexselected=0;
     cf2:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
			max_menu_index=5;
     cf6:	85 e0       	ldi	r24, 0x05	; 5
     cf8:	80 93 31 41 	sts	0x4131, r24	; 0x804131 <max_menu_index>
     cfc:	bb c1       	rjmp	.+886    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected == 2){	//io menu
     cfe:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     d02:	82 30       	cpi	r24, 0x02	; 2
     d04:	49 f4       	brne	.+18     	; 0xd18 <ButtonEnterPressed+0x54>
			menuselected = 3;
     d06:	83 e0       	ldi	r24, 0x03	; 3
     d08:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <menuselected>
			max_menu_index=4;
     d0c:	84 e0       	ldi	r24, 0x04	; 4
     d0e:	80 93 31 41 	sts	0x4131, r24	; 0x804131 <max_menu_index>
			indexselected=0;
     d12:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
     d16:	ae c1       	rjmp	.+860    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected == 3){	//generator menu
     d18:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     d1c:	83 30       	cpi	r24, 0x03	; 3
     d1e:	09 f0       	breq	.+2      	; 0xd22 <ButtonEnterPressed+0x5e>
     d20:	a9 c1       	rjmp	.+850    	; 0x1074 <ButtonEnterPressed+0x3b0>
			menuselected = 4;
     d22:	84 e0       	ldi	r24, 0x04	; 4
     d24:	80 93 1a 40 	sts	0x401A, r24	; 0x80401a <menuselected>
			max_menu_index=3;
     d28:	83 e0       	ldi	r24, 0x03	; 3
     d2a:	80 93 31 41 	sts	0x4131, r24	; 0x804131 <max_menu_index>
			indexselected=0;
     d2e:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
     d32:	a0 c1       	rjmp	.+832    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
	}
	
	
	else if (menuselected==1){	//info screen
     d34:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
     d38:	81 30       	cpi	r24, 0x01	; 1
     d3a:	41 f4       	brne	.+16     	; 0xd4c <ButtonEnterPressed+0x88>
		menuselected=0;
     d3c:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <menuselected>
		max_menu_index=3;
     d40:	83 e0       	ldi	r24, 0x03	; 3
     d42:	80 93 31 41 	sts	0x4131, r24	; 0x804131 <max_menu_index>
		indexselected=0;
     d46:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
     d4a:	94 c1       	rjmp	.+808    	; 0x1074 <ButtonEnterPressed+0x3b0>
	}
	else if(menuselected ==2){	//regulatormode		
     d4c:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
     d50:	82 30       	cpi	r24, 0x02	; 2
     d52:	09 f0       	breq	.+2      	; 0xd56 <ButtonEnterPressed+0x92>
     d54:	8b c0       	rjmp	.+278    	; 0xe6c <ButtonEnterPressed+0x1a8>
		regulatormode_changed=1;
     d56:	81 e0       	ldi	r24, 0x01	; 1
     d58:	80 93 71 41 	sts	0x4171, r24	; 0x804171 <regulatormode_changed>
		if (indexselected==0){	//toggle activate
     d5c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     d60:	81 11       	cpse	r24, r1
     d62:	14 c0       	rjmp	.+40     	; 0xd8c <ButtonEnterPressed+0xc8>
			if (regulatormodestatus==0){	
     d64:	80 91 80 41 	lds	r24, 0x4180	; 0x804180 <regulatormodestatus>
     d68:	81 11       	cpse	r24, r1
     d6a:	08 c0       	rjmp	.+16     	; 0xd7c <ButtonEnterPressed+0xb8>
				regulatormodestatus=1;
     d6c:	81 e0       	ldi	r24, 0x01	; 1
     d6e:	80 93 80 41 	sts	0x4180, r24	; 0x804180 <regulatormodestatus>
				digital_in_status=0;
     d72:	10 92 01 40 	sts	0x4001, r1	; 0x804001 <digital_in_status>
				analog_in_status=0;
     d76:	10 92 6d 41 	sts	0x416D, r1	; 0x80416d <analog_in_status>
     d7a:	7c c1       	rjmp	.+760    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
			else if (regulatormodestatus==1){
     d7c:	80 91 80 41 	lds	r24, 0x4180	; 0x804180 <regulatormodestatus>
     d80:	81 30       	cpi	r24, 0x01	; 1
     d82:	09 f0       	breq	.+2      	; 0xd86 <ButtonEnterPressed+0xc2>
     d84:	77 c1       	rjmp	.+750    	; 0x1074 <ButtonEnterPressed+0x3b0>
				regulatormodestatus=0;
     d86:	10 92 80 41 	sts	0x4180, r1	; 0x804180 <regulatormodestatus>
     d8a:	74 c1       	rjmp	.+744    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
		}
		else if (indexselected==1 && adjustmode==0){	//enter adjustmode for setpoint
     d8c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     d90:	81 30       	cpi	r24, 0x01	; 1
     d92:	41 f4       	brne	.+16     	; 0xda4 <ButtonEnterPressed+0xe0>
     d94:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     d98:	81 11       	cpse	r24, r1
     d9a:	04 c0       	rjmp	.+8      	; 0xda4 <ButtonEnterPressed+0xe0>
			adjustmode=1;
     d9c:	81 e0       	ldi	r24, 0x01	; 1
     d9e:	80 93 7f 41 	sts	0x417F, r24	; 0x80417f <adjustmode>
     da2:	68 c1       	rjmp	.+720    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==1 && adjustmode==1){	//exit adjustmode
     da4:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     da8:	81 30       	cpi	r24, 0x01	; 1
     daa:	39 f4       	brne	.+14     	; 0xdba <ButtonEnterPressed+0xf6>
     dac:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     db0:	81 30       	cpi	r24, 0x01	; 1
     db2:	19 f4       	brne	.+6      	; 0xdba <ButtonEnterPressed+0xf6>
			adjustmode=0;
     db4:	10 92 7f 41 	sts	0x417F, r1	; 0x80417f <adjustmode>
     db8:	5d c1       	rjmp	.+698    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==2 && adjustmode==0){	//enter adjustmode for KP
     dba:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     dbe:	82 30       	cpi	r24, 0x02	; 2
     dc0:	41 f4       	brne	.+16     	; 0xdd2 <ButtonEnterPressed+0x10e>
     dc2:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     dc6:	81 11       	cpse	r24, r1
     dc8:	04 c0       	rjmp	.+8      	; 0xdd2 <ButtonEnterPressed+0x10e>
			adjustmode=1;
     dca:	81 e0       	ldi	r24, 0x01	; 1
     dcc:	80 93 7f 41 	sts	0x417F, r24	; 0x80417f <adjustmode>
     dd0:	51 c1       	rjmp	.+674    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==2 && adjustmode==1){	//exit adjustmode
     dd2:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     dd6:	82 30       	cpi	r24, 0x02	; 2
     dd8:	39 f4       	brne	.+14     	; 0xde8 <ButtonEnterPressed+0x124>
     dda:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     dde:	81 30       	cpi	r24, 0x01	; 1
     de0:	19 f4       	brne	.+6      	; 0xde8 <ButtonEnterPressed+0x124>
			adjustmode=0;
     de2:	10 92 7f 41 	sts	0x417F, r1	; 0x80417f <adjustmode>
     de6:	46 c1       	rjmp	.+652    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==3 && adjustmode==0){	//enter adjustmode for KI
     de8:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     dec:	83 30       	cpi	r24, 0x03	; 3
     dee:	41 f4       	brne	.+16     	; 0xe00 <ButtonEnterPressed+0x13c>
     df0:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     df4:	81 11       	cpse	r24, r1
     df6:	04 c0       	rjmp	.+8      	; 0xe00 <ButtonEnterPressed+0x13c>
			adjustmode=1;
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	80 93 7f 41 	sts	0x417F, r24	; 0x80417f <adjustmode>
     dfe:	3a c1       	rjmp	.+628    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==3 && adjustmode==1){	//exit adjustmode
     e00:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	39 f4       	brne	.+14     	; 0xe16 <ButtonEnterPressed+0x152>
     e08:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     e0c:	81 30       	cpi	r24, 0x01	; 1
     e0e:	19 f4       	brne	.+6      	; 0xe16 <ButtonEnterPressed+0x152>
			adjustmode=0;
     e10:	10 92 7f 41 	sts	0x417F, r1	; 0x80417f <adjustmode>
     e14:	2f c1       	rjmp	.+606    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==4 && adjustmode==0){	//enter adjustmode for KD
     e16:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     e1a:	84 30       	cpi	r24, 0x04	; 4
     e1c:	41 f4       	brne	.+16     	; 0xe2e <ButtonEnterPressed+0x16a>
     e1e:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     e22:	81 11       	cpse	r24, r1
     e24:	04 c0       	rjmp	.+8      	; 0xe2e <ButtonEnterPressed+0x16a>
			adjustmode=1;
     e26:	81 e0       	ldi	r24, 0x01	; 1
     e28:	80 93 7f 41 	sts	0x417F, r24	; 0x80417f <adjustmode>
     e2c:	23 c1       	rjmp	.+582    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==4 && adjustmode==1){	//exit adjustmode
     e2e:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     e32:	84 30       	cpi	r24, 0x04	; 4
     e34:	39 f4       	brne	.+14     	; 0xe44 <ButtonEnterPressed+0x180>
     e36:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
     e3a:	81 30       	cpi	r24, 0x01	; 1
     e3c:	19 f4       	brne	.+6      	; 0xe44 <ButtonEnterPressed+0x180>
			adjustmode=0;
     e3e:	10 92 7f 41 	sts	0x417F, r1	; 0x80417f <adjustmode>
     e42:	18 c1       	rjmp	.+560    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
		else if (indexselected==5){	//return to main menu
     e44:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     e48:	85 30       	cpi	r24, 0x05	; 5
     e4a:	09 f0       	breq	.+2      	; 0xe4e <ButtonEnterPressed+0x18a>
     e4c:	13 c1       	rjmp	.+550    	; 0x1074 <ButtonEnterPressed+0x3b0>
			menuselected=0;			
     e4e:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <menuselected>
			max_menu_index=3;
     e52:	83 e0       	ldi	r24, 0x03	; 3
     e54:	80 93 31 41 	sts	0x4131, r24	; 0x804131 <max_menu_index>
			indexselected=0;
     e58:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
			show_0_3=1;
     e5c:	81 e0       	ldi	r24, 0x01	; 1
     e5e:	80 93 30 41 	sts	0x4130, r24	; 0x804130 <show_0_3>
			show_1_4=0;
     e62:	10 92 83 41 	sts	0x4183, r1	; 0x804183 <show_1_4>
			show_2_5=0;
     e66:	10 92 82 41 	sts	0x4182, r1	; 0x804182 <show_2_5>
     e6a:	04 c1       	rjmp	.+520    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
	}
	else if(menuselected ==3){	//io menu
     e6c:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
     e70:	83 30       	cpi	r24, 0x03	; 3
     e72:	09 f0       	breq	.+2      	; 0xe76 <ButtonEnterPressed+0x1b2>
     e74:	8c c0       	rjmp	.+280    	; 0xf8e <ButtonEnterPressed+0x2ca>
		io_changed=1;
     e76:	81 e0       	ldi	r24, 0x01	; 1
     e78:	80 93 73 41 	sts	0x4173, r24	; 0x804173 <io_changed>
		if (indexselected==0){	//digital in
     e7c:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     e80:	81 11       	cpse	r24, r1
     e82:	19 c0       	rjmp	.+50     	; 0xeb6 <ButtonEnterPressed+0x1f2>
			if (digital_in_status ==0 ){	
     e84:	80 91 01 40 	lds	r24, 0x4001	; 0x804001 <digital_in_status>
     e88:	81 11       	cpse	r24, r1
     e8a:	0a c0       	rjmp	.+20     	; 0xea0 <ButtonEnterPressed+0x1dc>
				digital_in_status=1;
     e8c:	81 e0       	ldi	r24, 0x01	; 1
     e8e:	80 93 01 40 	sts	0x4001, r24	; 0x804001 <digital_in_status>
				iomenuindex0status = statusOn;
     e92:	8b e8       	ldi	r24, 0x8B	; 139
     e94:	90 e4       	ldi	r25, 0x40	; 64
     e96:	80 93 83 40 	sts	0x4083, r24	; 0x804083 <iomenuindex0status>
     e9a:	90 93 84 40 	sts	0x4084, r25	; 0x804084 <iomenuindex0status+0x1>
     e9e:	27 c0       	rjmp	.+78     	; 0xeee <ButtonEnterPressed+0x22a>
			}
			else if (digital_in_status==1){
     ea0:	81 30       	cpi	r24, 0x01	; 1
     ea2:	29 f5       	brne	.+74     	; 0xeee <ButtonEnterPressed+0x22a>
				digital_in_status=0;
     ea4:	10 92 01 40 	sts	0x4001, r1	; 0x804001 <digital_in_status>
				iomenuindex0status = statusOff;
     ea8:	85 e8       	ldi	r24, 0x85	; 133
     eaa:	90 e4       	ldi	r25, 0x40	; 64
     eac:	80 93 83 40 	sts	0x4083, r24	; 0x804083 <iomenuindex0status>
     eb0:	90 93 84 40 	sts	0x4084, r25	; 0x804084 <iomenuindex0status+0x1>
     eb4:	1c c0       	rjmp	.+56     	; 0xeee <ButtonEnterPressed+0x22a>
			}
		}
		else if (indexselected==1){	//digital out
     eb6:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     eba:	81 30       	cpi	r24, 0x01	; 1
     ebc:	c1 f4       	brne	.+48     	; 0xeee <ButtonEnterPressed+0x22a>
			if (digital_out_status == 0){
     ebe:	80 91 00 40 	lds	r24, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
     ec2:	81 11       	cpse	r24, r1
     ec4:	0a c0       	rjmp	.+20     	; 0xeda <ButtonEnterPressed+0x216>
				digital_out_status=1;
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	80 93 00 40 	sts	0x4000, r24	; 0x804000 <__DATA_REGION_ORIGIN__>
				iomenuindex1status = statusOn;
     ecc:	8b e8       	ldi	r24, 0x8B	; 139
     ece:	90 e4       	ldi	r25, 0x40	; 64
     ed0:	80 93 81 40 	sts	0x4081, r24	; 0x804081 <iomenuindex1status>
     ed4:	90 93 82 40 	sts	0x4082, r25	; 0x804082 <iomenuindex1status+0x1>
     ed8:	0a c0       	rjmp	.+20     	; 0xeee <ButtonEnterPressed+0x22a>
			}
			else if (digital_out_status == 1){
     eda:	81 30       	cpi	r24, 0x01	; 1
     edc:	41 f4       	brne	.+16     	; 0xeee <ButtonEnterPressed+0x22a>
				digital_out_status=0;
     ede:	10 92 00 40 	sts	0x4000, r1	; 0x804000 <__DATA_REGION_ORIGIN__>
				iomenuindex1status = statusOff;
     ee2:	85 e8       	ldi	r24, 0x85	; 133
     ee4:	90 e4       	ldi	r25, 0x40	; 64
     ee6:	80 93 81 40 	sts	0x4081, r24	; 0x804081 <iomenuindex1status>
     eea:	90 93 82 40 	sts	0x4082, r25	; 0x804082 <iomenuindex1status+0x1>
			}
		}
		
		if (indexselected==2){	//analog in
     eee:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     ef2:	82 30       	cpi	r24, 0x02	; 2
     ef4:	d1 f4       	brne	.+52     	; 0xf2a <ButtonEnterPressed+0x266>
			if (analog_in_status ==0 ){
     ef6:	80 91 6d 41 	lds	r24, 0x416D	; 0x80416d <analog_in_status>
     efa:	81 11       	cpse	r24, r1
     efc:	0a c0       	rjmp	.+20     	; 0xf12 <ButtonEnterPressed+0x24e>
				analog_in_status=1;
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	80 93 6d 41 	sts	0x416D, r24	; 0x80416d <analog_in_status>
				iomenuindex2status = statusOn;
     f04:	8b e8       	ldi	r24, 0x8B	; 139
     f06:	90 e4       	ldi	r25, 0x40	; 64
     f08:	80 93 7f 40 	sts	0x407F, r24	; 0x80407f <iomenuindex2status>
     f0c:	90 93 80 40 	sts	0x4080, r25	; 0x804080 <iomenuindex2status+0x1>
     f10:	b1 c0       	rjmp	.+354    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
			else if (analog_in_status==1){
     f12:	81 30       	cpi	r24, 0x01	; 1
     f14:	09 f0       	breq	.+2      	; 0xf18 <ButtonEnterPressed+0x254>
     f16:	ae c0       	rjmp	.+348    	; 0x1074 <ButtonEnterPressed+0x3b0>
				analog_in_status=0;
     f18:	10 92 6d 41 	sts	0x416D, r1	; 0x80416d <analog_in_status>
				iomenuindex2status = statusOff;
     f1c:	85 e8       	ldi	r24, 0x85	; 133
     f1e:	90 e4       	ldi	r25, 0x40	; 64
     f20:	80 93 7f 40 	sts	0x407F, r24	; 0x80407f <iomenuindex2status>
     f24:	90 93 80 40 	sts	0x4080, r25	; 0x804080 <iomenuindex2status+0x1>
     f28:	a5 c0       	rjmp	.+330    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
		}
		else if (indexselected==3){	//analog out
     f2a:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     f2e:	83 30       	cpi	r24, 0x03	; 3
     f30:	d1 f4       	brne	.+52     	; 0xf66 <ButtonEnterPressed+0x2a2>
			if (analog_out_status == 0){
     f32:	80 91 6c 41 	lds	r24, 0x416C	; 0x80416c <analog_out_status>
     f36:	81 11       	cpse	r24, r1
     f38:	0a c0       	rjmp	.+20     	; 0xf4e <ButtonEnterPressed+0x28a>
				analog_out_status=1;
     f3a:	81 e0       	ldi	r24, 0x01	; 1
     f3c:	80 93 6c 41 	sts	0x416C, r24	; 0x80416c <analog_out_status>
				iomenuindex3status = statusOn;
     f40:	8b e8       	ldi	r24, 0x8B	; 139
     f42:	90 e4       	ldi	r25, 0x40	; 64
     f44:	80 93 7d 40 	sts	0x407D, r24	; 0x80407d <iomenuindex3status>
     f48:	90 93 7e 40 	sts	0x407E, r25	; 0x80407e <iomenuindex3status+0x1>
     f4c:	93 c0       	rjmp	.+294    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
			else if (analog_out_status == 1){
     f4e:	81 30       	cpi	r24, 0x01	; 1
     f50:	09 f0       	breq	.+2      	; 0xf54 <ButtonEnterPressed+0x290>
     f52:	90 c0       	rjmp	.+288    	; 0x1074 <ButtonEnterPressed+0x3b0>
				analog_out_status=0;
     f54:	10 92 6c 41 	sts	0x416C, r1	; 0x80416c <analog_out_status>
				iomenuindex3status = statusOff;
     f58:	85 e8       	ldi	r24, 0x85	; 133
     f5a:	90 e4       	ldi	r25, 0x40	; 64
     f5c:	80 93 7d 40 	sts	0x407D, r24	; 0x80407d <iomenuindex3status>
     f60:	90 93 7e 40 	sts	0x407E, r25	; 0x80407e <iomenuindex3status+0x1>
     f64:	87 c0       	rjmp	.+270    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
		}
		else if (indexselected==4){	//return
     f66:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     f6a:	84 30       	cpi	r24, 0x04	; 4
     f6c:	09 f0       	breq	.+2      	; 0xf70 <ButtonEnterPressed+0x2ac>
     f6e:	82 c0       	rjmp	.+260    	; 0x1074 <ButtonEnterPressed+0x3b0>
			menuselected=0;
     f70:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <menuselected>
			max_menu_index=3;
     f74:	83 e0       	ldi	r24, 0x03	; 3
     f76:	80 93 31 41 	sts	0x4131, r24	; 0x804131 <max_menu_index>
			indexselected=0;
     f7a:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
			show_0_3=1;
     f7e:	81 e0       	ldi	r24, 0x01	; 1
     f80:	80 93 30 41 	sts	0x4130, r24	; 0x804130 <show_0_3>
			show_1_4=0;
     f84:	10 92 83 41 	sts	0x4183, r1	; 0x804183 <show_1_4>
			show_2_5=0;
     f88:	10 92 82 41 	sts	0x4182, r1	; 0x804182 <show_2_5>
     f8c:	73 c0       	rjmp	.+230    	; 0x1074 <ButtonEnterPressed+0x3b0>
		}
	}
	else if(menuselected ==4){//generator menu
     f8e:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
     f92:	84 30       	cpi	r24, 0x04	; 4
     f94:	09 f0       	breq	.+2      	; 0xf98 <ButtonEnterPressed+0x2d4>
     f96:	6e c0       	rjmp	.+220    	; 0x1074 <ButtonEnterPressed+0x3b0>
		generator_changed=1;
     f98:	81 e0       	ldi	r24, 0x01	; 1
     f9a:	80 93 72 41 	sts	0x4172, r24	; 0x804172 <generator_changed>
		if(indexselected==0){//enable
     f9e:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     fa2:	81 11       	cpse	r24, r1
     fa4:	20 c0       	rjmp	.+64     	; 0xfe6 <ButtonEnterPressed+0x322>
			if (generatorenable == 0){
     fa6:	80 91 76 41 	lds	r24, 0x4176	; 0x804176 <generatorenable>
     faa:	81 11       	cpse	r24, r1
     fac:	0a c0       	rjmp	.+20     	; 0xfc2 <ButtonEnterPressed+0x2fe>
				generatorenable=1;
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	80 93 76 41 	sts	0x4176, r24	; 0x804176 <generatorenable>
				generatorindex0status = statusOn;
     fb4:	8b e8       	ldi	r24, 0x8B	; 139
     fb6:	90 e4       	ldi	r25, 0x40	; 64
     fb8:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <generatorindex0status>
     fbc:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <generatorindex0status+0x1>
     fc0:	59 c0       	rjmp	.+178    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
			else if (generatorenable == 1){
     fc2:	80 91 76 41 	lds	r24, 0x4176	; 0x804176 <generatorenable>
     fc6:	81 30       	cpi	r24, 0x01	; 1
     fc8:	09 f0       	breq	.+2      	; 0xfcc <ButtonEnterPressed+0x308>
     fca:	54 c0       	rjmp	.+168    	; 0x1074 <ButtonEnterPressed+0x3b0>
				generatorenable=0;
     fcc:	10 92 76 41 	sts	0x4176, r1	; 0x804176 <generatorenable>
				adjustgenerator=0;
     fd0:	10 92 77 41 	sts	0x4177, r1	; 0x804177 <adjustgenerator>
     fd4:	10 92 78 41 	sts	0x4178, r1	; 0x804178 <adjustgenerator+0x1>
				generatorindex0status = statusOff;
     fd8:	85 e8       	ldi	r24, 0x85	; 133
     fda:	90 e4       	ldi	r25, 0x40	; 64
     fdc:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <generatorindex0status>
     fe0:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <generatorindex0status+0x1>
     fe4:	47 c0       	rjmp	.+142    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
		}
		else if(indexselected==1){//toggle control by USART or HMI
     fe6:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
     fea:	81 30       	cpi	r24, 0x01	; 1
     fec:	d9 f4       	brne	.+54     	; 0x1024 <ButtonEnterPressed+0x360>
			if (generatorADCenable == 0){
     fee:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <generatorADCenable>
     ff2:	81 11       	cpse	r24, r1
     ff4:	0a c0       	rjmp	.+20     	; 0x100a <ButtonEnterPressed+0x346>
				generatorADCenable=1;
     ff6:	81 e0       	ldi	r24, 0x01	; 1
     ff8:	80 93 75 41 	sts	0x4175, r24	; 0x804175 <generatorADCenable>
				generatorindex1status = statusADC;
     ffc:	81 e2       	ldi	r24, 0x21	; 33
     ffe:	90 e4       	ldi	r25, 0x40	; 64
    1000:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <generatorindex1status>
    1004:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <generatorindex1status+0x1>
    1008:	35 c0       	rjmp	.+106    	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
			else if (generatorADCenable == 1){
    100a:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <generatorADCenable>
    100e:	81 30       	cpi	r24, 0x01	; 1
    1010:	89 f5       	brne	.+98     	; 0x1074 <ButtonEnterPressed+0x3b0>
				generatorADCenable=0;
    1012:	10 92 75 41 	sts	0x4175, r1	; 0x804175 <generatorADCenable>
				generatorindex1status = statusUART;
    1016:	85 e2       	ldi	r24, 0x25	; 37
    1018:	90 e4       	ldi	r25, 0x40	; 64
    101a:	80 93 1d 40 	sts	0x401D, r24	; 0x80401d <generatorindex1status>
    101e:	90 93 1e 40 	sts	0x401E, r25	; 0x80401e <generatorindex1status+0x1>
    1022:	28 c0       	rjmp	.+80     	; 0x1074 <ButtonEnterPressed+0x3b0>
			}
		}
		else if (indexselected==2){
    1024:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1028:	82 30       	cpi	r24, 0x02	; 2
    102a:	99 f4       	brne	.+38     	; 0x1052 <ButtonEnterPressed+0x38e>
			if (generatorADCenable==0){
    102c:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <generatorADCenable>
    1030:	81 11       	cpse	r24, r1
    1032:	20 c0       	rjmp	.+64     	; 0x1074 <ButtonEnterPressed+0x3b0>
				if ( adjustmode==0){	//enter adjustmode for setpoint
    1034:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1038:	81 11       	cpse	r24, r1
    103a:	04 c0       	rjmp	.+8      	; 0x1044 <ButtonEnterPressed+0x380>
					adjustmode=1;
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	80 93 7f 41 	sts	0x417F, r24	; 0x80417f <adjustmode>
    1042:	18 c0       	rjmp	.+48     	; 0x1074 <ButtonEnterPressed+0x3b0>
				}
				else if (adjustmode==1){	//exit adjustmode
    1044:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1048:	81 30       	cpi	r24, 0x01	; 1
    104a:	a1 f4       	brne	.+40     	; 0x1074 <ButtonEnterPressed+0x3b0>
					adjustmode=0;
    104c:	10 92 7f 41 	sts	0x417F, r1	; 0x80417f <adjustmode>
    1050:	11 c0       	rjmp	.+34     	; 0x1074 <ButtonEnterPressed+0x3b0>
				}
			}
			
		}
		else if (indexselected==3){	//return
    1052:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1056:	83 30       	cpi	r24, 0x03	; 3
    1058:	69 f4       	brne	.+26     	; 0x1074 <ButtonEnterPressed+0x3b0>
			menuselected=0;
    105a:	10 92 1a 40 	sts	0x401A, r1	; 0x80401a <menuselected>
			max_menu_index=3;
    105e:	80 93 31 41 	sts	0x4131, r24	; 0x804131 <max_menu_index>
			indexselected=0;
    1062:	10 92 81 41 	sts	0x4181, r1	; 0x804181 <indexselected>
			show_0_3=1;
    1066:	81 e0       	ldi	r24, 0x01	; 1
    1068:	80 93 30 41 	sts	0x4130, r24	; 0x804130 <show_0_3>
			show_1_4=0;
    106c:	10 92 83 41 	sts	0x4183, r1	; 0x804183 <show_1_4>
			show_2_5=0;
    1070:	10 92 82 41 	sts	0x4182, r1	; 0x804182 <show_2_5>
		}
	}	
	refresh_screen=1;
    1074:	81 e0       	ldi	r24, 0x01	; 1
    1076:	80 93 74 41 	sts	0x4174, r24	; 0x804174 <refresh_screen>
    107a:	08 95       	ret

0000107c <Menu_update_infoscreen>:
}




void  Menu_update_infoscreen(void){
    107c:	cf 93       	push	r28
    107e:	df 93       	push	r29
    1080:	cd b7       	in	r28, 0x3d	; 61
    1082:	de b7       	in	r29, 0x3e	; 62
    1084:	26 97       	sbiw	r28, 0x06	; 6
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	de bf       	out	0x3e, r29	; 62
	if (menuselected==1){		
    108a:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
    108e:	81 30       	cpi	r24, 0x01	; 1
    1090:	09 f0       	breq	.+2      	; 0x1094 <Menu_update_infoscreen+0x18>
    1092:	05 c1       	rjmp	.+522    	; 0x129e <Menu_update_infoscreen+0x222>
		HD44780_PCF8574_PositionXY(addr, 14,0);
    1094:	40 e0       	ldi	r20, 0x00	; 0
    1096:	6e e0       	ldi	r22, 0x0E	; 14
    1098:	87 e2       	ldi	r24, 0x27	; 39
    109a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(rpm_value,rpm_string,10);				
    109e:	80 91 68 41 	lds	r24, 0x4168	; 0x804168 <rpm_value>
    10a2:	90 91 69 41 	lds	r25, 0x4169	; 0x804169 <rpm_value+0x1>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    10a6:	4a e0       	ldi	r20, 0x0A	; 10
    10a8:	61 ed       	ldi	r22, 0xD1	; 209
    10aa:	70 e4       	ldi	r23, 0x40	; 64
    10ac:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		HD44780_PCF8574_DrawString(addr, "      ");
    10b0:	69 e5       	ldi	r22, 0x59	; 89
    10b2:	71 e4       	ldi	r23, 0x41	; 65
    10b4:	87 e2       	ldi	r24, 0x27	; 39
    10b6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,0);
    10ba:	40 e0       	ldi	r20, 0x00	; 0
    10bc:	6e e0       	ldi	r22, 0x0E	; 14
    10be:	87 e2       	ldi	r24, 0x27	; 39
    10c0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		if (strlen(rpm_string)==2){
    10c4:	e1 ed       	ldi	r30, 0xD1	; 209
    10c6:	f0 e4       	ldi	r31, 0x40	; 64
    10c8:	01 90       	ld	r0, Z+
    10ca:	00 20       	and	r0, r0
    10cc:	e9 f7       	brne	.-6      	; 0x10c8 <Menu_update_infoscreen+0x4c>
    10ce:	31 97       	sbiw	r30, 0x01	; 1
    10d0:	e1 5d       	subi	r30, 0xD1	; 209
    10d2:	f0 44       	sbci	r31, 0x40	; 64
    10d4:	e2 30       	cpi	r30, 0x02	; 2
    10d6:	f1 05       	cpc	r31, r1
    10d8:	31 f4       	brne	.+12     	; 0x10e6 <Menu_update_infoscreen+0x6a>
			HD44780_PCF8574_DrawString(addr, "  ");
    10da:	6d e5       	ldi	r22, 0x5D	; 93
    10dc:	71 e4       	ldi	r23, 0x41	; 65
    10de:	87 e2       	ldi	r24, 0x27	; 39
    10e0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
    10e4:	07 c0       	rjmp	.+14     	; 0x10f4 <Menu_update_infoscreen+0x78>
		}
		else if (strlen(rpm_string)==3){
    10e6:	33 97       	sbiw	r30, 0x03	; 3
    10e8:	29 f4       	brne	.+10     	; 0x10f4 <Menu_update_infoscreen+0x78>
			HD44780_PCF8574_DrawString(addr, " ");
    10ea:	6e e5       	ldi	r22, 0x5E	; 94
    10ec:	71 e4       	ldi	r23, 0x41	; 65
    10ee:	87 e2       	ldi	r24, 0x27	; 39
    10f0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		}
		HD44780_PCF8574_DrawString(addr, rpm_string);
    10f4:	61 ed       	ldi	r22, 0xD1	; 209
    10f6:	70 e4       	ldi	r23, 0x40	; 64
    10f8:	87 e2       	ldi	r24, 0x27	; 39
    10fa:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,1);
    10fe:	41 e0       	ldi	r20, 0x01	; 1
    1100:	6e e0       	ldi	r22, 0x0E	; 14
    1102:	87 e2       	ldi	r24, 0x27	; 39
    1104:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(backemf_value,backemf_string,10);
    1108:	80 91 66 41 	lds	r24, 0x4166	; 0x804166 <backemf_value>
    110c:	90 91 67 41 	lds	r25, 0x4167	; 0x804167 <backemf_value+0x1>
    1110:	4a e0       	ldi	r20, 0x0A	; 10
    1112:	6b ec       	ldi	r22, 0xCB	; 203
    1114:	70 e4       	ldi	r23, 0x40	; 64
    1116:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		char tmp[6];
		if (strlen(backemf_string)==1){
    111a:	eb ec       	ldi	r30, 0xCB	; 203
    111c:	f0 e4       	ldi	r31, 0x40	; 64
    111e:	01 90       	ld	r0, Z+
    1120:	00 20       	and	r0, r0
    1122:	e9 f7       	brne	.-6      	; 0x111e <Menu_update_infoscreen+0xa2>
    1124:	31 97       	sbiw	r30, 0x01	; 1
    1126:	eb 5c       	subi	r30, 0xCB	; 203
    1128:	f0 44       	sbci	r31, 0x40	; 64
    112a:	e1 30       	cpi	r30, 0x01	; 1
    112c:	f1 05       	cpc	r31, r1
    112e:	61 f4       	brne	.+24     	; 0x1148 <Menu_update_infoscreen+0xcc>
			tmp[0]=' ';
    1130:	80 e2       	ldi	r24, 0x20	; 32
    1132:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]='0';
    1134:	80 e3       	ldi	r24, 0x30	; 48
    1136:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]='.';
    1138:	9e e2       	ldi	r25, 0x2E	; 46
    113a:	9b 83       	std	Y+3, r25	; 0x03
			tmp[3]='0';
    113c:	8c 83       	std	Y+4, r24	; 0x04
			tmp[4]=backemf_string[0];
    113e:	80 91 cb 40 	lds	r24, 0x40CB	; 0x8040cb <backemf_string>
    1142:	8d 83       	std	Y+5, r24	; 0x05
			tmp[5]='\0';
    1144:	1e 82       	std	Y+6, r1	; 0x06
    1146:	31 c0       	rjmp	.+98     	; 0x11aa <Menu_update_infoscreen+0x12e>
		}
		else if (strlen(backemf_string)==2){
    1148:	e2 30       	cpi	r30, 0x02	; 2
    114a:	f1 05       	cpc	r31, r1
    114c:	71 f4       	brne	.+28     	; 0x116a <Menu_update_infoscreen+0xee>
			tmp[0]=' ';
    114e:	80 e2       	ldi	r24, 0x20	; 32
    1150:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]='0';
    1152:	80 e3       	ldi	r24, 0x30	; 48
    1154:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]='.';
    1156:	8e e2       	ldi	r24, 0x2E	; 46
    1158:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=backemf_string[0];
    115a:	eb ec       	ldi	r30, 0xCB	; 203
    115c:	f0 e4       	ldi	r31, 0x40	; 64
    115e:	80 81       	ld	r24, Z
    1160:	8c 83       	std	Y+4, r24	; 0x04
			tmp[4]=backemf_string[1];
    1162:	81 81       	ldd	r24, Z+1	; 0x01
    1164:	8d 83       	std	Y+5, r24	; 0x05
			tmp[5]='\0';
    1166:	1e 82       	std	Y+6, r1	; 0x06
    1168:	20 c0       	rjmp	.+64     	; 0x11aa <Menu_update_infoscreen+0x12e>
		}
		else if (strlen(backemf_string)==3){
    116a:	e3 30       	cpi	r30, 0x03	; 3
    116c:	f1 05       	cpc	r31, r1
    116e:	71 f4       	brne	.+28     	; 0x118c <Menu_update_infoscreen+0x110>
			tmp[0]=' ';
    1170:	80 e2       	ldi	r24, 0x20	; 32
    1172:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=backemf_string[0];
    1174:	eb ec       	ldi	r30, 0xCB	; 203
    1176:	f0 e4       	ldi	r31, 0x40	; 64
    1178:	80 81       	ld	r24, Z
    117a:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]='.';
    117c:	8e e2       	ldi	r24, 0x2E	; 46
    117e:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=backemf_string[1];
    1180:	81 81       	ldd	r24, Z+1	; 0x01
    1182:	8c 83       	std	Y+4, r24	; 0x04
			tmp[4]=backemf_string[2];
    1184:	82 81       	ldd	r24, Z+2	; 0x02
    1186:	8d 83       	std	Y+5, r24	; 0x05
			tmp[5]='\0';
    1188:	1e 82       	std	Y+6, r1	; 0x06
    118a:	0f c0       	rjmp	.+30     	; 0x11aa <Menu_update_infoscreen+0x12e>
		}
		else if (strlen(backemf_string)==4){
    118c:	34 97       	sbiw	r30, 0x04	; 4
    118e:	69 f4       	brne	.+26     	; 0x11aa <Menu_update_infoscreen+0x12e>
			tmp[0]=backemf_string[0];
    1190:	eb ec       	ldi	r30, 0xCB	; 203
    1192:	f0 e4       	ldi	r31, 0x40	; 64
    1194:	80 81       	ld	r24, Z
    1196:	89 83       	std	Y+1, r24	; 0x01
			tmp[1]=backemf_string[1];
    1198:	81 81       	ldd	r24, Z+1	; 0x01
    119a:	8a 83       	std	Y+2, r24	; 0x02
			tmp[2]='.';
    119c:	8e e2       	ldi	r24, 0x2E	; 46
    119e:	8b 83       	std	Y+3, r24	; 0x03
			tmp[3]=backemf_string[2];
    11a0:	82 81       	ldd	r24, Z+2	; 0x02
    11a2:	8c 83       	std	Y+4, r24	; 0x04
			tmp[4]=backemf_string[3];
    11a4:	83 81       	ldd	r24, Z+3	; 0x03
    11a6:	8d 83       	std	Y+5, r24	; 0x05
			tmp[5]='\0';
    11a8:	1e 82       	std	Y+6, r1	; 0x06
		}
		HD44780_PCF8574_DrawString(addr, "      ");
    11aa:	69 e5       	ldi	r22, 0x59	; 89
    11ac:	71 e4       	ldi	r23, 0x41	; 65
    11ae:	87 e2       	ldi	r24, 0x27	; 39
    11b0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,1);
    11b4:	41 e0       	ldi	r20, 0x01	; 1
    11b6:	6e e0       	ldi	r22, 0x0E	; 14
    11b8:	87 e2       	ldi	r24, 0x27	; 39
    11ba:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, tmp);
    11be:	be 01       	movw	r22, r28
    11c0:	6f 5f       	subi	r22, 0xFF	; 255
    11c2:	7f 4f       	sbci	r23, 0xFF	; 255
    11c4:	87 e2       	ldi	r24, 0x27	; 39
    11c6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,2);
    11ca:	42 e0       	ldi	r20, 0x02	; 2
    11cc:	6e e0       	ldi	r22, 0x0E	; 14
    11ce:	87 e2       	ldi	r24, 0x27	; 39
    11d0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(current_value,current_string,10);
    11d4:	80 91 64 41 	lds	r24, 0x4164	; 0x804164 <__data_end>
    11d8:	90 91 65 41 	lds	r25, 0x4165	; 0x804165 <__data_end+0x1>
    11dc:	4a e0       	ldi	r20, 0x0A	; 10
    11de:	65 ec       	ldi	r22, 0xC5	; 197
    11e0:	70 e4       	ldi	r23, 0x40	; 64
    11e2:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		if (strlen(current_string)==2){
    11e6:	e5 ec       	ldi	r30, 0xC5	; 197
    11e8:	f0 e4       	ldi	r31, 0x40	; 64
    11ea:	01 90       	ld	r0, Z+
    11ec:	00 20       	and	r0, r0
    11ee:	e9 f7       	brne	.-6      	; 0x11ea <Menu_update_infoscreen+0x16e>
    11f0:	31 97       	sbiw	r30, 0x01	; 1
    11f2:	e5 5c       	subi	r30, 0xC5	; 197
    11f4:	f0 44       	sbci	r31, 0x40	; 64
    11f6:	e2 30       	cpi	r30, 0x02	; 2
    11f8:	f1 05       	cpc	r31, r1
    11fa:	31 f4       	brne	.+12     	; 0x1208 <Menu_update_infoscreen+0x18c>
			HD44780_PCF8574_DrawString(addr, "  ");
    11fc:	6d e5       	ldi	r22, 0x5D	; 93
    11fe:	71 e4       	ldi	r23, 0x41	; 65
    1200:	87 e2       	ldi	r24, 0x27	; 39
    1202:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
    1206:	07 c0       	rjmp	.+14     	; 0x1216 <Menu_update_infoscreen+0x19a>
		}
		else if (strlen(current_string)==3){
    1208:	33 97       	sbiw	r30, 0x03	; 3
    120a:	29 f4       	brne	.+10     	; 0x1216 <Menu_update_infoscreen+0x19a>
			HD44780_PCF8574_DrawString(addr, " ");
    120c:	6e e5       	ldi	r22, 0x5E	; 94
    120e:	71 e4       	ldi	r23, 0x41	; 65
    1210:	87 e2       	ldi	r24, 0x27	; 39
    1212:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		}
		HD44780_PCF8574_DrawString(addr, "      ");
    1216:	69 e5       	ldi	r22, 0x59	; 89
    1218:	71 e4       	ldi	r23, 0x41	; 65
    121a:	87 e2       	ldi	r24, 0x27	; 39
    121c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,2);
    1220:	42 e0       	ldi	r20, 0x02	; 2
    1222:	6e e0       	ldi	r22, 0x0E	; 14
    1224:	87 e2       	ldi	r24, 0x27	; 39
    1226:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, current_string);
    122a:	65 ec       	ldi	r22, 0xC5	; 197
    122c:	70 e4       	ldi	r23, 0x40	; 64
    122e:	87 e2       	ldi	r24, 0x27	; 39
    1230:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,3);
    1234:	43 e0       	ldi	r20, 0x03	; 3
    1236:	6e e0       	ldi	r22, 0x0E	; 14
    1238:	87 e2       	ldi	r24, 0x27	; 39
    123a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(dutycycle_value,dutycycle_string,10);
    123e:	80 91 6a 41 	lds	r24, 0x416A	; 0x80416a <dutycycle_value>
    1242:	90 91 6b 41 	lds	r25, 0x416B	; 0x80416b <dutycycle_value+0x1>
    1246:	4a e0       	ldi	r20, 0x0A	; 10
    1248:	6f eb       	ldi	r22, 0xBF	; 191
    124a:	70 e4       	ldi	r23, 0x40	; 64
    124c:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		if (strlen(dutycycle_string)==2){
    1250:	ef eb       	ldi	r30, 0xBF	; 191
    1252:	f0 e4       	ldi	r31, 0x40	; 64
    1254:	01 90       	ld	r0, Z+
    1256:	00 20       	and	r0, r0
    1258:	e9 f7       	brne	.-6      	; 0x1254 <Menu_update_infoscreen+0x1d8>
    125a:	31 97       	sbiw	r30, 0x01	; 1
    125c:	ef 5b       	subi	r30, 0xBF	; 191
    125e:	f0 44       	sbci	r31, 0x40	; 64
    1260:	e2 30       	cpi	r30, 0x02	; 2
    1262:	f1 05       	cpc	r31, r1
    1264:	31 f4       	brne	.+12     	; 0x1272 <Menu_update_infoscreen+0x1f6>
			HD44780_PCF8574_DrawString(addr, "  ");
    1266:	6d e5       	ldi	r22, 0x5D	; 93
    1268:	71 e4       	ldi	r23, 0x41	; 65
    126a:	87 e2       	ldi	r24, 0x27	; 39
    126c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
    1270:	07 c0       	rjmp	.+14     	; 0x1280 <Menu_update_infoscreen+0x204>
		}
		else if (strlen(dutycycle_string)==3){
    1272:	33 97       	sbiw	r30, 0x03	; 3
    1274:	29 f4       	brne	.+10     	; 0x1280 <Menu_update_infoscreen+0x204>
			HD44780_PCF8574_DrawString(addr, " ");
    1276:	6e e5       	ldi	r22, 0x5E	; 94
    1278:	71 e4       	ldi	r23, 0x41	; 65
    127a:	87 e2       	ldi	r24, 0x27	; 39
    127c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		}
		HD44780_PCF8574_DrawString(addr, "      ");
    1280:	69 e5       	ldi	r22, 0x59	; 89
    1282:	71 e4       	ldi	r23, 0x41	; 65
    1284:	87 e2       	ldi	r24, 0x27	; 39
    1286:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,3);
    128a:	43 e0       	ldi	r20, 0x03	; 3
    128c:	6e e0       	ldi	r22, 0x0E	; 14
    128e:	87 e2       	ldi	r24, 0x27	; 39
    1290:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, dutycycle_string);
    1294:	6f eb       	ldi	r22, 0xBF	; 191
    1296:	70 e4       	ldi	r23, 0x40	; 64
    1298:	87 e2       	ldi	r24, 0x27	; 39
    129a:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	}
}
    129e:	26 96       	adiw	r28, 0x06	; 6
    12a0:	cd bf       	out	0x3d, r28	; 61
    12a2:	de bf       	out	0x3e, r29	; 62
    12a4:	df 91       	pop	r29
    12a6:	cf 91       	pop	r28
    12a8:	08 95       	ret

000012aa <Menu_update_generatorscreen>:

void Menu_update_generatorscreen(void){
	if (menuselected==4){
    12aa:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
    12ae:	84 30       	cpi	r24, 0x04	; 4
    12b0:	09 f0       	breq	.+2      	; 0x12b4 <Menu_update_generatorscreen+0xa>
    12b2:	d1 c0       	rjmp	.+418    	; 0x1456 <Menu_update_generatorscreen+0x1ac>
		if(generatorenable==1){
    12b4:	80 91 76 41 	lds	r24, 0x4176	; 0x804176 <generatorenable>
    12b8:	81 30       	cpi	r24, 0x01	; 1
    12ba:	39 f4       	brne	.+14     	; 0x12ca <Menu_update_generatorscreen+0x20>
			generatorindex0status=statusOn;
    12bc:	8b e8       	ldi	r24, 0x8B	; 139
    12be:	90 e4       	ldi	r25, 0x40	; 64
    12c0:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <generatorindex0status>
    12c4:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <generatorindex0status+0x1>
    12c8:	0a c0       	rjmp	.+20     	; 0x12de <Menu_update_generatorscreen+0x34>
		}
		else if (generatorenable==0){
    12ca:	80 91 76 41 	lds	r24, 0x4176	; 0x804176 <generatorenable>
    12ce:	81 11       	cpse	r24, r1
    12d0:	06 c0       	rjmp	.+12     	; 0x12de <Menu_update_generatorscreen+0x34>
			generatorindex0status=statusOff;
    12d2:	85 e8       	ldi	r24, 0x85	; 133
    12d4:	90 e4       	ldi	r25, 0x40	; 64
    12d6:	80 93 1f 40 	sts	0x401F, r24	; 0x80401f <generatorindex0status>
    12da:	90 93 20 40 	sts	0x4020, r25	; 0x804020 <generatorindex0status+0x1>
		}		
		
		itoa(adjustgenerator,generatorindex2status,10);	
    12de:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
    12e2:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
    12e6:	4a e0       	ldi	r20, 0x0A	; 10
    12e8:	6b e1       	ldi	r22, 0x1B	; 27
    12ea:	70 e4       	ldi	r23, 0x40	; 64
    12ec:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		HD44780_PCF8574_PositionXY(addr, 14,0);
    12f0:	40 e0       	ldi	r20, 0x00	; 0
    12f2:	6e e0       	ldi	r22, 0x0E	; 14
    12f4:	87 e2       	ldi	r24, 0x27	; 39
    12f6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, "      ");
    12fa:	69 e5       	ldi	r22, 0x59	; 89
    12fc:	71 e4       	ldi	r23, 0x41	; 65
    12fe:	87 e2       	ldi	r24, 0x27	; 39
    1300:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,0);
    1304:	40 e0       	ldi	r20, 0x00	; 0
    1306:	6e e0       	ldi	r22, 0x0E	; 14
    1308:	87 e2       	ldi	r24, 0x27	; 39
    130a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, generatorindex0status);	
    130e:	60 91 1f 40 	lds	r22, 0x401F	; 0x80401f <generatorindex0status>
    1312:	70 91 20 40 	lds	r23, 0x4020	; 0x804020 <generatorindex0status+0x1>
    1316:	87 e2       	ldi	r24, 0x27	; 39
    1318:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,1);	
    131c:	41 e0       	ldi	r20, 0x01	; 1
    131e:	6e e0       	ldi	r22, 0x0E	; 14
    1320:	87 e2       	ldi	r24, 0x27	; 39
    1322:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, "      ");
    1326:	69 e5       	ldi	r22, 0x59	; 89
    1328:	71 e4       	ldi	r23, 0x41	; 65
    132a:	87 e2       	ldi	r24, 0x27	; 39
    132c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,1);	
    1330:	41 e0       	ldi	r20, 0x01	; 1
    1332:	6e e0       	ldi	r22, 0x0E	; 14
    1334:	87 e2       	ldi	r24, 0x27	; 39
    1336:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		if(generatorADCenable==1){
    133a:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <generatorADCenable>
    133e:	81 30       	cpi	r24, 0x01	; 1
    1340:	31 f4       	brne	.+12     	; 0x134e <Menu_update_generatorscreen+0xa4>
			HD44780_PCF8574_DrawString(addr, statusADC);
    1342:	61 e2       	ldi	r22, 0x21	; 33
    1344:	70 e4       	ldi	r23, 0x40	; 64
    1346:	87 e2       	ldi	r24, 0x27	; 39
    1348:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
    134c:	09 c0       	rjmp	.+18     	; 0x1360 <Menu_update_generatorscreen+0xb6>
		}
		else if(generatorADCenable==0){
    134e:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <generatorADCenable>
    1352:	81 11       	cpse	r24, r1
    1354:	05 c0       	rjmp	.+10     	; 0x1360 <Menu_update_generatorscreen+0xb6>
			HD44780_PCF8574_DrawString(addr, statusUART);
    1356:	65 e2       	ldi	r22, 0x25	; 37
    1358:	70 e4       	ldi	r23, 0x40	; 64
    135a:	87 e2       	ldi	r24, 0x27	; 39
    135c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		}
		HD44780_PCF8574_PositionXY(addr, 14,2);	
    1360:	42 e0       	ldi	r20, 0x02	; 2
    1362:	6e e0       	ldi	r22, 0x0E	; 14
    1364:	87 e2       	ldi	r24, 0x27	; 39
    1366:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, "      ");
    136a:	69 e5       	ldi	r22, 0x59	; 89
    136c:	71 e4       	ldi	r23, 0x41	; 65
    136e:	87 e2       	ldi	r24, 0x27	; 39
    1370:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,2);
    1374:	42 e0       	ldi	r20, 0x02	; 2
    1376:	6e e0       	ldi	r22, 0x0E	; 14
    1378:	87 e2       	ldi	r24, 0x27	; 39
    137a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, generatorindex2status);	
    137e:	6b e1       	ldi	r22, 0x1B	; 27
    1380:	70 e4       	ldi	r23, 0x40	; 64
    1382:	87 e2       	ldi	r24, 0x27	; 39
    1384:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_DrawString(addr, "%");
    1388:	60 e6       	ldi	r22, 0x60	; 96
    138a:	71 e4       	ldi	r23, 0x41	; 65
    138c:	87 e2       	ldi	r24, 0x27	; 39
    138e:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
	
		if (indexselected==0){
    1392:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1396:	81 11       	cpse	r24, r1
    1398:	10 c0       	rjmp	.+32     	; 0x13ba <Menu_update_generatorscreen+0x110>
			HD44780_PCF8574_PositionXY(addr, 0,0);
    139a:	40 e0       	ldi	r20, 0x00	; 0
    139c:	60 e0       	ldi	r22, 0x00	; 0
    139e:	87 e2       	ldi	r24, 0x27	; 39
    13a0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    13a4:	62 e6       	ldi	r22, 0x62	; 98
    13a6:	71 e4       	ldi	r23, 0x41	; 65
    13a8:	87 e2       	ldi	r24, 0x27	; 39
    13aa:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,0);
    13ae:	40 e0       	ldi	r20, 0x00	; 0
    13b0:	60 e0       	ldi	r22, 0x00	; 0
    13b2:	87 e2       	ldi	r24, 0x27	; 39
    13b4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    13b8:	3b c0       	rjmp	.+118    	; 0x1430 <Menu_update_generatorscreen+0x186>
		}
		else if (indexselected==1){
    13ba:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    13be:	81 30       	cpi	r24, 0x01	; 1
    13c0:	81 f4       	brne	.+32     	; 0x13e2 <Menu_update_generatorscreen+0x138>
			HD44780_PCF8574_PositionXY(addr, 0,1);
    13c2:	41 e0       	ldi	r20, 0x01	; 1
    13c4:	60 e0       	ldi	r22, 0x00	; 0
    13c6:	87 e2       	ldi	r24, 0x27	; 39
    13c8:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    13cc:	62 e6       	ldi	r22, 0x62	; 98
    13ce:	71 e4       	ldi	r23, 0x41	; 65
    13d0:	87 e2       	ldi	r24, 0x27	; 39
    13d2:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,1);
    13d6:	41 e0       	ldi	r20, 0x01	; 1
    13d8:	60 e0       	ldi	r22, 0x00	; 0
    13da:	87 e2       	ldi	r24, 0x27	; 39
    13dc:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    13e0:	27 c0       	rjmp	.+78     	; 0x1430 <Menu_update_generatorscreen+0x186>
		}
		else if (indexselected==2){
    13e2:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    13e6:	82 30       	cpi	r24, 0x02	; 2
    13e8:	81 f4       	brne	.+32     	; 0x140a <Menu_update_generatorscreen+0x160>
			HD44780_PCF8574_PositionXY(addr, 0,2);
    13ea:	42 e0       	ldi	r20, 0x02	; 2
    13ec:	60 e0       	ldi	r22, 0x00	; 0
    13ee:	87 e2       	ldi	r24, 0x27	; 39
    13f0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    13f4:	62 e6       	ldi	r22, 0x62	; 98
    13f6:	71 e4       	ldi	r23, 0x41	; 65
    13f8:	87 e2       	ldi	r24, 0x27	; 39
    13fa:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,2);
    13fe:	42 e0       	ldi	r20, 0x02	; 2
    1400:	60 e0       	ldi	r22, 0x00	; 0
    1402:	87 e2       	ldi	r24, 0x27	; 39
    1404:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1408:	13 c0       	rjmp	.+38     	; 0x1430 <Menu_update_generatorscreen+0x186>
		}
		else if (indexselected==3){
    140a:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    140e:	83 30       	cpi	r24, 0x03	; 3
    1410:	79 f4       	brne	.+30     	; 0x1430 <Menu_update_generatorscreen+0x186>
			HD44780_PCF8574_PositionXY(addr, 0,3);
    1412:	43 e0       	ldi	r20, 0x03	; 3
    1414:	60 e0       	ldi	r22, 0x00	; 0
    1416:	87 e2       	ldi	r24, 0x27	; 39
    1418:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    141c:	62 e6       	ldi	r22, 0x62	; 98
    141e:	71 e4       	ldi	r23, 0x41	; 65
    1420:	87 e2       	ldi	r24, 0x27	; 39
    1422:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,3);
    1426:	43 e0       	ldi	r20, 0x03	; 3
    1428:	60 e0       	ldi	r22, 0x00	; 0
    142a:	87 e2       	ldi	r24, 0x27	; 39
    142c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		}
		if (adjustmode==1){
    1430:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1434:	81 30       	cpi	r24, 0x01	; 1
    1436:	79 f4       	brne	.+30     	; 0x1456 <Menu_update_generatorscreen+0x1ac>
			HD44780_PCF8574_PositionXY(addr, 13,2);
    1438:	42 e0       	ldi	r20, 0x02	; 2
    143a:	6d e0       	ldi	r22, 0x0D	; 13
    143c:	87 e2       	ldi	r24, 0x27	; 39
    143e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    1442:	62 e6       	ldi	r22, 0x62	; 98
    1444:	71 e4       	ldi	r23, 0x41	; 65
    1446:	87 e2       	ldi	r24, 0x27	; 39
    1448:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 13,2);
    144c:	42 e0       	ldi	r20, 0x02	; 2
    144e:	6d e0       	ldi	r22, 0x0D	; 13
    1450:	87 e2       	ldi	r24, 0x27	; 39
    1452:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1456:	08 95       	ret

00001458 <Menu_handler>:
	refresh_screen=1;
}

void Menu_handler(void){
	
	if (refresh_screen==1){	
    1458:	80 91 74 41 	lds	r24, 0x4174	; 0x804174 <refresh_screen>
    145c:	81 30       	cpi	r24, 0x01	; 1
    145e:	09 f0       	breq	.+2      	; 0x1462 <Menu_handler+0xa>
    1460:	c4 c5       	rjmp	.+2952   	; 0x1fea <Menu_handler+0xb92>
	refresh_screen=0;
    1462:	10 92 74 41 	sts	0x4174, r1	; 0x804174 <refresh_screen>
	HD44780_PCF8574_DisplayClear(addr);
    1466:	87 e2       	ldi	r24, 0x27	; 39
    1468:	0e 94 9f 10 	call	0x213e	; 0x213e <HD44780_PCF8574_DisplayClear>
	if (menuselected==0){	//draw main menu
    146c:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
    1470:	81 11       	cpse	r24, r1
    1472:	b5 c0       	rjmp	.+362    	; 0x15de <Menu_handler+0x186>
		HD44780_PCF8574_PositionXY(addr, 1,0);
    1474:	40 e0       	ldi	r20, 0x00	; 0
    1476:	61 e0       	ldi	r22, 0x01	; 1
    1478:	87 e2       	ldi	r24, 0x27	; 39
    147a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, mainmenuindex0);
    147e:	6f e1       	ldi	r22, 0x1F	; 31
    1480:	71 e4       	ldi	r23, 0x41	; 65
    1482:	87 e2       	ldi	r24, 0x27	; 39
    1484:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 1,1);
    1488:	41 e0       	ldi	r20, 0x01	; 1
    148a:	61 e0       	ldi	r22, 0x01	; 1
    148c:	87 e2       	ldi	r24, 0x27	; 39
    148e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, mainmenuindex1);
    1492:	61 e1       	ldi	r22, 0x11	; 17
    1494:	71 e4       	ldi	r23, 0x41	; 65
    1496:	87 e2       	ldi	r24, 0x27	; 39
    1498:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 1,2);
    149c:	42 e0       	ldi	r20, 0x02	; 2
    149e:	61 e0       	ldi	r22, 0x01	; 1
    14a0:	87 e2       	ldi	r24, 0x27	; 39
    14a2:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, mainmenuindex2);
    14a6:	65 e0       	ldi	r22, 0x05	; 5
    14a8:	71 e4       	ldi	r23, 0x41	; 65
    14aa:	87 e2       	ldi	r24, 0x27	; 39
    14ac:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 1,3);
    14b0:	43 e0       	ldi	r20, 0x03	; 3
    14b2:	61 e0       	ldi	r22, 0x01	; 1
    14b4:	87 e2       	ldi	r24, 0x27	; 39
    14b6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, mainmenuindex3);
    14ba:	6b ef       	ldi	r22, 0xFB	; 251
    14bc:	70 e4       	ldi	r23, 0x40	; 64
    14be:	87 e2       	ldi	r24, 0x27	; 39
    14c0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		
		
		if (indexselected==0){
    14c4:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    14c8:	81 11       	cpse	r24, r1
    14ca:	24 c0       	rjmp	.+72     	; 0x1514 <Menu_handler+0xbc>
			HD44780_PCF8574_PositionXY(addr, 0,0);
    14cc:	40 e0       	ldi	r20, 0x00	; 0
    14ce:	60 e0       	ldi	r22, 0x00	; 0
    14d0:	87 e2       	ldi	r24, 0x27	; 39
    14d2:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    14d6:	62 e6       	ldi	r22, 0x62	; 98
    14d8:	71 e4       	ldi	r23, 0x41	; 65
    14da:	87 e2       	ldi	r24, 0x27	; 39
    14dc:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,0);
    14e0:	40 e0       	ldi	r20, 0x00	; 0
    14e2:	60 e0       	ldi	r22, 0x00	; 0
    14e4:	87 e2       	ldi	r24, 0x27	; 39
    14e6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			if (adjustmode==1){
    14ea:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    14ee:	81 30       	cpi	r24, 0x01	; 1
    14f0:	09 f0       	breq	.+2      	; 0x14f4 <Menu_handler+0x9c>
    14f2:	7b c5       	rjmp	.+2806   	; 0x1fea <Menu_handler+0xb92>
				HD44780_PCF8574_PositionXY(addr, 13,0);
    14f4:	40 e0       	ldi	r20, 0x00	; 0
    14f6:	6d e0       	ldi	r22, 0x0D	; 13
    14f8:	87 e2       	ldi	r24, 0x27	; 39
    14fa:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, ">");
    14fe:	62 e6       	ldi	r22, 0x62	; 98
    1500:	71 e4       	ldi	r23, 0x41	; 65
    1502:	87 e2       	ldi	r24, 0x27	; 39
    1504:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 13,0);
    1508:	40 e0       	ldi	r20, 0x00	; 0
    150a:	6d e0       	ldi	r22, 0x0D	; 13
    150c:	87 e2       	ldi	r24, 0x27	; 39
    150e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1512:	6b c5       	rjmp	.+2774   	; 0x1fea <Menu_handler+0xb92>
			}
		}
		else if (indexselected==1){
    1514:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1518:	81 30       	cpi	r24, 0x01	; 1
    151a:	21 f5       	brne	.+72     	; 0x1564 <Menu_handler+0x10c>
			HD44780_PCF8574_PositionXY(addr, 0,1);
    151c:	41 e0       	ldi	r20, 0x01	; 1
    151e:	60 e0       	ldi	r22, 0x00	; 0
    1520:	87 e2       	ldi	r24, 0x27	; 39
    1522:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    1526:	62 e6       	ldi	r22, 0x62	; 98
    1528:	71 e4       	ldi	r23, 0x41	; 65
    152a:	87 e2       	ldi	r24, 0x27	; 39
    152c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,1);
    1530:	41 e0       	ldi	r20, 0x01	; 1
    1532:	60 e0       	ldi	r22, 0x00	; 0
    1534:	87 e2       	ldi	r24, 0x27	; 39
    1536:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			if (adjustmode==1){
    153a:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    153e:	81 30       	cpi	r24, 0x01	; 1
    1540:	09 f0       	breq	.+2      	; 0x1544 <Menu_handler+0xec>
    1542:	53 c5       	rjmp	.+2726   	; 0x1fea <Menu_handler+0xb92>
				HD44780_PCF8574_PositionXY(addr, 13,1);
    1544:	41 e0       	ldi	r20, 0x01	; 1
    1546:	6d e0       	ldi	r22, 0x0D	; 13
    1548:	87 e2       	ldi	r24, 0x27	; 39
    154a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, ">");
    154e:	62 e6       	ldi	r22, 0x62	; 98
    1550:	71 e4       	ldi	r23, 0x41	; 65
    1552:	87 e2       	ldi	r24, 0x27	; 39
    1554:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 13,1);
    1558:	41 e0       	ldi	r20, 0x01	; 1
    155a:	6d e0       	ldi	r22, 0x0D	; 13
    155c:	87 e2       	ldi	r24, 0x27	; 39
    155e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1562:	43 c5       	rjmp	.+2694   	; 0x1fea <Menu_handler+0xb92>
			}
		}
		else if (indexselected==2){
    1564:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1568:	82 30       	cpi	r24, 0x02	; 2
    156a:	21 f5       	brne	.+72     	; 0x15b4 <Menu_handler+0x15c>
			HD44780_PCF8574_PositionXY(addr, 0,2);
    156c:	42 e0       	ldi	r20, 0x02	; 2
    156e:	60 e0       	ldi	r22, 0x00	; 0
    1570:	87 e2       	ldi	r24, 0x27	; 39
    1572:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    1576:	62 e6       	ldi	r22, 0x62	; 98
    1578:	71 e4       	ldi	r23, 0x41	; 65
    157a:	87 e2       	ldi	r24, 0x27	; 39
    157c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,2);
    1580:	42 e0       	ldi	r20, 0x02	; 2
    1582:	60 e0       	ldi	r22, 0x00	; 0
    1584:	87 e2       	ldi	r24, 0x27	; 39
    1586:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			if (adjustmode==1){
    158a:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    158e:	81 30       	cpi	r24, 0x01	; 1
    1590:	09 f0       	breq	.+2      	; 0x1594 <Menu_handler+0x13c>
    1592:	2b c5       	rjmp	.+2646   	; 0x1fea <Menu_handler+0xb92>
				HD44780_PCF8574_PositionXY(addr, 13,2);
    1594:	42 e0       	ldi	r20, 0x02	; 2
    1596:	6d e0       	ldi	r22, 0x0D	; 13
    1598:	87 e2       	ldi	r24, 0x27	; 39
    159a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, ">");
    159e:	62 e6       	ldi	r22, 0x62	; 98
    15a0:	71 e4       	ldi	r23, 0x41	; 65
    15a2:	87 e2       	ldi	r24, 0x27	; 39
    15a4:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 13,2);
    15a8:	42 e0       	ldi	r20, 0x02	; 2
    15aa:	6d e0       	ldi	r22, 0x0D	; 13
    15ac:	87 e2       	ldi	r24, 0x27	; 39
    15ae:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    15b2:	1b c5       	rjmp	.+2614   	; 0x1fea <Menu_handler+0xb92>
			}
		}
		else if (indexselected==3){
    15b4:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    15b8:	83 30       	cpi	r24, 0x03	; 3
    15ba:	09 f0       	breq	.+2      	; 0x15be <Menu_handler+0x166>
    15bc:	16 c5       	rjmp	.+2604   	; 0x1fea <Menu_handler+0xb92>
			HD44780_PCF8574_PositionXY(addr, 0,3);
    15be:	43 e0       	ldi	r20, 0x03	; 3
    15c0:	60 e0       	ldi	r22, 0x00	; 0
    15c2:	87 e2       	ldi	r24, 0x27	; 39
    15c4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, ">");
    15c8:	62 e6       	ldi	r22, 0x62	; 98
    15ca:	71 e4       	ldi	r23, 0x41	; 65
    15cc:	87 e2       	ldi	r24, 0x27	; 39
    15ce:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 0,3);
    15d2:	43 e0       	ldi	r20, 0x03	; 3
    15d4:	60 e0       	ldi	r22, 0x00	; 0
    15d6:	87 e2       	ldi	r24, 0x27	; 39
    15d8:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    15dc:	06 c5       	rjmp	.+2572   	; 0x1fea <Menu_handler+0xb92>
		}
	}
	
	else if (menuselected==1){	//Draw info screen
    15de:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
    15e2:	81 30       	cpi	r24, 0x01	; 1
    15e4:	09 f0       	breq	.+2      	; 0x15e8 <Menu_handler+0x190>
    15e6:	7a c0       	rjmp	.+244    	; 0x16dc <Menu_handler+0x284>
		HD44780_PCF8574_PositionXY(addr, 0,0);
    15e8:	40 e0       	ldi	r20, 0x00	; 0
    15ea:	60 e0       	ldi	r22, 0x00	; 0
    15ec:	87 e2       	ldi	r24, 0x27	; 39
    15ee:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, infoindex0);
    15f2:	67 ef       	ldi	r22, 0xF7	; 247
    15f4:	70 e4       	ldi	r23, 0x40	; 64
    15f6:	87 e2       	ldi	r24, 0x27	; 39
    15f8:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 0,1);
    15fc:	41 e0       	ldi	r20, 0x01	; 1
    15fe:	60 e0       	ldi	r22, 0x00	; 0
    1600:	87 e2       	ldi	r24, 0x27	; 39
    1602:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, infoindex1);
    1606:	6c ee       	ldi	r22, 0xEC	; 236
    1608:	70 e4       	ldi	r23, 0x40	; 64
    160a:	87 e2       	ldi	r24, 0x27	; 39
    160c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 0,2);
    1610:	42 e0       	ldi	r20, 0x02	; 2
    1612:	60 e0       	ldi	r22, 0x00	; 0
    1614:	87 e2       	ldi	r24, 0x27	; 39
    1616:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, infoindex2);
    161a:	60 ee       	ldi	r22, 0xE0	; 224
    161c:	70 e4       	ldi	r23, 0x40	; 64
    161e:	87 e2       	ldi	r24, 0x27	; 39
    1620:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 0,3);
    1624:	43 e0       	ldi	r20, 0x03	; 3
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	87 e2       	ldi	r24, 0x27	; 39
    162a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		HD44780_PCF8574_DrawString(addr, infoindex3);
    162e:	67 ed       	ldi	r22, 0xD7	; 215
    1630:	70 e4       	ldi	r23, 0x40	; 64
    1632:	87 e2       	ldi	r24, 0x27	; 39
    1634:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,0);
    1638:	40 e0       	ldi	r20, 0x00	; 0
    163a:	6e e0       	ldi	r22, 0x0E	; 14
    163c:	87 e2       	ldi	r24, 0x27	; 39
    163e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(rpm_value,rpm_string,10);
    1642:	80 91 68 41 	lds	r24, 0x4168	; 0x804168 <rpm_value>
    1646:	90 91 69 41 	lds	r25, 0x4169	; 0x804169 <rpm_value+0x1>
    164a:	4a e0       	ldi	r20, 0x0A	; 10
    164c:	61 ed       	ldi	r22, 0xD1	; 209
    164e:	70 e4       	ldi	r23, 0x40	; 64
    1650:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		HD44780_PCF8574_DrawString(addr, rpm_string);
    1654:	61 ed       	ldi	r22, 0xD1	; 209
    1656:	70 e4       	ldi	r23, 0x40	; 64
    1658:	87 e2       	ldi	r24, 0x27	; 39
    165a:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,1);
    165e:	41 e0       	ldi	r20, 0x01	; 1
    1660:	6e e0       	ldi	r22, 0x0E	; 14
    1662:	87 e2       	ldi	r24, 0x27	; 39
    1664:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(backemf_value,backemf_string,10);
    1668:	80 91 66 41 	lds	r24, 0x4166	; 0x804166 <backemf_value>
    166c:	90 91 67 41 	lds	r25, 0x4167	; 0x804167 <backemf_value+0x1>
    1670:	4a e0       	ldi	r20, 0x0A	; 10
    1672:	6b ec       	ldi	r22, 0xCB	; 203
    1674:	70 e4       	ldi	r23, 0x40	; 64
    1676:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		HD44780_PCF8574_DrawString(addr, backemf_string);
    167a:	6b ec       	ldi	r22, 0xCB	; 203
    167c:	70 e4       	ldi	r23, 0x40	; 64
    167e:	87 e2       	ldi	r24, 0x27	; 39
    1680:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,2);
    1684:	42 e0       	ldi	r20, 0x02	; 2
    1686:	6e e0       	ldi	r22, 0x0E	; 14
    1688:	87 e2       	ldi	r24, 0x27	; 39
    168a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(current_value,current_string,10);
    168e:	80 91 64 41 	lds	r24, 0x4164	; 0x804164 <__data_end>
    1692:	90 91 65 41 	lds	r25, 0x4165	; 0x804165 <__data_end+0x1>
    1696:	4a e0       	ldi	r20, 0x0A	; 10
    1698:	65 ec       	ldi	r22, 0xC5	; 197
    169a:	70 e4       	ldi	r23, 0x40	; 64
    169c:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		HD44780_PCF8574_DrawString(addr, current_string);
    16a0:	65 ec       	ldi	r22, 0xC5	; 197
    16a2:	70 e4       	ldi	r23, 0x40	; 64
    16a4:	87 e2       	ldi	r24, 0x27	; 39
    16a6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 14,3);
    16aa:	43 e0       	ldi	r20, 0x03	; 3
    16ac:	6e e0       	ldi	r22, 0x0E	; 14
    16ae:	87 e2       	ldi	r24, 0x27	; 39
    16b0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
		itoa(dutycycle_value,dutycycle_string,10);
    16b4:	80 91 6a 41 	lds	r24, 0x416A	; 0x80416a <dutycycle_value>
    16b8:	90 91 6b 41 	lds	r25, 0x416B	; 0x80416b <dutycycle_value+0x1>
    16bc:	4a e0       	ldi	r20, 0x0A	; 10
    16be:	6f eb       	ldi	r22, 0xBF	; 191
    16c0:	70 e4       	ldi	r23, 0x40	; 64
    16c2:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		HD44780_PCF8574_DrawString(addr, dutycycle_string);
    16c6:	6f eb       	ldi	r22, 0xBF	; 191
    16c8:	70 e4       	ldi	r23, 0x40	; 64
    16ca:	87 e2       	ldi	r24, 0x27	; 39
    16cc:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
		HD44780_PCF8574_PositionXY(addr, 19,3);
    16d0:	43 e0       	ldi	r20, 0x03	; 3
    16d2:	63 e1       	ldi	r22, 0x13	; 19
    16d4:	87 e2       	ldi	r24, 0x27	; 39
    16d6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    16da:	87 c4       	rjmp	.+2318   	; 0x1fea <Menu_handler+0xb92>
		
	}
	else if (menuselected==2){	//Draw regulator screen
    16dc:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
    16e0:	82 30       	cpi	r24, 0x02	; 2
    16e2:	09 f0       	breq	.+2      	; 0x16e6 <Menu_handler+0x28e>
    16e4:	f6 c2       	rjmp	.+1516   	; 0x1cd2 <Menu_handler+0x87a>
		
		itoa(adjustsetpoint,regulatorstatusindex1,10);
    16e6:	80 91 18 40 	lds	r24, 0x4018	; 0x804018 <adjustsetpoint>
    16ea:	90 91 19 40 	lds	r25, 0x4019	; 0x804019 <adjustsetpoint+0x1>
    16ee:	4a e0       	ldi	r20, 0x0A	; 10
    16f0:	67 e5       	ldi	r22, 0x57	; 87
    16f2:	70 e4       	ldi	r23, 0x40	; 64
    16f4:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		itoa(adjustkp,regulatorstatusindex2,10);
    16f8:	80 91 7d 41 	lds	r24, 0x417D	; 0x80417d <adjustkp>
    16fc:	90 91 7e 41 	lds	r25, 0x417E	; 0x80417e <adjustkp+0x1>
    1700:	4a e0       	ldi	r20, 0x0A	; 10
    1702:	61 e5       	ldi	r22, 0x51	; 81
    1704:	70 e4       	ldi	r23, 0x40	; 64
    1706:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		itoa(adjustki,regulatorstatusindex3,10);
    170a:	80 91 7b 41 	lds	r24, 0x417B	; 0x80417b <adjustki>
    170e:	90 91 7c 41 	lds	r25, 0x417C	; 0x80417c <adjustki+0x1>
    1712:	4a e0       	ldi	r20, 0x0A	; 10
    1714:	6b e4       	ldi	r22, 0x4B	; 75
    1716:	70 e4       	ldi	r23, 0x40	; 64
    1718:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		itoa(adjustkd,regulatorstatusindex4,10);
    171c:	80 91 79 41 	lds	r24, 0x4179	; 0x804179 <adjustkd>
    1720:	90 91 7a 41 	lds	r25, 0x417A	; 0x80417a <adjustkd+0x1>
    1724:	4a e0       	ldi	r20, 0x0A	; 10
    1726:	65 e4       	ldi	r22, 0x45	; 69
    1728:	70 e4       	ldi	r23, 0x40	; 64
    172a:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
		
		
		
		if(show_0_3==1){
    172e:	80 91 30 41 	lds	r24, 0x4130	; 0x804130 <show_0_3>
    1732:	81 30       	cpi	r24, 0x01	; 1
    1734:	09 f0       	breq	.+2      	; 0x1738 <Menu_handler+0x2e0>
    1736:	ff c0       	rjmp	.+510    	; 0x1936 <Menu_handler+0x4de>
			HD44780_PCF8574_PositionXY(addr, 1,0);
    1738:	40 e0       	ldi	r20, 0x00	; 0
    173a:	61 e0       	ldi	r22, 0x01	; 1
    173c:	87 e2       	ldi	r24, 0x27	; 39
    173e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex0);
    1742:	66 e7       	ldi	r22, 0x76	; 118
    1744:	70 e4       	ldi	r23, 0x40	; 64
    1746:	87 e2       	ldi	r24, 0x27	; 39
    1748:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,1);
    174c:	41 e0       	ldi	r20, 0x01	; 1
    174e:	61 e0       	ldi	r22, 0x01	; 1
    1750:	87 e2       	ldi	r24, 0x27	; 39
    1752:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex1);
    1756:	6d e6       	ldi	r22, 0x6D	; 109
    1758:	70 e4       	ldi	r23, 0x40	; 64
    175a:	87 e2       	ldi	r24, 0x27	; 39
    175c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,2);
    1760:	42 e0       	ldi	r20, 0x02	; 2
    1762:	61 e0       	ldi	r22, 0x01	; 1
    1764:	87 e2       	ldi	r24, 0x27	; 39
    1766:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex2);
    176a:	6a e6       	ldi	r22, 0x6A	; 106
    176c:	70 e4       	ldi	r23, 0x40	; 64
    176e:	87 e2       	ldi	r24, 0x27	; 39
    1770:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,3);
    1774:	43 e0       	ldi	r20, 0x03	; 3
    1776:	61 e0       	ldi	r22, 0x01	; 1
    1778:	87 e2       	ldi	r24, 0x27	; 39
    177a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex3);
    177e:	67 e6       	ldi	r22, 0x67	; 103
    1780:	70 e4       	ldi	r23, 0x40	; 64
    1782:	87 e2       	ldi	r24, 0x27	; 39
    1784:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,0);
    1788:	40 e0       	ldi	r20, 0x00	; 0
    178a:	6e e0       	ldi	r22, 0x0E	; 14
    178c:	87 e2       	ldi	r24, 0x27	; 39
    178e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			if (regulatormodestatus==1){
    1792:	80 91 80 41 	lds	r24, 0x4180	; 0x804180 <regulatormodestatus>
    1796:	81 30       	cpi	r24, 0x01	; 1
    1798:	31 f4       	brne	.+12     	; 0x17a6 <Menu_handler+0x34e>
			HD44780_PCF8574_DrawString(addr, statusOn);
    179a:	6b e8       	ldi	r22, 0x8B	; 139
    179c:	70 e4       	ldi	r23, 0x40	; 64
    179e:	87 e2       	ldi	r24, 0x27	; 39
    17a0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
    17a4:	09 c0       	rjmp	.+18     	; 0x17b8 <Menu_handler+0x360>
			}
			else if (regulatormodestatus==0){
    17a6:	80 91 80 41 	lds	r24, 0x4180	; 0x804180 <regulatormodestatus>
    17aa:	81 11       	cpse	r24, r1
    17ac:	05 c0       	rjmp	.+10     	; 0x17b8 <Menu_handler+0x360>
				HD44780_PCF8574_DrawString(addr, statusOff);
    17ae:	65 e8       	ldi	r22, 0x85	; 133
    17b0:	70 e4       	ldi	r23, 0x40	; 64
    17b2:	87 e2       	ldi	r24, 0x27	; 39
    17b4:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			}
			HD44780_PCF8574_PositionXY(addr, 14,1);
    17b8:	41 e0       	ldi	r20, 0x01	; 1
    17ba:	6e e0       	ldi	r22, 0x0E	; 14
    17bc:	87 e2       	ldi	r24, 0x27	; 39
    17be:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex1);
    17c2:	67 e5       	ldi	r22, 0x57	; 87
    17c4:	70 e4       	ldi	r23, 0x40	; 64
    17c6:	87 e2       	ldi	r24, 0x27	; 39
    17c8:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,2);
    17cc:	42 e0       	ldi	r20, 0x02	; 2
    17ce:	6e e0       	ldi	r22, 0x0E	; 14
    17d0:	87 e2       	ldi	r24, 0x27	; 39
    17d2:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex2);
    17d6:	61 e5       	ldi	r22, 0x51	; 81
    17d8:	70 e4       	ldi	r23, 0x40	; 64
    17da:	87 e2       	ldi	r24, 0x27	; 39
    17dc:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,3);
    17e0:	43 e0       	ldi	r20, 0x03	; 3
    17e2:	6e e0       	ldi	r22, 0x0E	; 14
    17e4:	87 e2       	ldi	r24, 0x27	; 39
    17e6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex3);
    17ea:	6b e4       	ldi	r22, 0x4B	; 75
    17ec:	70 e4       	ldi	r23, 0x40	; 64
    17ee:	87 e2       	ldi	r24, 0x27	; 39
    17f0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			
			
			if (indexselected==0){
    17f4:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    17f8:	81 11       	cpse	r24, r1
    17fa:	24 c0       	rjmp	.+72     	; 0x1844 <Menu_handler+0x3ec>
				HD44780_PCF8574_PositionXY(addr, 0,0);
    17fc:	40 e0       	ldi	r20, 0x00	; 0
    17fe:	60 e0       	ldi	r22, 0x00	; 0
    1800:	87 e2       	ldi	r24, 0x27	; 39
    1802:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, ">");
    1806:	62 e6       	ldi	r22, 0x62	; 98
    1808:	71 e4       	ldi	r23, 0x41	; 65
    180a:	87 e2       	ldi	r24, 0x27	; 39
    180c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 0,0);	
    1810:	40 e0       	ldi	r20, 0x00	; 0
    1812:	60 e0       	ldi	r22, 0x00	; 0
    1814:	87 e2       	ldi	r24, 0x27	; 39
    1816:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				if (adjustmode==1){
    181a:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    181e:	81 30       	cpi	r24, 0x01	; 1
    1820:	09 f0       	breq	.+2      	; 0x1824 <Menu_handler+0x3cc>
    1822:	e3 c3       	rjmp	.+1990   	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 13,0);
    1824:	40 e0       	ldi	r20, 0x00	; 0
    1826:	6d e0       	ldi	r22, 0x0D	; 13
    1828:	87 e2       	ldi	r24, 0x27	; 39
    182a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    182e:	62 e6       	ldi	r22, 0x62	; 98
    1830:	71 e4       	ldi	r23, 0x41	; 65
    1832:	87 e2       	ldi	r24, 0x27	; 39
    1834:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 13,0);
    1838:	40 e0       	ldi	r20, 0x00	; 0
    183a:	6d e0       	ldi	r22, 0x0D	; 13
    183c:	87 e2       	ldi	r24, 0x27	; 39
    183e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1842:	d3 c3       	rjmp	.+1958   	; 0x1fea <Menu_handler+0xb92>
				}			
			}
			else if (indexselected==1){
    1844:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1848:	81 30       	cpi	r24, 0x01	; 1
    184a:	21 f5       	brne	.+72     	; 0x1894 <Menu_handler+0x43c>
				HD44780_PCF8574_PositionXY(addr, 0,1);
    184c:	41 e0       	ldi	r20, 0x01	; 1
    184e:	60 e0       	ldi	r22, 0x00	; 0
    1850:	87 e2       	ldi	r24, 0x27	; 39
    1852:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, ">");
    1856:	62 e6       	ldi	r22, 0x62	; 98
    1858:	71 e4       	ldi	r23, 0x41	; 65
    185a:	87 e2       	ldi	r24, 0x27	; 39
    185c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 0,1);
    1860:	41 e0       	ldi	r20, 0x01	; 1
    1862:	60 e0       	ldi	r22, 0x00	; 0
    1864:	87 e2       	ldi	r24, 0x27	; 39
    1866:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				if (adjustmode==1){
    186a:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    186e:	81 30       	cpi	r24, 0x01	; 1
    1870:	09 f0       	breq	.+2      	; 0x1874 <Menu_handler+0x41c>
    1872:	bb c3       	rjmp	.+1910   	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 13,1);
    1874:	41 e0       	ldi	r20, 0x01	; 1
    1876:	6d e0       	ldi	r22, 0x0D	; 13
    1878:	87 e2       	ldi	r24, 0x27	; 39
    187a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    187e:	62 e6       	ldi	r22, 0x62	; 98
    1880:	71 e4       	ldi	r23, 0x41	; 65
    1882:	87 e2       	ldi	r24, 0x27	; 39
    1884:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 13,1);
    1888:	41 e0       	ldi	r20, 0x01	; 1
    188a:	6d e0       	ldi	r22, 0x0D	; 13
    188c:	87 e2       	ldi	r24, 0x27	; 39
    188e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1892:	ab c3       	rjmp	.+1878   	; 0x1fea <Menu_handler+0xb92>
				}
			}
			else if (indexselected==2){
    1894:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1898:	82 30       	cpi	r24, 0x02	; 2
    189a:	21 f5       	brne	.+72     	; 0x18e4 <Menu_handler+0x48c>
				HD44780_PCF8574_PositionXY(addr, 0,2);
    189c:	42 e0       	ldi	r20, 0x02	; 2
    189e:	60 e0       	ldi	r22, 0x00	; 0
    18a0:	87 e2       	ldi	r24, 0x27	; 39
    18a2:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, ">");
    18a6:	62 e6       	ldi	r22, 0x62	; 98
    18a8:	71 e4       	ldi	r23, 0x41	; 65
    18aa:	87 e2       	ldi	r24, 0x27	; 39
    18ac:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 0,2);
    18b0:	42 e0       	ldi	r20, 0x02	; 2
    18b2:	60 e0       	ldi	r22, 0x00	; 0
    18b4:	87 e2       	ldi	r24, 0x27	; 39
    18b6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				if (adjustmode==1){
    18ba:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    18be:	81 30       	cpi	r24, 0x01	; 1
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <Menu_handler+0x46c>
    18c2:	93 c3       	rjmp	.+1830   	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 13,2);
    18c4:	42 e0       	ldi	r20, 0x02	; 2
    18c6:	6d e0       	ldi	r22, 0x0D	; 13
    18c8:	87 e2       	ldi	r24, 0x27	; 39
    18ca:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    18ce:	62 e6       	ldi	r22, 0x62	; 98
    18d0:	71 e4       	ldi	r23, 0x41	; 65
    18d2:	87 e2       	ldi	r24, 0x27	; 39
    18d4:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 13,2);
    18d8:	42 e0       	ldi	r20, 0x02	; 2
    18da:	6d e0       	ldi	r22, 0x0D	; 13
    18dc:	87 e2       	ldi	r24, 0x27	; 39
    18de:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    18e2:	83 c3       	rjmp	.+1798   	; 0x1fea <Menu_handler+0xb92>
				}
			}
			else if (indexselected==3){
    18e4:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    18e8:	83 30       	cpi	r24, 0x03	; 3
    18ea:	09 f0       	breq	.+2      	; 0x18ee <Menu_handler+0x496>
    18ec:	7e c3       	rjmp	.+1788   	; 0x1fea <Menu_handler+0xb92>
				HD44780_PCF8574_PositionXY(addr, 0,3);
    18ee:	43 e0       	ldi	r20, 0x03	; 3
    18f0:	60 e0       	ldi	r22, 0x00	; 0
    18f2:	87 e2       	ldi	r24, 0x27	; 39
    18f4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, ">");
    18f8:	62 e6       	ldi	r22, 0x62	; 98
    18fa:	71 e4       	ldi	r23, 0x41	; 65
    18fc:	87 e2       	ldi	r24, 0x27	; 39
    18fe:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 0,3);
    1902:	43 e0       	ldi	r20, 0x03	; 3
    1904:	60 e0       	ldi	r22, 0x00	; 0
    1906:	87 e2       	ldi	r24, 0x27	; 39
    1908:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				if (adjustmode==1){
    190c:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1910:	81 30       	cpi	r24, 0x01	; 1
    1912:	09 f0       	breq	.+2      	; 0x1916 <Menu_handler+0x4be>
    1914:	6a c3       	rjmp	.+1748   	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 13,3);
    1916:	43 e0       	ldi	r20, 0x03	; 3
    1918:	6d e0       	ldi	r22, 0x0D	; 13
    191a:	87 e2       	ldi	r24, 0x27	; 39
    191c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1920:	62 e6       	ldi	r22, 0x62	; 98
    1922:	71 e4       	ldi	r23, 0x41	; 65
    1924:	87 e2       	ldi	r24, 0x27	; 39
    1926:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 13,3);
    192a:	43 e0       	ldi	r20, 0x03	; 3
    192c:	6d e0       	ldi	r22, 0x0D	; 13
    192e:	87 e2       	ldi	r24, 0x27	; 39
    1930:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1934:	5a c3       	rjmp	.+1716   	; 0x1fea <Menu_handler+0xb92>
				}
			}
		}
		else if (show_1_4==1){
    1936:	80 91 83 41 	lds	r24, 0x4183	; 0x804183 <show_1_4>
    193a:	81 30       	cpi	r24, 0x01	; 1
    193c:	09 f0       	breq	.+2      	; 0x1940 <Menu_handler+0x4e8>
    193e:	f1 c0       	rjmp	.+482    	; 0x1b22 <Menu_handler+0x6ca>
			HD44780_PCF8574_PositionXY(addr, 1,0);
    1940:	40 e0       	ldi	r20, 0x00	; 0
    1942:	61 e0       	ldi	r22, 0x01	; 1
    1944:	87 e2       	ldi	r24, 0x27	; 39
    1946:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex1);
    194a:	6d e6       	ldi	r22, 0x6D	; 109
    194c:	70 e4       	ldi	r23, 0x40	; 64
    194e:	87 e2       	ldi	r24, 0x27	; 39
    1950:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,1);
    1954:	41 e0       	ldi	r20, 0x01	; 1
    1956:	61 e0       	ldi	r22, 0x01	; 1
    1958:	87 e2       	ldi	r24, 0x27	; 39
    195a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex2);
    195e:	6a e6       	ldi	r22, 0x6A	; 106
    1960:	70 e4       	ldi	r23, 0x40	; 64
    1962:	87 e2       	ldi	r24, 0x27	; 39
    1964:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,2);
    1968:	42 e0       	ldi	r20, 0x02	; 2
    196a:	61 e0       	ldi	r22, 0x01	; 1
    196c:	87 e2       	ldi	r24, 0x27	; 39
    196e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex3);
    1972:	67 e6       	ldi	r22, 0x67	; 103
    1974:	70 e4       	ldi	r23, 0x40	; 64
    1976:	87 e2       	ldi	r24, 0x27	; 39
    1978:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,3);
    197c:	43 e0       	ldi	r20, 0x03	; 3
    197e:	61 e0       	ldi	r22, 0x01	; 1
    1980:	87 e2       	ldi	r24, 0x27	; 39
    1982:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex4);
    1986:	64 e6       	ldi	r22, 0x64	; 100
    1988:	70 e4       	ldi	r23, 0x40	; 64
    198a:	87 e2       	ldi	r24, 0x27	; 39
    198c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,0);
    1990:	40 e0       	ldi	r20, 0x00	; 0
    1992:	6e e0       	ldi	r22, 0x0E	; 14
    1994:	87 e2       	ldi	r24, 0x27	; 39
    1996:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex1);
    199a:	67 e5       	ldi	r22, 0x57	; 87
    199c:	70 e4       	ldi	r23, 0x40	; 64
    199e:	87 e2       	ldi	r24, 0x27	; 39
    19a0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,1);
    19a4:	41 e0       	ldi	r20, 0x01	; 1
    19a6:	6e e0       	ldi	r22, 0x0E	; 14
    19a8:	87 e2       	ldi	r24, 0x27	; 39
    19aa:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex2);
    19ae:	61 e5       	ldi	r22, 0x51	; 81
    19b0:	70 e4       	ldi	r23, 0x40	; 64
    19b2:	87 e2       	ldi	r24, 0x27	; 39
    19b4:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,2);
    19b8:	42 e0       	ldi	r20, 0x02	; 2
    19ba:	6e e0       	ldi	r22, 0x0E	; 14
    19bc:	87 e2       	ldi	r24, 0x27	; 39
    19be:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex3);
    19c2:	6b e4       	ldi	r22, 0x4B	; 75
    19c4:	70 e4       	ldi	r23, 0x40	; 64
    19c6:	87 e2       	ldi	r24, 0x27	; 39
    19c8:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,3);
    19cc:	43 e0       	ldi	r20, 0x03	; 3
    19ce:	6e e0       	ldi	r22, 0x0E	; 14
    19d0:	87 e2       	ldi	r24, 0x27	; 39
    19d2:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex4);
    19d6:	65 e4       	ldi	r22, 0x45	; 69
    19d8:	70 e4       	ldi	r23, 0x40	; 64
    19da:	87 e2       	ldi	r24, 0x27	; 39
    19dc:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				if (indexselected==1){
    19e0:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    19e4:	81 30       	cpi	r24, 0x01	; 1
    19e6:	21 f5       	brne	.+72     	; 0x1a30 <Menu_handler+0x5d8>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    19e8:	40 e0       	ldi	r20, 0x00	; 0
    19ea:	60 e0       	ldi	r22, 0x00	; 0
    19ec:	87 e2       	ldi	r24, 0x27	; 39
    19ee:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    19f2:	62 e6       	ldi	r22, 0x62	; 98
    19f4:	71 e4       	ldi	r23, 0x41	; 65
    19f6:	87 e2       	ldi	r24, 0x27	; 39
    19f8:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    19fc:	40 e0       	ldi	r20, 0x00	; 0
    19fe:	60 e0       	ldi	r22, 0x00	; 0
    1a00:	87 e2       	ldi	r24, 0x27	; 39
    1a02:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					if (adjustmode==1){
    1a06:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1a0a:	81 30       	cpi	r24, 0x01	; 1
    1a0c:	09 f0       	breq	.+2      	; 0x1a10 <Menu_handler+0x5b8>
    1a0e:	ed c2       	rjmp	.+1498   	; 0x1fea <Menu_handler+0xb92>
						HD44780_PCF8574_PositionXY(addr, 13,0);
    1a10:	40 e0       	ldi	r20, 0x00	; 0
    1a12:	6d e0       	ldi	r22, 0x0D	; 13
    1a14:	87 e2       	ldi	r24, 0x27	; 39
    1a16:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
						HD44780_PCF8574_DrawString(addr, ">");
    1a1a:	62 e6       	ldi	r22, 0x62	; 98
    1a1c:	71 e4       	ldi	r23, 0x41	; 65
    1a1e:	87 e2       	ldi	r24, 0x27	; 39
    1a20:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
						HD44780_PCF8574_PositionXY(addr, 13,0);
    1a24:	40 e0       	ldi	r20, 0x00	; 0
    1a26:	6d e0       	ldi	r22, 0x0D	; 13
    1a28:	87 e2       	ldi	r24, 0x27	; 39
    1a2a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1a2e:	dd c2       	rjmp	.+1466   	; 0x1fea <Menu_handler+0xb92>
					}
				}
				else if (indexselected==2){
    1a30:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1a34:	82 30       	cpi	r24, 0x02	; 2
    1a36:	21 f5       	brne	.+72     	; 0x1a80 <Menu_handler+0x628>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1a38:	41 e0       	ldi	r20, 0x01	; 1
    1a3a:	60 e0       	ldi	r22, 0x00	; 0
    1a3c:	87 e2       	ldi	r24, 0x27	; 39
    1a3e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1a42:	62 e6       	ldi	r22, 0x62	; 98
    1a44:	71 e4       	ldi	r23, 0x41	; 65
    1a46:	87 e2       	ldi	r24, 0x27	; 39
    1a48:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1a4c:	41 e0       	ldi	r20, 0x01	; 1
    1a4e:	60 e0       	ldi	r22, 0x00	; 0
    1a50:	87 e2       	ldi	r24, 0x27	; 39
    1a52:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					if (adjustmode==1){
    1a56:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1a5a:	81 30       	cpi	r24, 0x01	; 1
    1a5c:	09 f0       	breq	.+2      	; 0x1a60 <Menu_handler+0x608>
    1a5e:	c5 c2       	rjmp	.+1418   	; 0x1fea <Menu_handler+0xb92>
						HD44780_PCF8574_PositionXY(addr, 13,1);
    1a60:	41 e0       	ldi	r20, 0x01	; 1
    1a62:	6d e0       	ldi	r22, 0x0D	; 13
    1a64:	87 e2       	ldi	r24, 0x27	; 39
    1a66:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
						HD44780_PCF8574_DrawString(addr, ">");
    1a6a:	62 e6       	ldi	r22, 0x62	; 98
    1a6c:	71 e4       	ldi	r23, 0x41	; 65
    1a6e:	87 e2       	ldi	r24, 0x27	; 39
    1a70:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
						HD44780_PCF8574_PositionXY(addr, 13,1);
    1a74:	41 e0       	ldi	r20, 0x01	; 1
    1a76:	6d e0       	ldi	r22, 0x0D	; 13
    1a78:	87 e2       	ldi	r24, 0x27	; 39
    1a7a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1a7e:	b5 c2       	rjmp	.+1386   	; 0x1fea <Menu_handler+0xb92>
					}
				}
				else if (indexselected==3){
    1a80:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1a84:	83 30       	cpi	r24, 0x03	; 3
    1a86:	21 f5       	brne	.+72     	; 0x1ad0 <Menu_handler+0x678>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1a88:	42 e0       	ldi	r20, 0x02	; 2
    1a8a:	60 e0       	ldi	r22, 0x00	; 0
    1a8c:	87 e2       	ldi	r24, 0x27	; 39
    1a8e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1a92:	62 e6       	ldi	r22, 0x62	; 98
    1a94:	71 e4       	ldi	r23, 0x41	; 65
    1a96:	87 e2       	ldi	r24, 0x27	; 39
    1a98:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1a9c:	42 e0       	ldi	r20, 0x02	; 2
    1a9e:	60 e0       	ldi	r22, 0x00	; 0
    1aa0:	87 e2       	ldi	r24, 0x27	; 39
    1aa2:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					if (adjustmode==1){
    1aa6:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1aaa:	81 30       	cpi	r24, 0x01	; 1
    1aac:	09 f0       	breq	.+2      	; 0x1ab0 <Menu_handler+0x658>
    1aae:	9d c2       	rjmp	.+1338   	; 0x1fea <Menu_handler+0xb92>
						HD44780_PCF8574_PositionXY(addr, 13,2);
    1ab0:	42 e0       	ldi	r20, 0x02	; 2
    1ab2:	6d e0       	ldi	r22, 0x0D	; 13
    1ab4:	87 e2       	ldi	r24, 0x27	; 39
    1ab6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
						HD44780_PCF8574_DrawString(addr, ">");
    1aba:	62 e6       	ldi	r22, 0x62	; 98
    1abc:	71 e4       	ldi	r23, 0x41	; 65
    1abe:	87 e2       	ldi	r24, 0x27	; 39
    1ac0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
						HD44780_PCF8574_PositionXY(addr, 13,2);
    1ac4:	42 e0       	ldi	r20, 0x02	; 2
    1ac6:	6d e0       	ldi	r22, 0x0D	; 13
    1ac8:	87 e2       	ldi	r24, 0x27	; 39
    1aca:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1ace:	8d c2       	rjmp	.+1306   	; 0x1fea <Menu_handler+0xb92>
					}
				}
				else if (indexselected==4){
    1ad0:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1ad4:	84 30       	cpi	r24, 0x04	; 4
    1ad6:	09 f0       	breq	.+2      	; 0x1ada <Menu_handler+0x682>
    1ad8:	88 c2       	rjmp	.+1296   	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1ada:	43 e0       	ldi	r20, 0x03	; 3
    1adc:	60 e0       	ldi	r22, 0x00	; 0
    1ade:	87 e2       	ldi	r24, 0x27	; 39
    1ae0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1ae4:	62 e6       	ldi	r22, 0x62	; 98
    1ae6:	71 e4       	ldi	r23, 0x41	; 65
    1ae8:	87 e2       	ldi	r24, 0x27	; 39
    1aea:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1aee:	43 e0       	ldi	r20, 0x03	; 3
    1af0:	60 e0       	ldi	r22, 0x00	; 0
    1af2:	87 e2       	ldi	r24, 0x27	; 39
    1af4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					if (adjustmode==1){
    1af8:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1afc:	81 30       	cpi	r24, 0x01	; 1
    1afe:	09 f0       	breq	.+2      	; 0x1b02 <Menu_handler+0x6aa>
    1b00:	74 c2       	rjmp	.+1256   	; 0x1fea <Menu_handler+0xb92>
						HD44780_PCF8574_PositionXY(addr, 13,3);
    1b02:	43 e0       	ldi	r20, 0x03	; 3
    1b04:	6d e0       	ldi	r22, 0x0D	; 13
    1b06:	87 e2       	ldi	r24, 0x27	; 39
    1b08:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
						HD44780_PCF8574_DrawString(addr, ">");
    1b0c:	62 e6       	ldi	r22, 0x62	; 98
    1b0e:	71 e4       	ldi	r23, 0x41	; 65
    1b10:	87 e2       	ldi	r24, 0x27	; 39
    1b12:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
						HD44780_PCF8574_PositionXY(addr, 13,3);
    1b16:	43 e0       	ldi	r20, 0x03	; 3
    1b18:	6d e0       	ldi	r22, 0x0D	; 13
    1b1a:	87 e2       	ldi	r24, 0x27	; 39
    1b1c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1b20:	64 c2       	rjmp	.+1224   	; 0x1fea <Menu_handler+0xb92>
					}
				}				
		}
		else if (show_2_5==1){
    1b22:	80 91 82 41 	lds	r24, 0x4182	; 0x804182 <show_2_5>
    1b26:	81 30       	cpi	r24, 0x01	; 1
    1b28:	09 f0       	breq	.+2      	; 0x1b2c <Menu_handler+0x6d4>
    1b2a:	5f c2       	rjmp	.+1214   	; 0x1fea <Menu_handler+0xb92>
			HD44780_PCF8574_PositionXY(addr, 1,0);
    1b2c:	40 e0       	ldi	r20, 0x00	; 0
    1b2e:	61 e0       	ldi	r22, 0x01	; 1
    1b30:	87 e2       	ldi	r24, 0x27	; 39
    1b32:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex2);
    1b36:	6a e6       	ldi	r22, 0x6A	; 106
    1b38:	70 e4       	ldi	r23, 0x40	; 64
    1b3a:	87 e2       	ldi	r24, 0x27	; 39
    1b3c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,1);
    1b40:	41 e0       	ldi	r20, 0x01	; 1
    1b42:	61 e0       	ldi	r22, 0x01	; 1
    1b44:	87 e2       	ldi	r24, 0x27	; 39
    1b46:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex3);
    1b4a:	67 e6       	ldi	r22, 0x67	; 103
    1b4c:	70 e4       	ldi	r23, 0x40	; 64
    1b4e:	87 e2       	ldi	r24, 0x27	; 39
    1b50:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,2);
    1b54:	42 e0       	ldi	r20, 0x02	; 2
    1b56:	61 e0       	ldi	r22, 0x01	; 1
    1b58:	87 e2       	ldi	r24, 0x27	; 39
    1b5a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex4);
    1b5e:	64 e6       	ldi	r22, 0x64	; 100
    1b60:	70 e4       	ldi	r23, 0x40	; 64
    1b62:	87 e2       	ldi	r24, 0x27	; 39
    1b64:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,3);
    1b68:	43 e0       	ldi	r20, 0x03	; 3
    1b6a:	61 e0       	ldi	r22, 0x01	; 1
    1b6c:	87 e2       	ldi	r24, 0x27	; 39
    1b6e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorindex5);
    1b72:	6d e5       	ldi	r22, 0x5D	; 93
    1b74:	70 e4       	ldi	r23, 0x40	; 64
    1b76:	87 e2       	ldi	r24, 0x27	; 39
    1b78:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,0);
    1b7c:	40 e0       	ldi	r20, 0x00	; 0
    1b7e:	6e e0       	ldi	r22, 0x0E	; 14
    1b80:	87 e2       	ldi	r24, 0x27	; 39
    1b82:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex2);
    1b86:	61 e5       	ldi	r22, 0x51	; 81
    1b88:	70 e4       	ldi	r23, 0x40	; 64
    1b8a:	87 e2       	ldi	r24, 0x27	; 39
    1b8c:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,1);
    1b90:	41 e0       	ldi	r20, 0x01	; 1
    1b92:	6e e0       	ldi	r22, 0x0E	; 14
    1b94:	87 e2       	ldi	r24, 0x27	; 39
    1b96:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex3);
    1b9a:	6b e4       	ldi	r22, 0x4B	; 75
    1b9c:	70 e4       	ldi	r23, 0x40	; 64
    1b9e:	87 e2       	ldi	r24, 0x27	; 39
    1ba0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 14,2);
    1ba4:	42 e0       	ldi	r20, 0x02	; 2
    1ba6:	6e e0       	ldi	r22, 0x0E	; 14
    1ba8:	87 e2       	ldi	r24, 0x27	; 39
    1baa:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, regulatorstatusindex4);
    1bae:	65 e4       	ldi	r22, 0x45	; 69
    1bb0:	70 e4       	ldi	r23, 0x40	; 64
    1bb2:	87 e2       	ldi	r24, 0x27	; 39
    1bb4:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			
			
				if (indexselected==2){
    1bb8:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1bbc:	82 30       	cpi	r24, 0x02	; 2
    1bbe:	21 f5       	brne	.+72     	; 0x1c08 <Menu_handler+0x7b0>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    1bc0:	40 e0       	ldi	r20, 0x00	; 0
    1bc2:	60 e0       	ldi	r22, 0x00	; 0
    1bc4:	87 e2       	ldi	r24, 0x27	; 39
    1bc6:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1bca:	62 e6       	ldi	r22, 0x62	; 98
    1bcc:	71 e4       	ldi	r23, 0x41	; 65
    1bce:	87 e2       	ldi	r24, 0x27	; 39
    1bd0:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    1bd4:	40 e0       	ldi	r20, 0x00	; 0
    1bd6:	60 e0       	ldi	r22, 0x00	; 0
    1bd8:	87 e2       	ldi	r24, 0x27	; 39
    1bda:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					if (adjustmode==1){
    1bde:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1be2:	81 30       	cpi	r24, 0x01	; 1
    1be4:	09 f0       	breq	.+2      	; 0x1be8 <Menu_handler+0x790>
    1be6:	01 c2       	rjmp	.+1026   	; 0x1fea <Menu_handler+0xb92>
						HD44780_PCF8574_PositionXY(addr, 13,0);
    1be8:	40 e0       	ldi	r20, 0x00	; 0
    1bea:	6d e0       	ldi	r22, 0x0D	; 13
    1bec:	87 e2       	ldi	r24, 0x27	; 39
    1bee:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
						HD44780_PCF8574_DrawString(addr, ">");
    1bf2:	62 e6       	ldi	r22, 0x62	; 98
    1bf4:	71 e4       	ldi	r23, 0x41	; 65
    1bf6:	87 e2       	ldi	r24, 0x27	; 39
    1bf8:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
						HD44780_PCF8574_PositionXY(addr, 13,0);
    1bfc:	40 e0       	ldi	r20, 0x00	; 0
    1bfe:	6d e0       	ldi	r22, 0x0D	; 13
    1c00:	87 e2       	ldi	r24, 0x27	; 39
    1c02:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1c06:	f1 c1       	rjmp	.+994    	; 0x1fea <Menu_handler+0xb92>
					}
				}
				else if (indexselected==3){
    1c08:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1c0c:	83 30       	cpi	r24, 0x03	; 3
    1c0e:	21 f5       	brne	.+72     	; 0x1c58 <Menu_handler+0x800>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1c10:	41 e0       	ldi	r20, 0x01	; 1
    1c12:	60 e0       	ldi	r22, 0x00	; 0
    1c14:	87 e2       	ldi	r24, 0x27	; 39
    1c16:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1c1a:	62 e6       	ldi	r22, 0x62	; 98
    1c1c:	71 e4       	ldi	r23, 0x41	; 65
    1c1e:	87 e2       	ldi	r24, 0x27	; 39
    1c20:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1c24:	41 e0       	ldi	r20, 0x01	; 1
    1c26:	60 e0       	ldi	r22, 0x00	; 0
    1c28:	87 e2       	ldi	r24, 0x27	; 39
    1c2a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					if (adjustmode==1){
    1c2e:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1c32:	81 30       	cpi	r24, 0x01	; 1
    1c34:	09 f0       	breq	.+2      	; 0x1c38 <Menu_handler+0x7e0>
    1c36:	d9 c1       	rjmp	.+946    	; 0x1fea <Menu_handler+0xb92>
						HD44780_PCF8574_PositionXY(addr, 13,1);
    1c38:	41 e0       	ldi	r20, 0x01	; 1
    1c3a:	6d e0       	ldi	r22, 0x0D	; 13
    1c3c:	87 e2       	ldi	r24, 0x27	; 39
    1c3e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
						HD44780_PCF8574_DrawString(addr, ">");
    1c42:	62 e6       	ldi	r22, 0x62	; 98
    1c44:	71 e4       	ldi	r23, 0x41	; 65
    1c46:	87 e2       	ldi	r24, 0x27	; 39
    1c48:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
						HD44780_PCF8574_PositionXY(addr, 13,1);
    1c4c:	41 e0       	ldi	r20, 0x01	; 1
    1c4e:	6d e0       	ldi	r22, 0x0D	; 13
    1c50:	87 e2       	ldi	r24, 0x27	; 39
    1c52:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1c56:	c9 c1       	rjmp	.+914    	; 0x1fea <Menu_handler+0xb92>
					}
				}
				else if (indexselected==4){
    1c58:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1c5c:	84 30       	cpi	r24, 0x04	; 4
    1c5e:	21 f5       	brne	.+72     	; 0x1ca8 <Menu_handler+0x850>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1c60:	42 e0       	ldi	r20, 0x02	; 2
    1c62:	60 e0       	ldi	r22, 0x00	; 0
    1c64:	87 e2       	ldi	r24, 0x27	; 39
    1c66:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1c6a:	62 e6       	ldi	r22, 0x62	; 98
    1c6c:	71 e4       	ldi	r23, 0x41	; 65
    1c6e:	87 e2       	ldi	r24, 0x27	; 39
    1c70:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1c74:	42 e0       	ldi	r20, 0x02	; 2
    1c76:	60 e0       	ldi	r22, 0x00	; 0
    1c78:	87 e2       	ldi	r24, 0x27	; 39
    1c7a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					if (adjustmode==1){
    1c7e:	80 91 7f 41 	lds	r24, 0x417F	; 0x80417f <adjustmode>
    1c82:	81 30       	cpi	r24, 0x01	; 1
    1c84:	09 f0       	breq	.+2      	; 0x1c88 <Menu_handler+0x830>
    1c86:	b1 c1       	rjmp	.+866    	; 0x1fea <Menu_handler+0xb92>
						HD44780_PCF8574_PositionXY(addr, 13,2);
    1c88:	42 e0       	ldi	r20, 0x02	; 2
    1c8a:	6d e0       	ldi	r22, 0x0D	; 13
    1c8c:	87 e2       	ldi	r24, 0x27	; 39
    1c8e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
						HD44780_PCF8574_DrawString(addr, ">");
    1c92:	62 e6       	ldi	r22, 0x62	; 98
    1c94:	71 e4       	ldi	r23, 0x41	; 65
    1c96:	87 e2       	ldi	r24, 0x27	; 39
    1c98:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
						HD44780_PCF8574_PositionXY(addr, 13,2);
    1c9c:	42 e0       	ldi	r20, 0x02	; 2
    1c9e:	6d e0       	ldi	r22, 0x0D	; 13
    1ca0:	87 e2       	ldi	r24, 0x27	; 39
    1ca2:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1ca6:	a1 c1       	rjmp	.+834    	; 0x1fea <Menu_handler+0xb92>
					}
				}
				else if (indexselected==5){
    1ca8:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1cac:	85 30       	cpi	r24, 0x05	; 5
    1cae:	09 f0       	breq	.+2      	; 0x1cb2 <Menu_handler+0x85a>
    1cb0:	9c c1       	rjmp	.+824    	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1cb2:	43 e0       	ldi	r20, 0x03	; 3
    1cb4:	60 e0       	ldi	r22, 0x00	; 0
    1cb6:	87 e2       	ldi	r24, 0x27	; 39
    1cb8:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1cbc:	62 e6       	ldi	r22, 0x62	; 98
    1cbe:	71 e4       	ldi	r23, 0x41	; 65
    1cc0:	87 e2       	ldi	r24, 0x27	; 39
    1cc2:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1cc6:	43 e0       	ldi	r20, 0x03	; 3
    1cc8:	60 e0       	ldi	r22, 0x00	; 0
    1cca:	87 e2       	ldi	r24, 0x27	; 39
    1ccc:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1cd0:	8c c1       	rjmp	.+792    	; 0x1fea <Menu_handler+0xb92>
				}
		}
		
		
	}
		else if (menuselected==3){
    1cd2:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
    1cd6:	83 30       	cpi	r24, 0x03	; 3
    1cd8:	09 f0       	breq	.+2      	; 0x1cdc <Menu_handler+0x884>
    1cda:	52 c1       	rjmp	.+676    	; 0x1f80 <Menu_handler+0xb28>
			if (show_0_3==1){	
    1cdc:	80 91 30 41 	lds	r24, 0x4130	; 0x804130 <show_0_3>
    1ce0:	81 30       	cpi	r24, 0x01	; 1
    1ce2:	09 f0       	breq	.+2      	; 0x1ce6 <Menu_handler+0x88e>
    1ce4:	a9 c0       	rjmp	.+338    	; 0x1e38 <Menu_handler+0x9e0>
				HD44780_PCF8574_PositionXY(addr, 1,0);
    1ce6:	40 e0       	ldi	r20, 0x00	; 0
    1ce8:	61 e0       	ldi	r22, 0x01	; 1
    1cea:	87 e2       	ldi	r24, 0x27	; 39
    1cec:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex0);
    1cf0:	64 eb       	ldi	r22, 0xB4	; 180
    1cf2:	70 e4       	ldi	r23, 0x40	; 64
    1cf4:	87 e2       	ldi	r24, 0x27	; 39
    1cf6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 1,1);
    1cfa:	41 e0       	ldi	r20, 0x01	; 1
    1cfc:	61 e0       	ldi	r22, 0x01	; 1
    1cfe:	87 e2       	ldi	r24, 0x27	; 39
    1d00:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex1);
    1d04:	68 ea       	ldi	r22, 0xA8	; 168
    1d06:	70 e4       	ldi	r23, 0x40	; 64
    1d08:	87 e2       	ldi	r24, 0x27	; 39
    1d0a:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 1,2);
    1d0e:	42 e0       	ldi	r20, 0x02	; 2
    1d10:	61 e0       	ldi	r22, 0x01	; 1
    1d12:	87 e2       	ldi	r24, 0x27	; 39
    1d14:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex2);
    1d18:	6e e9       	ldi	r22, 0x9E	; 158
    1d1a:	70 e4       	ldi	r23, 0x40	; 64
    1d1c:	87 e2       	ldi	r24, 0x27	; 39
    1d1e:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 1,3);
    1d22:	43 e0       	ldi	r20, 0x03	; 3
    1d24:	61 e0       	ldi	r22, 0x01	; 1
    1d26:	87 e2       	ldi	r24, 0x27	; 39
    1d28:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex3);
    1d2c:	63 e9       	ldi	r22, 0x93	; 147
    1d2e:	70 e4       	ldi	r23, 0x40	; 64
    1d30:	87 e2       	ldi	r24, 0x27	; 39
    1d32:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 14,0);
    1d36:	40 e0       	ldi	r20, 0x00	; 0
    1d38:	6e e0       	ldi	r22, 0x0E	; 14
    1d3a:	87 e2       	ldi	r24, 0x27	; 39
    1d3c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex0status);
    1d40:	60 91 83 40 	lds	r22, 0x4083	; 0x804083 <iomenuindex0status>
    1d44:	70 91 84 40 	lds	r23, 0x4084	; 0x804084 <iomenuindex0status+0x1>
    1d48:	87 e2       	ldi	r24, 0x27	; 39
    1d4a:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 14,1);
    1d4e:	41 e0       	ldi	r20, 0x01	; 1
    1d50:	6e e0       	ldi	r22, 0x0E	; 14
    1d52:	87 e2       	ldi	r24, 0x27	; 39
    1d54:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex1status);
    1d58:	60 91 81 40 	lds	r22, 0x4081	; 0x804081 <iomenuindex1status>
    1d5c:	70 91 82 40 	lds	r23, 0x4082	; 0x804082 <iomenuindex1status+0x1>
    1d60:	87 e2       	ldi	r24, 0x27	; 39
    1d62:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 14,2);
    1d66:	42 e0       	ldi	r20, 0x02	; 2
    1d68:	6e e0       	ldi	r22, 0x0E	; 14
    1d6a:	87 e2       	ldi	r24, 0x27	; 39
    1d6c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex2status);
    1d70:	60 91 7f 40 	lds	r22, 0x407F	; 0x80407f <iomenuindex2status>
    1d74:	70 91 80 40 	lds	r23, 0x4080	; 0x804080 <iomenuindex2status+0x1>
    1d78:	87 e2       	ldi	r24, 0x27	; 39
    1d7a:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 14,3);
    1d7e:	43 e0       	ldi	r20, 0x03	; 3
    1d80:	6e e0       	ldi	r22, 0x0E	; 14
    1d82:	87 e2       	ldi	r24, 0x27	; 39
    1d84:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex3status);
    1d88:	60 91 7d 40 	lds	r22, 0x407D	; 0x80407d <iomenuindex3status>
    1d8c:	70 91 7e 40 	lds	r23, 0x407E	; 0x80407e <iomenuindex3status+0x1>
    1d90:	87 e2       	ldi	r24, 0x27	; 39
    1d92:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			
				if (indexselected==0){
    1d96:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1d9a:	81 11       	cpse	r24, r1
    1d9c:	10 c0       	rjmp	.+32     	; 0x1dbe <Menu_handler+0x966>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    1d9e:	40 e0       	ldi	r20, 0x00	; 0
    1da0:	60 e0       	ldi	r22, 0x00	; 0
    1da2:	87 e2       	ldi	r24, 0x27	; 39
    1da4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1da8:	62 e6       	ldi	r22, 0x62	; 98
    1daa:	71 e4       	ldi	r23, 0x41	; 65
    1dac:	87 e2       	ldi	r24, 0x27	; 39
    1dae:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    1db2:	40 e0       	ldi	r20, 0x00	; 0
    1db4:	60 e0       	ldi	r22, 0x00	; 0
    1db6:	87 e2       	ldi	r24, 0x27	; 39
    1db8:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1dbc:	16 c1       	rjmp	.+556    	; 0x1fea <Menu_handler+0xb92>
				}
				else if (indexselected==1){
    1dbe:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1dc2:	81 30       	cpi	r24, 0x01	; 1
    1dc4:	81 f4       	brne	.+32     	; 0x1de6 <Menu_handler+0x98e>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1dc6:	41 e0       	ldi	r20, 0x01	; 1
    1dc8:	60 e0       	ldi	r22, 0x00	; 0
    1dca:	87 e2       	ldi	r24, 0x27	; 39
    1dcc:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1dd0:	62 e6       	ldi	r22, 0x62	; 98
    1dd2:	71 e4       	ldi	r23, 0x41	; 65
    1dd4:	87 e2       	ldi	r24, 0x27	; 39
    1dd6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1dda:	41 e0       	ldi	r20, 0x01	; 1
    1ddc:	60 e0       	ldi	r22, 0x00	; 0
    1dde:	87 e2       	ldi	r24, 0x27	; 39
    1de0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1de4:	02 c1       	rjmp	.+516    	; 0x1fea <Menu_handler+0xb92>
				}
				else if (indexselected==2){
    1de6:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1dea:	82 30       	cpi	r24, 0x02	; 2
    1dec:	81 f4       	brne	.+32     	; 0x1e0e <Menu_handler+0x9b6>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1dee:	42 e0       	ldi	r20, 0x02	; 2
    1df0:	60 e0       	ldi	r22, 0x00	; 0
    1df2:	87 e2       	ldi	r24, 0x27	; 39
    1df4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1df8:	62 e6       	ldi	r22, 0x62	; 98
    1dfa:	71 e4       	ldi	r23, 0x41	; 65
    1dfc:	87 e2       	ldi	r24, 0x27	; 39
    1dfe:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1e02:	42 e0       	ldi	r20, 0x02	; 2
    1e04:	60 e0       	ldi	r22, 0x00	; 0
    1e06:	87 e2       	ldi	r24, 0x27	; 39
    1e08:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1e0c:	ee c0       	rjmp	.+476    	; 0x1fea <Menu_handler+0xb92>
				}
				else if (indexselected==3){
    1e0e:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1e12:	83 30       	cpi	r24, 0x03	; 3
    1e14:	09 f0       	breq	.+2      	; 0x1e18 <Menu_handler+0x9c0>
    1e16:	e9 c0       	rjmp	.+466    	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1e18:	43 e0       	ldi	r20, 0x03	; 3
    1e1a:	60 e0       	ldi	r22, 0x00	; 0
    1e1c:	87 e2       	ldi	r24, 0x27	; 39
    1e1e:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1e22:	62 e6       	ldi	r22, 0x62	; 98
    1e24:	71 e4       	ldi	r23, 0x41	; 65
    1e26:	87 e2       	ldi	r24, 0x27	; 39
    1e28:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1e2c:	43 e0       	ldi	r20, 0x03	; 3
    1e2e:	60 e0       	ldi	r22, 0x00	; 0
    1e30:	87 e2       	ldi	r24, 0x27	; 39
    1e32:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1e36:	d9 c0       	rjmp	.+434    	; 0x1fea <Menu_handler+0xb92>
				}
			}
			else if(show_1_4==1){
    1e38:	80 91 83 41 	lds	r24, 0x4183	; 0x804183 <show_1_4>
    1e3c:	81 30       	cpi	r24, 0x01	; 1
    1e3e:	09 f0       	breq	.+2      	; 0x1e42 <Menu_handler+0x9ea>
    1e40:	d4 c0       	rjmp	.+424    	; 0x1fea <Menu_handler+0xb92>
				HD44780_PCF8574_PositionXY(addr, 1,0);
    1e42:	40 e0       	ldi	r20, 0x00	; 0
    1e44:	61 e0       	ldi	r22, 0x01	; 1
    1e46:	87 e2       	ldi	r24, 0x27	; 39
    1e48:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex1);
    1e4c:	68 ea       	ldi	r22, 0xA8	; 168
    1e4e:	70 e4       	ldi	r23, 0x40	; 64
    1e50:	87 e2       	ldi	r24, 0x27	; 39
    1e52:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 1,1);
    1e56:	41 e0       	ldi	r20, 0x01	; 1
    1e58:	61 e0       	ldi	r22, 0x01	; 1
    1e5a:	87 e2       	ldi	r24, 0x27	; 39
    1e5c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex2);
    1e60:	6e e9       	ldi	r22, 0x9E	; 158
    1e62:	70 e4       	ldi	r23, 0x40	; 64
    1e64:	87 e2       	ldi	r24, 0x27	; 39
    1e66:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 1,2);
    1e6a:	42 e0       	ldi	r20, 0x02	; 2
    1e6c:	61 e0       	ldi	r22, 0x01	; 1
    1e6e:	87 e2       	ldi	r24, 0x27	; 39
    1e70:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex3);
    1e74:	63 e9       	ldi	r22, 0x93	; 147
    1e76:	70 e4       	ldi	r23, 0x40	; 64
    1e78:	87 e2       	ldi	r24, 0x27	; 39
    1e7a:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 1,3);
    1e7e:	43 e0       	ldi	r20, 0x03	; 3
    1e80:	61 e0       	ldi	r22, 0x01	; 1
    1e82:	87 e2       	ldi	r24, 0x27	; 39
    1e84:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex4);
    1e88:	60 91 91 40 	lds	r22, 0x4091	; 0x804091 <iomenuindex4>
    1e8c:	70 91 92 40 	lds	r23, 0x4092	; 0x804092 <iomenuindex4+0x1>
    1e90:	87 e2       	ldi	r24, 0x27	; 39
    1e92:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 14,0);
    1e96:	40 e0       	ldi	r20, 0x00	; 0
    1e98:	6e e0       	ldi	r22, 0x0E	; 14
    1e9a:	87 e2       	ldi	r24, 0x27	; 39
    1e9c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex1status);
    1ea0:	60 91 81 40 	lds	r22, 0x4081	; 0x804081 <iomenuindex1status>
    1ea4:	70 91 82 40 	lds	r23, 0x4082	; 0x804082 <iomenuindex1status+0x1>
    1ea8:	87 e2       	ldi	r24, 0x27	; 39
    1eaa:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 14,1);
    1eae:	41 e0       	ldi	r20, 0x01	; 1
    1eb0:	6e e0       	ldi	r22, 0x0E	; 14
    1eb2:	87 e2       	ldi	r24, 0x27	; 39
    1eb4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex2status);
    1eb8:	60 91 7f 40 	lds	r22, 0x407F	; 0x80407f <iomenuindex2status>
    1ebc:	70 91 80 40 	lds	r23, 0x4080	; 0x804080 <iomenuindex2status+0x1>
    1ec0:	87 e2       	ldi	r24, 0x27	; 39
    1ec2:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 14,2);
    1ec6:	42 e0       	ldi	r20, 0x02	; 2
    1ec8:	6e e0       	ldi	r22, 0x0E	; 14
    1eca:	87 e2       	ldi	r24, 0x27	; 39
    1ecc:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
				HD44780_PCF8574_DrawString(addr, iomenuindex3status);			
    1ed0:	60 91 7d 40 	lds	r22, 0x407D	; 0x80407d <iomenuindex3status>
    1ed4:	70 91 7e 40 	lds	r23, 0x407E	; 0x80407e <iomenuindex3status+0x1>
    1ed8:	87 e2       	ldi	r24, 0x27	; 39
    1eda:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			
				if (indexselected==1){
    1ede:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1ee2:	81 30       	cpi	r24, 0x01	; 1
    1ee4:	81 f4       	brne	.+32     	; 0x1f06 <Menu_handler+0xaae>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    1ee6:	40 e0       	ldi	r20, 0x00	; 0
    1ee8:	60 e0       	ldi	r22, 0x00	; 0
    1eea:	87 e2       	ldi	r24, 0x27	; 39
    1eec:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1ef0:	62 e6       	ldi	r22, 0x62	; 98
    1ef2:	71 e4       	ldi	r23, 0x41	; 65
    1ef4:	87 e2       	ldi	r24, 0x27	; 39
    1ef6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,0);
    1efa:	40 e0       	ldi	r20, 0x00	; 0
    1efc:	60 e0       	ldi	r22, 0x00	; 0
    1efe:	87 e2       	ldi	r24, 0x27	; 39
    1f00:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1f04:	72 c0       	rjmp	.+228    	; 0x1fea <Menu_handler+0xb92>
				}
				else if (indexselected==2){
    1f06:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1f0a:	82 30       	cpi	r24, 0x02	; 2
    1f0c:	81 f4       	brne	.+32     	; 0x1f2e <Menu_handler+0xad6>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1f0e:	41 e0       	ldi	r20, 0x01	; 1
    1f10:	60 e0       	ldi	r22, 0x00	; 0
    1f12:	87 e2       	ldi	r24, 0x27	; 39
    1f14:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1f18:	62 e6       	ldi	r22, 0x62	; 98
    1f1a:	71 e4       	ldi	r23, 0x41	; 65
    1f1c:	87 e2       	ldi	r24, 0x27	; 39
    1f1e:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,1);
    1f22:	41 e0       	ldi	r20, 0x01	; 1
    1f24:	60 e0       	ldi	r22, 0x00	; 0
    1f26:	87 e2       	ldi	r24, 0x27	; 39
    1f28:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1f2c:	5e c0       	rjmp	.+188    	; 0x1fea <Menu_handler+0xb92>
				}
				else if (indexselected==3){
    1f2e:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1f32:	83 30       	cpi	r24, 0x03	; 3
    1f34:	81 f4       	brne	.+32     	; 0x1f56 <Menu_handler+0xafe>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1f36:	42 e0       	ldi	r20, 0x02	; 2
    1f38:	60 e0       	ldi	r22, 0x00	; 0
    1f3a:	87 e2       	ldi	r24, 0x27	; 39
    1f3c:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1f40:	62 e6       	ldi	r22, 0x62	; 98
    1f42:	71 e4       	ldi	r23, 0x41	; 65
    1f44:	87 e2       	ldi	r24, 0x27	; 39
    1f46:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,2);
    1f4a:	42 e0       	ldi	r20, 0x02	; 2
    1f4c:	60 e0       	ldi	r22, 0x00	; 0
    1f4e:	87 e2       	ldi	r24, 0x27	; 39
    1f50:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1f54:	4a c0       	rjmp	.+148    	; 0x1fea <Menu_handler+0xb92>
				}
				else if (indexselected==4){
    1f56:	80 91 81 41 	lds	r24, 0x4181	; 0x804181 <indexselected>
    1f5a:	84 30       	cpi	r24, 0x04	; 4
    1f5c:	09 f0       	breq	.+2      	; 0x1f60 <Menu_handler+0xb08>
    1f5e:	45 c0       	rjmp	.+138    	; 0x1fea <Menu_handler+0xb92>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1f60:	43 e0       	ldi	r20, 0x03	; 3
    1f62:	60 e0       	ldi	r22, 0x00	; 0
    1f64:	87 e2       	ldi	r24, 0x27	; 39
    1f66:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
					HD44780_PCF8574_DrawString(addr, ">");
    1f6a:	62 e6       	ldi	r22, 0x62	; 98
    1f6c:	71 e4       	ldi	r23, 0x41	; 65
    1f6e:	87 e2       	ldi	r24, 0x27	; 39
    1f70:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
					HD44780_PCF8574_PositionXY(addr, 0,3);
    1f74:	43 e0       	ldi	r20, 0x03	; 3
    1f76:	60 e0       	ldi	r22, 0x00	; 0
    1f78:	87 e2       	ldi	r24, 0x27	; 39
    1f7a:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
    1f7e:	35 c0       	rjmp	.+106    	; 0x1fea <Menu_handler+0xb92>
				}
			}
		
		}
		else if (menuselected==4){//generatormenu
    1f80:	80 91 1a 40 	lds	r24, 0x401A	; 0x80401a <menuselected>
    1f84:	84 30       	cpi	r24, 0x04	; 4
    1f86:	89 f5       	brne	.+98     	; 0x1fea <Menu_handler+0xb92>
			itoa(adjustgenerator,generatorindex2status,10);
    1f88:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
    1f8c:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
    1f90:	4a e0       	ldi	r20, 0x0A	; 10
    1f92:	6b e1       	ldi	r22, 0x1B	; 27
    1f94:	70 e4       	ldi	r23, 0x40	; 64
    1f96:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
			HD44780_PCF8574_PositionXY(addr, 1,0);
    1f9a:	40 e0       	ldi	r20, 0x00	; 0
    1f9c:	61 e0       	ldi	r22, 0x01	; 1
    1f9e:	87 e2       	ldi	r24, 0x27	; 39
    1fa0:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, generatorindex0);
    1fa4:	6e e3       	ldi	r22, 0x3E	; 62
    1fa6:	70 e4       	ldi	r23, 0x40	; 64
    1fa8:	87 e2       	ldi	r24, 0x27	; 39
    1faa:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,1);
    1fae:	41 e0       	ldi	r20, 0x01	; 1
    1fb0:	61 e0       	ldi	r22, 0x01	; 1
    1fb2:	87 e2       	ldi	r24, 0x27	; 39
    1fb4:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, generatorindex1);
    1fb8:	66 e3       	ldi	r22, 0x36	; 54
    1fba:	70 e4       	ldi	r23, 0x40	; 64
    1fbc:	87 e2       	ldi	r24, 0x27	; 39
    1fbe:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,2);
    1fc2:	42 e0       	ldi	r20, 0x02	; 2
    1fc4:	61 e0       	ldi	r22, 0x01	; 1
    1fc6:	87 e2       	ldi	r24, 0x27	; 39
    1fc8:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, generatorindex2);
    1fcc:	61 e3       	ldi	r22, 0x31	; 49
    1fce:	70 e4       	ldi	r23, 0x40	; 64
    1fd0:	87 e2       	ldi	r24, 0x27	; 39
    1fd2:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
			HD44780_PCF8574_PositionXY(addr, 1,3);
    1fd6:	43 e0       	ldi	r20, 0x03	; 3
    1fd8:	61 e0       	ldi	r22, 0x01	; 1
    1fda:	87 e2       	ldi	r24, 0x27	; 39
    1fdc:	0e 94 76 10 	call	0x20ec	; 0x20ec <HD44780_PCF8574_PositionXY>
			HD44780_PCF8574_DrawString(addr, generatorindex3);/*
    1fe0:	6a e2       	ldi	r22, 0x2A	; 42
    1fe2:	70 e4       	ldi	r23, 0x40	; 64
    1fe4:	87 e2       	ldi	r24, 0x27	; 39
    1fe6:	0e 94 aa 10 	call	0x2154	; 0x2154 <HD44780_PCF8574_DrawString>
				HD44780_PCF8574_PositionXY(addr, 13,2);
			}*/
		
		}
	}
	Menu_update_infoscreen();
    1fea:	0e 94 3e 08 	call	0x107c	; 0x107c <Menu_update_infoscreen>
	Menu_update_generatorscreen();
    1fee:	0e 94 55 09 	call	0x12aa	; 0x12aa <Menu_update_generatorscreen>
    1ff2:	08 95       	ret

00001ff4 <HD44780_PCF8574_E_pulse>:
 * @return  void
 */
void HD44780_PCF8574_CursorOn (char addr)
{
  // send instruction - cursor on
  HD44780_PCF8574_SendInstruction(addr, HD44780_CURSOR_ON);
    1ff4:	cf 93       	push	r28
    1ff6:	c8 2f       	mov	r28, r24
    1ff8:	84 60       	ori	r24, 0x04	; 4
    1ffa:	0e 94 e7 10 	call	0x21ce	; 0x21ce <I2C_SendByte>
    1ffe:	00 00       	nop
    2000:	8c 2f       	mov	r24, r28
    2002:	8b 7f       	andi	r24, 0xFB	; 251
    2004:	0e 94 e7 10 	call	0x21ce	; 0x21ce <I2C_SendByte>
    2008:	00 00       	nop
    200a:	cf 91       	pop	r28
    200c:	08 95       	ret

0000200e <HD44780_PCF8574_Send_4bits_M4b_I>:
    200e:	cf 93       	push	r28
    2010:	c8 2f       	mov	r28, r24
    2012:	0e 94 e7 10 	call	0x21ce	; 0x21ce <I2C_SendByte>
    2016:	8c 2f       	mov	r24, r28
    2018:	0e 94 fa 0f 	call	0x1ff4	; 0x1ff4 <HD44780_PCF8574_E_pulse>
    201c:	cf 91       	pop	r28
    201e:	08 95       	ret

00002020 <HD44780_PCF8574_Send_8bits_M4b_I>:
    2020:	cf 93       	push	r28
    2022:	df 93       	push	r29
    2024:	d6 2f       	mov	r29, r22
    2026:	d0 7f       	andi	r29, 0xF0	; 240
    2028:	d4 2b       	or	r29, r20
    202a:	90 e1       	ldi	r25, 0x10	; 16
    202c:	69 9f       	mul	r22, r25
    202e:	b0 01       	movw	r22, r0
    2030:	11 24       	eor	r1, r1
    2032:	c4 2f       	mov	r28, r20
    2034:	c6 2b       	or	r28, r22
    2036:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <I2C_SlaveAddress>
    203a:	8d 2f       	mov	r24, r29
    203c:	0e 94 e7 10 	call	0x21ce	; 0x21ce <I2C_SendByte>
    2040:	8d 2f       	mov	r24, r29
    2042:	0e 94 fa 0f 	call	0x1ff4	; 0x1ff4 <HD44780_PCF8574_E_pulse>
    2046:	8c 2f       	mov	r24, r28
    2048:	0e 94 e7 10 	call	0x21ce	; 0x21ce <I2C_SendByte>
    204c:	8c 2f       	mov	r24, r28
    204e:	0e 94 fa 0f 	call	0x1ff4	; 0x1ff4 <HD44780_PCF8574_E_pulse>
    2052:	df 91       	pop	r29
    2054:	cf 91       	pop	r28
    2056:	08 95       	ret

00002058 <HD44780_PCF8574_SendInstruction>:
    2058:	48 e0       	ldi	r20, 0x08	; 8
    205a:	0e 94 10 10 	call	0x2020	; 0x2020 <HD44780_PCF8574_Send_8bits_M4b_I>
    205e:	83 ed       	ldi	r24, 0xD3	; 211
    2060:	90 e3       	ldi	r25, 0x30	; 48
    2062:	01 97       	sbiw	r24, 0x01	; 1
    2064:	f1 f7       	brne	.-4      	; 0x2062 <HD44780_PCF8574_SendInstruction+0xa>
    2066:	00 c0       	rjmp	.+0      	; 0x2068 <HD44780_PCF8574_SendInstruction+0x10>
    2068:	00 00       	nop
    206a:	08 95       	ret

0000206c <HD44780_PCF8574_Init>:
    206c:	cf 93       	push	r28
    206e:	c8 2f       	mov	r28, r24
    2070:	8f e9       	ldi	r24, 0x9F	; 159
    2072:	9f e0       	ldi	r25, 0x0F	; 15
    2074:	01 97       	sbiw	r24, 0x01	; 1
    2076:	f1 f7       	brne	.-4      	; 0x2074 <HD44780_PCF8574_Init+0x8>
    2078:	00 c0       	rjmp	.+0      	; 0x207a <HD44780_PCF8574_Init+0xe>
    207a:	00 00       	nop
    207c:	8c 2f       	mov	r24, r28
    207e:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <I2C_SlaveAddress>
    2082:	80 e3       	ldi	r24, 0x30	; 48
    2084:	0e 94 07 10 	call	0x200e	; 0x200e <HD44780_PCF8574_Send_4bits_M4b_I>
    2088:	81 ee       	ldi	r24, 0xE1	; 225
    208a:	94 e0       	ldi	r25, 0x04	; 4
    208c:	01 97       	sbiw	r24, 0x01	; 1
    208e:	f1 f7       	brne	.-4      	; 0x208c <HD44780_PCF8574_Init+0x20>
    2090:	00 c0       	rjmp	.+0      	; 0x2092 <HD44780_PCF8574_Init+0x26>
    2092:	00 00       	nop
    2094:	80 e3       	ldi	r24, 0x30	; 48
    2096:	0e 94 07 10 	call	0x200e	; 0x200e <HD44780_PCF8574_Send_4bits_M4b_I>
    209a:	94 e2       	ldi	r25, 0x24	; 36
    209c:	9a 95       	dec	r25
    209e:	f1 f7       	brne	.-4      	; 0x209c <HD44780_PCF8574_Init+0x30>
    20a0:	00 c0       	rjmp	.+0      	; 0x20a2 <HD44780_PCF8574_Init+0x36>
    20a2:	80 e3       	ldi	r24, 0x30	; 48
    20a4:	0e 94 07 10 	call	0x200e	; 0x200e <HD44780_PCF8574_Send_4bits_M4b_I>
    20a8:	80 e1       	ldi	r24, 0x10	; 16
    20aa:	8a 95       	dec	r24
    20ac:	f1 f7       	brne	.-4      	; 0x20aa <HD44780_PCF8574_Init+0x3e>
    20ae:	00 c0       	rjmp	.+0      	; 0x20b0 <HD44780_PCF8574_Init+0x44>
    20b0:	80 e2       	ldi	r24, 0x20	; 32
    20b2:	0e 94 07 10 	call	0x200e	; 0x200e <HD44780_PCF8574_Send_4bits_M4b_I>
    20b6:	90 e1       	ldi	r25, 0x10	; 16
    20b8:	9a 95       	dec	r25
    20ba:	f1 f7       	brne	.-4      	; 0x20b8 <HD44780_PCF8574_Init+0x4c>
    20bc:	00 c0       	rjmp	.+0      	; 0x20be <HD44780_PCF8574_Init+0x52>
    20be:	68 e2       	ldi	r22, 0x28	; 40
    20c0:	8c 2f       	mov	r24, r28
    20c2:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    20c6:	68 e0       	ldi	r22, 0x08	; 8
    20c8:	8c 2f       	mov	r24, r28
    20ca:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    20ce:	61 e0       	ldi	r22, 0x01	; 1
    20d0:	8c 2f       	mov	r24, r28
    20d2:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    20d6:	66 e0       	ldi	r22, 0x06	; 6
    20d8:	8c 2f       	mov	r24, r28
    20da:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    20de:	80 e0       	ldi	r24, 0x00	; 0
    20e0:	cf 91       	pop	r28
    20e2:	08 95       	ret

000020e4 <HD44780_PCF8574_SendData>:
    20e4:	49 e0       	ldi	r20, 0x09	; 9
    20e6:	0e 94 10 10 	call	0x2020	; 0x2020 <HD44780_PCF8574_Send_8bits_M4b_I>
    20ea:	08 95       	ret

000020ec <HD44780_PCF8574_PositionXY>:
    20ec:	65 31       	cpi	r22, 0x15	; 21
    20ee:	08 f5       	brcc	.+66     	; 0x2132 <HD44780_PCF8574_PositionXY+0x46>
    20f0:	45 30       	cpi	r20, 0x05	; 5
    20f2:	08 f5       	brcc	.+66     	; 0x2136 <HD44780_PCF8574_PositionXY+0x4a>
    20f4:	41 11       	cpse	r20, r1
    20f6:	05 c0       	rjmp	.+10     	; 0x2102 <HD44780_PCF8574_PositionXY+0x16>
    20f8:	60 68       	ori	r22, 0x80	; 128
    20fa:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    20fe:	80 e0       	ldi	r24, 0x00	; 0
    2100:	08 95       	ret
    2102:	41 30       	cpi	r20, 0x01	; 1
    2104:	31 f4       	brne	.+12     	; 0x2112 <HD44780_PCF8574_PositionXY+0x26>
    2106:	60 5c       	subi	r22, 0xC0	; 192
    2108:	60 68       	ori	r22, 0x80	; 128
    210a:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    210e:	80 e0       	ldi	r24, 0x00	; 0
    2110:	08 95       	ret
    2112:	42 30       	cpi	r20, 0x02	; 2
    2114:	31 f4       	brne	.+12     	; 0x2122 <HD44780_PCF8574_PositionXY+0x36>
    2116:	6c 56       	subi	r22, 0x6C	; 108
    2118:	60 68       	ori	r22, 0x80	; 128
    211a:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	08 95       	ret
    2122:	43 30       	cpi	r20, 0x03	; 3
    2124:	51 f4       	brne	.+20     	; 0x213a <HD44780_PCF8574_PositionXY+0x4e>
    2126:	6c 52       	subi	r22, 0x2C	; 44
    2128:	60 68       	ori	r22, 0x80	; 128
    212a:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    212e:	80 e0       	ldi	r24, 0x00	; 0
    2130:	08 95       	ret
    2132:	81 e0       	ldi	r24, 0x01	; 1
    2134:	08 95       	ret
    2136:	81 e0       	ldi	r24, 0x01	; 1
    2138:	08 95       	ret
    213a:	80 e0       	ldi	r24, 0x00	; 0
    213c:	08 95       	ret

0000213e <HD44780_PCF8574_DisplayClear>:
    213e:	61 e0       	ldi	r22, 0x01	; 1
    2140:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    2144:	08 95       	ret

00002146 <HD44780_PCF8574_CursorBlink>:
 * @return  void
 */
void HD44780_PCF8574_CursorBlink (char addr)
{
  // send instruction - Cursor blink
  HD44780_PCF8574_SendInstruction(addr, HD44780_CURSOR_BLINK);
    2146:	6f e0       	ldi	r22, 0x0F	; 15
    2148:	0e 94 2c 10 	call	0x2058	; 0x2058 <HD44780_PCF8574_SendInstruction>
    214c:	08 95       	ret

0000214e <HD44780_PCF8574_DrawChar>:
 * @return  void
 */
void HD44780_PCF8574_DrawChar (char addr, char character)
{
  // Draw character
  HD44780_PCF8574_SendData(addr, character);
    214e:	0e 94 72 10 	call	0x20e4	; 0x20e4 <HD44780_PCF8574_SendData>
    2152:	08 95       	ret

00002154 <HD44780_PCF8574_DrawString>:
 * @param   char *
 *
 * @return  void
 */
void HD44780_PCF8574_DrawString (char addr, char *str)
{
    2154:	ff 92       	push	r15
    2156:	0f 93       	push	r16
    2158:	1f 93       	push	r17
    215a:	cf 93       	push	r28
    215c:	df 93       	push	r29
    215e:	f8 2e       	mov	r15, r24
    2160:	8b 01       	movw	r16, r22
  unsigned short int i = 0;
    2162:	c0 e0       	ldi	r28, 0x00	; 0
    2164:	d0 e0       	ldi	r29, 0x00	; 0
  // loop through chars
  while (str[i] != '\0') {
    2166:	04 c0       	rjmp	.+8      	; 0x2170 <HD44780_PCF8574_DrawString+0x1c>
    // draw individual chars
    HD44780_PCF8574_DrawChar(addr, str[i++]);
    2168:	21 96       	adiw	r28, 0x01	; 1
    216a:	8f 2d       	mov	r24, r15
    216c:	0e 94 a7 10 	call	0x214e	; 0x214e <HD44780_PCF8574_DrawChar>
 */
void HD44780_PCF8574_DrawString (char addr, char *str)
{
  unsigned short int i = 0;
  // loop through chars
  while (str[i] != '\0') {
    2170:	f8 01       	movw	r30, r16
    2172:	ec 0f       	add	r30, r28
    2174:	fd 1f       	adc	r31, r29
    2176:	60 81       	ld	r22, Z
    2178:	61 11       	cpse	r22, r1
    217a:	f6 cf       	rjmp	.-20     	; 0x2168 <HD44780_PCF8574_DrawString+0x14>
    // draw individual chars
    HD44780_PCF8574_DrawChar(addr, str[i++]);
  }
}
    217c:	df 91       	pop	r29
    217e:	cf 91       	pop	r28
    2180:	1f 91       	pop	r17
    2182:	0f 91       	pop	r16
    2184:	ff 90       	pop	r15
    2186:	08 95       	ret

00002188 <i2c_0_WaitW>:
			}
		}
	}
	
	return retVal;
}
    2188:	80 e0       	ldi	r24, 0x00	; 0
    218a:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    218e:	90 7c       	andi	r25, 0xC0	; 192
    2190:	31 f0       	breq	.+12     	; 0x219e <i2c_0_WaitW+0x16>
    2192:	80 91 05 09 	lds	r24, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    2196:	84 fd       	sbrc	r24, 4
    2198:	07 c0       	rjmp	.+14     	; 0x21a8 <i2c_0_WaitW+0x20>
    219a:	81 e0       	ldi	r24, 0x01	; 1
    219c:	08 c0       	rjmp	.+16     	; 0x21ae <i2c_0_WaitW+0x26>
    219e:	90 91 05 09 	lds	r25, 0x0905	; 0x800905 <__TEXT_REGION_LENGTH__+0x7e0905>
    21a2:	9c 70       	andi	r25, 0x0C	; 12
    21a4:	19 f4       	brne	.+6      	; 0x21ac <i2c_0_WaitW+0x24>
    21a6:	03 c0       	rjmp	.+6      	; 0x21ae <i2c_0_WaitW+0x26>
    21a8:	82 e0       	ldi	r24, 0x02	; 2
    21aa:	01 c0       	rjmp	.+2      	; 0x21ae <i2c_0_WaitW+0x26>
    21ac:	84 e0       	ldi	r24, 0x04	; 4
    21ae:	88 23       	and	r24, r24
    21b0:	61 f3       	breq	.-40     	; 0x218a <i2c_0_WaitW+0x2>
    21b2:	08 95       	ret

000021b4 <I2C_0_init>:
    21b4:	e0 e0       	ldi	r30, 0x00	; 0
    21b6:	f9 e0       	ldi	r31, 0x09	; 9
    21b8:	8b e4       	ldi	r24, 0x4B	; 75
    21ba:	86 83       	std	Z+6, r24	; 0x06
    21bc:	82 e0       	ldi	r24, 0x02	; 2
    21be:	80 93 e5 05 	sts	0x05E5, r24	; 0x8005e5 <__TEXT_REGION_LENGTH__+0x7e05e5>
    21c2:	81 e0       	ldi	r24, 0x01	; 1
    21c4:	83 83       	std	Z+3, r24	; 0x03
    21c6:	17 82       	std	Z+7, r1	; 0x07
    21c8:	10 86       	std	Z+8, r1	; 0x08
    21ca:	85 83       	std	Z+5, r24	; 0x05
    21cc:	08 95       	ret

000021ce <I2C_SendByte>:

void I2C_SendByte(uint8_t data){
	uint8_t retVal = (uint8_t) - 1;

	// Sending only one byte of data directly
	TWI0.MDATA = data;
    21ce:	80 93 08 09 	sts	0x0908, r24	; 0x800908 <__TEXT_REGION_LENGTH__+0x7e0908>
	if(i2c_0_WaitW() == I2C_ACKED)
    21d2:	0e 94 c4 10 	call	0x2188	; 0x2188 <i2c_0_WaitW>
    21d6:	08 95       	ret

000021d8 <I2C_SlaveAddress>:
return retVal;
}

void I2C_SlaveAddress(uint8_t addr){
	int8_t retVal = (uint8_t) - 1;
	uint8_t shiftedAddress = addr << 1;
    21d8:	88 0f       	add	r24, r24
	TWI0.MADDR = shiftedAddress;
    21da:	80 93 07 09 	sts	0x0907, r24	; 0x800907 <__TEXT_REGION_LENGTH__+0x7e0907>
   // Wait for ACK from the slave device
   if(i2c_0_WaitW() == I2C_ACKED)
    21de:	0e 94 c4 10 	call	0x2188	; 0x2188 <i2c_0_WaitW>
    21e2:	08 95       	ret

000021e4 <main>:

		
uint8_t Menu_handler_counter=0;

int main(void)
{	Initialize_system();
    21e4:	0e 94 bc 03 	call	0x778	; 0x778 <Initialize_system>
    21e8:	2f ef       	ldi	r18, 0xFF	; 255
    21ea:	80 e7       	ldi	r24, 0x70	; 112
    21ec:	92 e0       	ldi	r25, 0x02	; 2
    21ee:	21 50       	subi	r18, 0x01	; 1
    21f0:	80 40       	sbci	r24, 0x00	; 0
    21f2:	90 40       	sbci	r25, 0x00	; 0
    21f4:	e1 f7       	brne	.-8      	; 0x21ee <main+0xa>
    21f6:	00 c0       	rjmp	.+0      	; 0x21f8 <main+0x14>
    21f8:	00 00       	nop
	_delay_ms(50);
	//USART3_transmitt_char_array(0, "All systems go\n", strlen("All systems go\n"));
	sei();	
    21fa:	78 94       	sei
	adjustgenerator=0;
    21fc:	10 92 77 41 	sts	0x4177, r1	; 0x804177 <adjustgenerator>
    2200:	10 92 78 41 	sts	0x4178, r1	; 0x804178 <adjustgenerator+0x1>
	
	while(1){	
		led_handler();		//set status leds
    2204:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <led_handler>
		button_handler();	//read if buttons have been pressed
    2208:	0e 94 de 00 	call	0x1bc	; 0x1bc <button_handler>
		message_handler_HMI();	//Handle messsages from other mcu if received.
    220c:	0e 94 48 02 	call	0x490	; 0x490 <message_handler_HMI>
		
		if (Menu_handler_counter==60){	//Make it so menu handler don't run too often
    2210:	80 91 84 41 	lds	r24, 0x4184	; 0x804184 <Menu_handler_counter>
    2214:	8c 33       	cpi	r24, 0x3C	; 60
    2216:	21 f4       	brne	.+8      	; 0x2220 <main+0x3c>
			Menu_handler_counter=0;
    2218:	10 92 84 41 	sts	0x4184, r1	; 0x804184 <Menu_handler_counter>
			Menu_handler();	//handles menu
    221c:	0e 94 2c 0a 	call	0x1458	; 0x1458 <Menu_handler>
		}
		Menu_handler_counter++;	
    2220:	80 91 84 41 	lds	r24, 0x4184	; 0x804184 <Menu_handler_counter>
    2224:	8f 5f       	subi	r24, 0xFF	; 255
    2226:	80 93 84 41 	sts	0x4184, r24	; 0x804184 <Menu_handler_counter>
		
		if(generatorADCenable==1 && generatorenable){	//if ADC control mode
    222a:	80 91 75 41 	lds	r24, 0x4175	; 0x804175 <generatorADCenable>
    222e:	81 30       	cpi	r24, 0x01	; 1
    2230:	c1 f4       	brne	.+48     	; 0x2262 <main+0x7e>
    2232:	80 91 76 41 	lds	r24, 0x4176	; 0x804176 <generatorenable>
    2236:	88 23       	and	r24, r24
    2238:	a1 f0       	breq	.+40     	; 0x2262 <main+0x7e>
			ADC0_start();
    223a:	0e 94 79 00 	call	0xf2	; 0xf2 <ADC0_start>
			uint16_t tmp = int2percentage(ADC0_read_value(1),4095);
    223e:	81 e0       	ldi	r24, 0x01	; 1
    2240:	0e 94 b4 00 	call	0x168	; 0x168 <ADC0_read_value>
    2244:	6f ef       	ldi	r22, 0xFF	; 255
    2246:	7f e0       	ldi	r23, 0x0F	; 15
    2248:	0e 94 91 03 	call	0x722	; 0x722 <int2percentage>
			update_variable(&adjustgenerator, tmp);
    224c:	bc 01       	movw	r22, r24
    224e:	87 e7       	ldi	r24, 0x77	; 119
    2250:	91 e4       	ldi	r25, 0x41	; 65
    2252:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
			GeneratorSetDutycycle(adjustgenerator);		
    2256:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
    225a:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
    225e:	0e 94 3e 01 	call	0x27c	; 0x27c <GeneratorSetDutycycle>
						
		}
		if(adjustgenerator_old != adjustgenerator && generatorenable){ //if variable changed
    2262:	20 91 06 40 	lds	r18, 0x4006	; 0x804006 <adjustgenerator_old>
    2266:	30 91 07 40 	lds	r19, 0x4007	; 0x804007 <adjustgenerator_old+0x1>
    226a:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
    226e:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
    2272:	28 17       	cp	r18, r24
    2274:	39 07       	cpc	r19, r25
    2276:	51 f0       	breq	.+20     	; 0x228c <main+0xa8>
    2278:	80 91 76 41 	lds	r24, 0x4176	; 0x804176 <generatorenable>
    227c:	88 23       	and	r24, r24
    227e:	31 f0       	breq	.+12     	; 0x228c <main+0xa8>
			GeneratorSetDutycycle(adjustgenerator);
    2280:	80 91 77 41 	lds	r24, 0x4177	; 0x804177 <adjustgenerator>
    2284:	90 91 78 41 	lds	r25, 0x4178	; 0x804178 <adjustgenerator+0x1>
    2288:	0e 94 3e 01 	call	0x27c	; 0x27c <GeneratorSetDutycycle>
		}		
		update_variable(&adjustgenerator_old, adjustgenerator);
    228c:	60 91 77 41 	lds	r22, 0x4177	; 0x804177 <adjustgenerator>
    2290:	70 91 78 41 	lds	r23, 0x4178	; 0x804178 <adjustgenerator+0x1>
    2294:	86 e0       	ldi	r24, 0x06	; 6
    2296:	90 e4       	ldi	r25, 0x40	; 64
    2298:	0e 94 41 02 	call	0x482	; 0x482 <update_variable>
		
		if (time2sendData==1){		//enough time has passed to send update to main mcu
    229c:	80 91 85 41 	lds	r24, 0x4185	; 0x804185 <time2sendData>
    22a0:	81 30       	cpi	r24, 0x01	; 1
    22a2:	09 f0       	breq	.+2      	; 0x22a6 <main+0xc2>
    22a4:	af cf       	rjmp	.-162    	; 0x2204 <main+0x20>
			SendStatus2otherMCU();
    22a6:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <SendStatus2otherMCU>
			time2sendData=0;
    22aa:	10 92 85 41 	sts	0x4185, r1	; 0x804185 <time2sendData>
    22ae:	aa cf       	rjmp	.-172    	; 0x2204 <main+0x20>

000022b0 <__vector_24>:
			
			
    }
}

ISR(PORTD_PORT_vect){	// Button interrupt service routine
    22b0:	1f 92       	push	r1
    22b2:	0f 92       	push	r0
    22b4:	0f b6       	in	r0, 0x3f	; 63
    22b6:	0f 92       	push	r0
    22b8:	11 24       	eor	r1, r1
    22ba:	8f 93       	push	r24
	// Check which pin triggered the interrupt	
	if (PORTD.INTFLAGS & PIN5_bm) {
    22bc:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
    22c0:	85 ff       	sbrs	r24, 5
    22c2:	07 c0       	rjmp	.+14     	; 0x22d2 <__vector_24+0x22>
		// Clear the interrupt flag
		buttondown = 1;
    22c4:	81 e0       	ldi	r24, 0x01	; 1
    22c6:	80 93 70 41 	sts	0x4170, r24	; 0x804170 <buttondown>
		PORTD.INTFLAGS = PIN5_bm;		
    22ca:	80 e2       	ldi	r24, 0x20	; 32
    22cc:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
    22d0:	15 c0       	rjmp	.+42     	; 0x22fc <__vector_24+0x4c>
	}
	else if (PORTD.INTFLAGS & PIN6_bm) {
    22d2:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
    22d6:	86 ff       	sbrs	r24, 6
    22d8:	07 c0       	rjmp	.+14     	; 0x22e8 <__vector_24+0x38>
		// Clear the interrupt flag
		buttonenter=1;		
    22da:	81 e0       	ldi	r24, 0x01	; 1
    22dc:	80 93 6e 41 	sts	0x416E, r24	; 0x80416e <buttonenter>
		PORTD.INTFLAGS = PIN6_bm;		
    22e0:	80 e4       	ldi	r24, 0x40	; 64
    22e2:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
    22e6:	0a c0       	rjmp	.+20     	; 0x22fc <__vector_24+0x4c>
	}
	else if (PORTD.INTFLAGS & PIN7_bm) {
    22e8:	80 91 69 04 	lds	r24, 0x0469	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
    22ec:	88 23       	and	r24, r24
    22ee:	34 f4       	brge	.+12     	; 0x22fc <__vector_24+0x4c>
		// Clear the interrupt flag
		buttonup = 1;
    22f0:	81 e0       	ldi	r24, 0x01	; 1
    22f2:	80 93 6f 41 	sts	0x416F, r24	; 0x80416f <buttonup>
		PORTD.INTFLAGS = PIN7_bm;		
    22f6:	80 e8       	ldi	r24, 0x80	; 128
    22f8:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <__TEXT_REGION_LENGTH__+0x7e0469>
	}	
}
    22fc:	8f 91       	pop	r24
    22fe:	0f 90       	pop	r0
    2300:	0f be       	out	0x3f, r0	; 63
    2302:	0f 90       	pop	r0
    2304:	1f 90       	pop	r1
    2306:	18 95       	reti

00002308 <TCA0_PWM_init>:
}
void TCA0_PWM_enable(void){
	TCA0.SINGLE.CTRLA |= TCA_SINGLE_ENABLE_bm;				
}
void TCA0_PWM_disable(void){
	TCA0.SINGLE.CTRLA &= ~TCA_SINGLE_ENABLE_bm;
    2308:	e0 e0       	ldi	r30, 0x00	; 0
    230a:	f4 e0       	ldi	r31, 0x04	; 4
    230c:	81 81       	ldd	r24, Z+1	; 0x01
    230e:	84 60       	ori	r24, 0x04	; 4
    2310:	81 83       	std	Z+1, r24	; 0x01
    2312:	10 92 e6 05 	sts	0x05E6, r1	; 0x8005e6 <__TEXT_REGION_LENGTH__+0x7e05e6>
    2316:	e0 e0       	ldi	r30, 0x00	; 0
    2318:	fa e0       	ldi	r31, 0x0A	; 10
    231a:	81 81       	ldd	r24, Z+1	; 0x01
    231c:	83 60       	ori	r24, 0x03	; 3
    231e:	81 83       	std	Z+1, r24	; 0x01
    2320:	80 e9       	ldi	r24, 0x90	; 144
    2322:	91 e0       	ldi	r25, 0x01	; 1
    2324:	86 a3       	std	Z+38, r24	; 0x26
    2326:	97 a3       	std	Z+39, r25	; 0x27
    2328:	84 a7       	std	Z+44, r24	; 0x2c
    232a:	95 a7       	std	Z+45, r25	; 0x2d
    232c:	10 82       	st	Z, r1
    232e:	80 81       	ld	r24, Z
    2330:	81 60       	ori	r24, 0x01	; 1
    2332:	80 83       	st	Z, r24
    2334:	08 95       	ret

00002336 <TCA0_PWM_set_duty>:
}
void TCA0_PWM_set_duty(uint16_t dutycycle){	
	TCA0.SINGLE.CMP2 = dutycycle;	
    2336:	80 93 2c 0a 	sts	0x0A2C, r24	; 0x800a2c <__TEXT_REGION_LENGTH__+0x7e0a2c>
    233a:	90 93 2d 0a 	sts	0x0A2D, r25	; 0x800a2d <__TEXT_REGION_LENGTH__+0x7e0a2d>
    233e:	08 95       	ret

00002340 <TCB0_init>:
volatile uint32_t time_counter;

void TCB0_init(void){
	
	
	TCB0.CTRLA = TCB_CLKSEL_DIV2_gc     // CLK_PER
    2340:	e0 e0       	ldi	r30, 0x00	; 0
    2342:	fb e0       	ldi	r31, 0x0B	; 11
    2344:	83 e0       	ldi	r24, 0x03	; 3
    2346:	80 83       	st	Z, r24
	| 0 << TCB_RUNSTDBY_bp // Run Standby: disabled
	| 0 << TCB_SYNCUPD_bp  // Synchronize Update: disabled
	| 0 << TCB_CASCADE_bp; // Cascade Two Timer/Counters: disabled

	// Set the period for the desired overflow time
	TCB0.CCMP = 29999;
    2348:	8f e2       	ldi	r24, 0x2F	; 47
    234a:	95 e7       	ldi	r25, 0x75	; 117
    234c:	84 87       	std	Z+12, r24	; 0x0c
    234e:	95 87       	std	Z+13, r25	; 0x0d
	
	TCB0.INTCTRL = 1 << TCB_CAPT_bp   // Capture or Timeout: enabled
    2350:	81 e0       	ldi	r24, 0x01	; 1
    2352:	85 83       	std	Z+5, r24	; 0x05
    2354:	08 95       	ret

00002356 <__vector_14>:
	| 0 << TCB_OVF_bp; // OverFlow Interrupt: disabled
}


ISR(TCB0_INT_vect) {	// ISR for TCB0
    2356:	1f 92       	push	r1
    2358:	0f 92       	push	r0
    235a:	0f b6       	in	r0, 0x3f	; 63
    235c:	0f 92       	push	r0
    235e:	11 24       	eor	r1, r1
    2360:	8f 93       	push	r24
    2362:	9f 93       	push	r25
    2364:	af 93       	push	r26
    2366:	bf 93       	push	r27
	time_counter++;
    2368:	80 91 ce 41 	lds	r24, 0x41CE	; 0x8041ce <time_counter>
    236c:	90 91 cf 41 	lds	r25, 0x41CF	; 0x8041cf <time_counter+0x1>
    2370:	a0 91 d0 41 	lds	r26, 0x41D0	; 0x8041d0 <time_counter+0x2>
    2374:	b0 91 d1 41 	lds	r27, 0x41D1	; 0x8041d1 <time_counter+0x3>
    2378:	01 96       	adiw	r24, 0x01	; 1
    237a:	a1 1d       	adc	r26, r1
    237c:	b1 1d       	adc	r27, r1
    237e:	80 93 ce 41 	sts	0x41CE, r24	; 0x8041ce <time_counter>
    2382:	90 93 cf 41 	sts	0x41CF, r25	; 0x8041cf <time_counter+0x1>
    2386:	a0 93 d0 41 	sts	0x41D0, r26	; 0x8041d0 <time_counter+0x2>
    238a:	b0 93 d1 41 	sts	0x41D1, r27	; 0x8041d1 <time_counter+0x3>
	if (time_counter==10){
    238e:	80 91 ce 41 	lds	r24, 0x41CE	; 0x8041ce <time_counter>
    2392:	90 91 cf 41 	lds	r25, 0x41CF	; 0x8041cf <time_counter+0x1>
    2396:	a0 91 d0 41 	lds	r26, 0x41D0	; 0x8041d0 <time_counter+0x2>
    239a:	b0 91 d1 41 	lds	r27, 0x41D1	; 0x8041d1 <time_counter+0x3>
    239e:	0a 97       	sbiw	r24, 0x0a	; 10
    23a0:	a1 05       	cpc	r26, r1
    23a2:	b1 05       	cpc	r27, r1
    23a4:	59 f4       	brne	.+22     	; 0x23bc <__vector_14+0x66>
		time_counter=0;
    23a6:	10 92 ce 41 	sts	0x41CE, r1	; 0x8041ce <time_counter>
    23aa:	10 92 cf 41 	sts	0x41CF, r1	; 0x8041cf <time_counter+0x1>
    23ae:	10 92 d0 41 	sts	0x41D0, r1	; 0x8041d0 <time_counter+0x2>
    23b2:	10 92 d1 41 	sts	0x41D1, r1	; 0x8041d1 <time_counter+0x3>
		time2sendData=1;
    23b6:	81 e0       	ldi	r24, 0x01	; 1
    23b8:	80 93 85 41 	sts	0x4185, r24	; 0x804185 <time2sendData>
	}
	
	TCB0.INTFLAGS = TCB_CAPT_bm; // Clear interrupt flag
    23bc:	81 e0       	ldi	r24, 0x01	; 1
    23be:	80 93 06 0b 	sts	0x0B06, r24	; 0x800b06 <__TEXT_REGION_LENGTH__+0x7e0b06>
    23c2:	bf 91       	pop	r27
    23c4:	af 91       	pop	r26
    23c6:	9f 91       	pop	r25
    23c8:	8f 91       	pop	r24
    23ca:	0f 90       	pop	r0
    23cc:	0f be       	out	0x3f, r0	; 63
    23ce:	0f 90       	pop	r0
    23d0:	1f 90       	pop	r1
    23d2:	18 95       	reti

000023d4 <USART1_init>:
/* transmitting*/
void USART1_transmitt_string(char string[]){
	for(uint8_t i = 0; i<strlen(string); i++){
		USART1_transmitt(string[i]);
	}	
}
    23d4:	e0 e2       	ldi	r30, 0x20	; 32
    23d6:	f8 e0       	ldi	r31, 0x08	; 8
    23d8:	86 e1       	ldi	r24, 0x16	; 22
    23da:	91 e0       	ldi	r25, 0x01	; 1
    23dc:	80 87       	std	Z+8, r24	; 0x08
    23de:	91 87       	std	Z+9, r25	; 0x09
    23e0:	86 81       	ldd	r24, Z+6	; 0x06
    23e2:	82 6c       	ori	r24, 0xC2	; 194
    23e4:	86 83       	std	Z+6, r24	; 0x06
    23e6:	a0 e4       	ldi	r26, 0x40	; 64
    23e8:	b4 e0       	ldi	r27, 0x04	; 4
    23ea:	8c 91       	ld	r24, X
    23ec:	81 60       	ori	r24, 0x01	; 1
    23ee:	8c 93       	st	X, r24
    23f0:	1d 96       	adiw	r26, 0x0d	; 13
    23f2:	8c 91       	ld	r24, X
    23f4:	1d 97       	sbiw	r26, 0x0d	; 13
    23f6:	82 60       	ori	r24, 0x02	; 2
    23f8:	1d 96       	adiw	r26, 0x0d	; 13
    23fa:	8c 93       	st	X, r24
    23fc:	85 81       	ldd	r24, Z+5	; 0x05
    23fe:	80 68       	ori	r24, 0x80	; 128
    2400:	85 83       	std	Z+5, r24	; 0x05
    2402:	88 e0       	ldi	r24, 0x08	; 8
    2404:	87 83       	std	Z+7, r24	; 0x07
    2406:	85 81       	ldd	r24, Z+5	; 0x05
    2408:	80 64       	ori	r24, 0x40	; 64
    240a:	85 83       	std	Z+5, r24	; 0x05
    240c:	83 e0       	ldi	r24, 0x03	; 3
    240e:	87 83       	std	Z+7, r24	; 0x07
    2410:	08 95       	ret

00002412 <USART1_transmitt>:
    2412:	e0 91 87 41 	lds	r30, 0x4187	; 0x804187 <USART1TX_buffer_write>
    2416:	f0 e0       	ldi	r31, 0x00	; 0
    2418:	ee 52       	subi	r30, 0x2E	; 46
    241a:	fe 4b       	sbci	r31, 0xBE	; 190
    241c:	80 83       	st	Z, r24
    241e:	80 91 87 41 	lds	r24, 0x4187	; 0x804187 <USART1TX_buffer_write>
    2422:	8f 5f       	subi	r24, 0xFF	; 255
    2424:	80 93 87 41 	sts	0x4187, r24	; 0x804187 <USART1TX_buffer_write>
    2428:	20 91 87 41 	lds	r18, 0x4187	; 0x804187 <USART1TX_buffer_write>
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	80 91 32 41 	lds	r24, 0x4132	; 0x804132 <USART1TX_buffer_size>
    2432:	90 e0       	ldi	r25, 0x00	; 0
    2434:	01 96       	adiw	r24, 0x01	; 1
    2436:	28 17       	cp	r18, r24
    2438:	39 07       	cpc	r19, r25
    243a:	11 f4       	brne	.+4      	; 0x2440 <USART1_transmitt+0x2e>
    243c:	10 92 87 41 	sts	0x4187, r1	; 0x804187 <USART1TX_buffer_write>
    2440:	20 91 24 08 	lds	r18, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
    2444:	25 ff       	sbrs	r18, 5
    2446:	15 c0       	rjmp	.+42     	; 0x2472 <USART1_transmitt+0x60>
    2448:	e0 91 86 41 	lds	r30, 0x4186	; 0x804186 <USART1TX_buffer_read>
    244c:	f0 e0       	ldi	r31, 0x00	; 0
    244e:	ee 52       	subi	r30, 0x2E	; 46
    2450:	fe 4b       	sbci	r31, 0xBE	; 190
    2452:	20 81       	ld	r18, Z
    2454:	20 93 22 08 	sts	0x0822, r18	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
    2458:	20 91 86 41 	lds	r18, 0x4186	; 0x804186 <USART1TX_buffer_read>
    245c:	2f 5f       	subi	r18, 0xFF	; 255
    245e:	20 93 86 41 	sts	0x4186, r18	; 0x804186 <USART1TX_buffer_read>
    2462:	20 91 86 41 	lds	r18, 0x4186	; 0x804186 <USART1TX_buffer_read>
    2466:	30 e0       	ldi	r19, 0x00	; 0
    2468:	82 17       	cp	r24, r18
    246a:	93 07       	cpc	r25, r19
    246c:	11 f4       	brne	.+4      	; 0x2472 <USART1_transmitt+0x60>
    246e:	10 92 86 41 	sts	0x4186, r1	; 0x804186 <USART1TX_buffer_read>
    2472:	80 e6       	ldi	r24, 0x60	; 96
    2474:	8a 95       	dec	r24
    2476:	f1 f7       	brne	.-4      	; 0x2474 <USART1_transmitt+0x62>
    2478:	08 95       	ret

0000247a <USART1_transmitt_char_array>:

void USART1_transmitt_char_array(uint8_t addEndLine,char string[], uint8_t length){
    247a:	ff 92       	push	r15
    247c:	0f 93       	push	r16
    247e:	1f 93       	push	r17
    2480:	cf 93       	push	r28
    2482:	df 93       	push	r29
    2484:	f8 2e       	mov	r15, r24
    2486:	8b 01       	movw	r16, r22
    2488:	d4 2f       	mov	r29, r20
	for(uint8_t i = 0; i<length; i++){
    248a:	c0 e0       	ldi	r28, 0x00	; 0
    248c:	07 c0       	rjmp	.+14     	; 0x249c <USART1_transmitt_char_array+0x22>
		USART1_transmitt(string[i]);
    248e:	f8 01       	movw	r30, r16
    2490:	ec 0f       	add	r30, r28
    2492:	f1 1d       	adc	r31, r1
    2494:	80 81       	ld	r24, Z
    2496:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
		USART1_transmitt(string[i]);
	}	
}

void USART1_transmitt_char_array(uint8_t addEndLine,char string[], uint8_t length){
	for(uint8_t i = 0; i<length; i++){
    249a:	cf 5f       	subi	r28, 0xFF	; 255
    249c:	cd 17       	cp	r28, r29
    249e:	b8 f3       	brcs	.-18     	; 0x248e <USART1_transmitt_char_array+0x14>
		USART1_transmitt(string[i]);
	}
	if(addEndLine){
    24a0:	ff 20       	and	r15, r15
    24a2:	19 f0       	breq	.+6      	; 0x24aa <USART1_transmitt_char_array+0x30>
		USART1_transmitt('\n');
    24a4:	8a e0       	ldi	r24, 0x0A	; 10
    24a6:	0e 94 09 12 	call	0x2412	; 0x2412 <USART1_transmitt>
	}
}
    24aa:	df 91       	pop	r29
    24ac:	cf 91       	pop	r28
    24ae:	1f 91       	pop	r17
    24b0:	0f 91       	pop	r16
    24b2:	ff 90       	pop	r15
    24b4:	08 95       	ret

000024b6 <USART1_transmit_int>:

void USART1_transmit_int(int num) {
    24b6:	0f 93       	push	r16
    24b8:	1f 93       	push	r17
    24ba:	cf 93       	push	r28
    24bc:	df 93       	push	r29
    24be:	cd b7       	in	r28, 0x3d	; 61
    24c0:	de b7       	in	r29, 0x3e	; 62
    24c2:	2a 97       	sbiw	r28, 0x0a	; 10
    24c4:	cd bf       	out	0x3d, r28	; 61
    24c6:	de bf       	out	0x3e, r29	; 62
    24c8:	4a e0       	ldi	r20, 0x0A	; 10
    24ca:	8e 01       	movw	r16, r28
    24cc:	0f 5f       	subi	r16, 0xFF	; 255
    24ce:	1f 4f       	sbci	r17, 0xFF	; 255
    24d0:	b8 01       	movw	r22, r16
    24d2:	0e 94 d9 14 	call	0x29b2	; 0x29b2 <__itoa_ncheck>
	char buffer[10]; //string for putting number in
	itoa(num, buffer, 10); // Convert integer to string
	USART1_transmitt_char_array(0, buffer, strlen(buffer));
    24d6:	f8 01       	movw	r30, r16
    24d8:	01 90       	ld	r0, Z+
    24da:	00 20       	and	r0, r0
    24dc:	e9 f7       	brne	.-6      	; 0x24d8 <USART1_transmit_int+0x22>
    24de:	31 97       	sbiw	r30, 0x01	; 1
    24e0:	af 01       	movw	r20, r30
    24e2:	40 1b       	sub	r20, r16
    24e4:	51 0b       	sbc	r21, r17
    24e6:	b8 01       	movw	r22, r16
    24e8:	80 e0       	ldi	r24, 0x00	; 0
    24ea:	0e 94 3d 12 	call	0x247a	; 0x247a <USART1_transmitt_char_array>
}
    24ee:	2a 96       	adiw	r28, 0x0a	; 10
    24f0:	cd bf       	out	0x3d, r28	; 61
    24f2:	de bf       	out	0x3e, r29	; 62
    24f4:	df 91       	pop	r29
    24f6:	cf 91       	pop	r28
    24f8:	1f 91       	pop	r17
    24fa:	0f 91       	pop	r16
    24fc:	08 95       	ret

000024fe <USART1buffer2message>:


/*   Handler for reading from buffer to make a message   */
void USART1buffer2message(){
	while (USART1RX_buffer_write != USART1RX_buffer_read && USART1message_available==0){	//If unread in buffer
    24fe:	29 c0       	rjmp	.+82     	; 0x2552 <USART1buffer2message+0x54>
		char c = USART1RX_buffer[USART1RX_buffer_read];	//Assign temp char
    2500:	e0 91 88 41 	lds	r30, 0x4188	; 0x804188 <USART1RX_buffer_read>
    2504:	f0 e0       	ldi	r31, 0x00	; 0
    2506:	ea 5c       	subi	r30, 0xCA	; 202
    2508:	fd 4b       	sbci	r31, 0xBD	; 189
    250a:	90 81       	ld	r25, Z
		USART1RX_buffer_read++;	//Increment read position
    250c:	80 91 88 41 	lds	r24, 0x4188	; 0x804188 <USART1RX_buffer_read>
    2510:	8f 5f       	subi	r24, 0xFF	; 255
    2512:	80 93 88 41 	sts	0x4188, r24	; 0x804188 <USART1RX_buffer_read>
		
		if (USART1RX_buffer_read==51)	{	//Reset read position at end of array
    2516:	80 91 88 41 	lds	r24, 0x4188	; 0x804188 <USART1RX_buffer_read>
    251a:	83 33       	cpi	r24, 0x33	; 51
    251c:	11 f4       	brne	.+4      	; 0x2522 <USART1buffer2message+0x24>
			USART1RX_buffer_read=0;
    251e:	10 92 88 41 	sts	0x4188, r1	; 0x804188 <USART1RX_buffer_read>
		}
		
		if (c == '<'){	//Recognize start of message
    2522:	9c 33       	cpi	r25, 0x3C	; 60
    2524:	29 f4       	brne	.+10     	; 0x2530 <USART1buffer2message+0x32>
			USART1marker_pos=0;	//Reset message position
    2526:	10 92 cd 41 	sts	0x41CD, r1	; 0x8041cd <USART1marker_pos>
			strcpy(USART1message,"");	//Delete previous message string
    252a:	10 92 9b 41 	sts	0x419B, r1	; 0x80419b <USART1message>
    252e:	11 c0       	rjmp	.+34     	; 0x2552 <USART1buffer2message+0x54>
		}
		else if (c == '>'){	//Recognize end of message
    2530:	9e 33       	cpi	r25, 0x3E	; 62
    2532:	21 f4       	brne	.+8      	; 0x253c <USART1buffer2message+0x3e>
			USART1message_available = 1;	//Set flag for available message
    2534:	81 e0       	ldi	r24, 0x01	; 1
    2536:	80 93 8a 41 	sts	0x418A, r24	; 0x80418a <USART1message_available>
    253a:	0b c0       	rjmp	.+22     	; 0x2552 <USART1buffer2message+0x54>
		}
		else{
			USART1message[USART1marker_pos]=c;	//Append to message string
    253c:	e0 91 cd 41 	lds	r30, 0x41CD	; 0x8041cd <USART1marker_pos>
    2540:	f0 e0       	ldi	r31, 0x00	; 0
    2542:	e5 56       	subi	r30, 0x65	; 101
    2544:	fe 4b       	sbci	r31, 0xBE	; 190
    2546:	90 83       	st	Z, r25
			USART1marker_pos++;	//Increment message position
    2548:	80 91 cd 41 	lds	r24, 0x41CD	; 0x8041cd <USART1marker_pos>
    254c:	8f 5f       	subi	r24, 0xFF	; 255
    254e:	80 93 cd 41 	sts	0x41CD, r24	; 0x8041cd <USART1marker_pos>
}


/*   Handler for reading from buffer to make a message   */
void USART1buffer2message(){
	while (USART1RX_buffer_write != USART1RX_buffer_read && USART1message_available==0){	//If unread in buffer
    2552:	90 91 89 41 	lds	r25, 0x4189	; 0x804189 <USART1RX_buffer_write>
    2556:	80 91 88 41 	lds	r24, 0x4188	; 0x804188 <USART1RX_buffer_read>
    255a:	98 17       	cp	r25, r24
    255c:	21 f0       	breq	.+8      	; 0x2566 <USART1buffer2message+0x68>
    255e:	80 91 8a 41 	lds	r24, 0x418A	; 0x80418a <USART1message_available>
    2562:	88 23       	and	r24, r24
    2564:	69 f2       	breq	.-102    	; 0x2500 <USART1buffer2message+0x2>
    2566:	08 95       	ret

00002568 <__vector_32>:
			
		}
	}
}

ISR(USART1_RXC_vect) {
    2568:	1f 92       	push	r1
    256a:	0f 92       	push	r0
    256c:	0f b6       	in	r0, 0x3f	; 63
    256e:	0f 92       	push	r0
    2570:	11 24       	eor	r1, r1
    2572:	0b b6       	in	r0, 0x3b	; 59
    2574:	0f 92       	push	r0
    2576:	8f 93       	push	r24
    2578:	ef 93       	push	r30
    257a:	ff 93       	push	r31
	char tmp=USART1.RXDATAL;
    257c:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7e0820>
	USART1RX_buffer[USART1RX_buffer_write]=tmp;
    2580:	e0 91 89 41 	lds	r30, 0x4189	; 0x804189 <USART1RX_buffer_write>
    2584:	f0 e0       	ldi	r31, 0x00	; 0
    2586:	ea 5c       	subi	r30, 0xCA	; 202
    2588:	fd 4b       	sbci	r31, 0xBD	; 189
    258a:	80 83       	st	Z, r24
	USART1RX_buffer_write++;
    258c:	80 91 89 41 	lds	r24, 0x4189	; 0x804189 <USART1RX_buffer_write>
    2590:	8f 5f       	subi	r24, 0xFF	; 255
    2592:	80 93 89 41 	sts	0x4189, r24	; 0x804189 <USART1RX_buffer_write>
	if (USART1RX_buffer_write==51)	{
    2596:	80 91 89 41 	lds	r24, 0x4189	; 0x804189 <USART1RX_buffer_write>
    259a:	83 33       	cpi	r24, 0x33	; 51
    259c:	11 f4       	brne	.+4      	; 0x25a2 <__vector_32+0x3a>
		USART1RX_buffer_write=0;
    259e:	10 92 89 41 	sts	0x4189, r1	; 0x804189 <USART1RX_buffer_write>
	}
}
    25a2:	ff 91       	pop	r31
    25a4:	ef 91       	pop	r30
    25a6:	8f 91       	pop	r24
    25a8:	0f 90       	pop	r0
    25aa:	0b be       	out	0x3b, r0	; 59
    25ac:	0f 90       	pop	r0
    25ae:	0f be       	out	0x3f, r0	; 63
    25b0:	0f 90       	pop	r0
    25b2:	1f 90       	pop	r1
    25b4:	18 95       	reti

000025b6 <__vector_34>:


ISR(USART1_TXC_vect){	//Usart transmitt interrupt service routine
    25b6:	1f 92       	push	r1
    25b8:	0f 92       	push	r0
    25ba:	0f b6       	in	r0, 0x3f	; 63
    25bc:	0f 92       	push	r0
    25be:	11 24       	eor	r1, r1
    25c0:	0b b6       	in	r0, 0x3b	; 59
    25c2:	0f 92       	push	r0
    25c4:	2f 93       	push	r18
    25c6:	3f 93       	push	r19
    25c8:	8f 93       	push	r24
    25ca:	9f 93       	push	r25
    25cc:	ef 93       	push	r30
    25ce:	ff 93       	push	r31
	if(USART1TX_buffer_read!=USART1TX_buffer_write){	//if there is not anything unread in buffer
    25d0:	90 91 86 41 	lds	r25, 0x4186	; 0x804186 <USART1TX_buffer_read>
    25d4:	80 91 87 41 	lds	r24, 0x4187	; 0x804187 <USART1TX_buffer_write>
    25d8:	98 17       	cp	r25, r24
    25da:	f9 f0       	breq	.+62     	; 0x261a <__vector_34+0x64>
		USART1.TXDATAL = USART1TX_buffer[USART1TX_buffer_read];	//Transmitt the next char
    25dc:	e0 91 86 41 	lds	r30, 0x4186	; 0x804186 <USART1TX_buffer_read>
    25e0:	f0 e0       	ldi	r31, 0x00	; 0
    25e2:	ee 52       	subi	r30, 0x2E	; 46
    25e4:	fe 4b       	sbci	r31, 0xBE	; 190
    25e6:	80 81       	ld	r24, Z
    25e8:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
		USART1TX_buffer_read++;//Increment read position
    25ec:	80 91 86 41 	lds	r24, 0x4186	; 0x804186 <USART1TX_buffer_read>
    25f0:	8f 5f       	subi	r24, 0xFF	; 255
    25f2:	80 93 86 41 	sts	0x4186, r24	; 0x804186 <USART1TX_buffer_read>
		if (USART1TX_buffer_read ==(USART1TX_buffer_size+1)){//Reset position at end of array
    25f6:	20 91 86 41 	lds	r18, 0x4186	; 0x804186 <USART1TX_buffer_read>
    25fa:	30 e0       	ldi	r19, 0x00	; 0
    25fc:	80 91 32 41 	lds	r24, 0x4132	; 0x804132 <USART1TX_buffer_size>
    2600:	90 e0       	ldi	r25, 0x00	; 0
    2602:	01 96       	adiw	r24, 0x01	; 1
    2604:	28 17       	cp	r18, r24
    2606:	39 07       	cpc	r19, r25
    2608:	11 f4       	brne	.+4      	; 0x260e <__vector_34+0x58>
			USART1TX_buffer_read=0;
    260a:	10 92 86 41 	sts	0x4186, r1	; 0x804186 <USART1TX_buffer_read>
		}
		USART1.STATUS |= USART_TXCIF_bm;	//reset interrupt flag
    260e:	e0 e2       	ldi	r30, 0x20	; 32
    2610:	f8 e0       	ldi	r31, 0x08	; 8
    2612:	84 81       	ldd	r24, Z+4	; 0x04
    2614:	80 64       	ori	r24, 0x40	; 64
    2616:	84 83       	std	Z+4, r24	; 0x04
    2618:	05 c0       	rjmp	.+10     	; 0x2624 <__vector_34+0x6e>
	}
	else// no problems
	USART1.STATUS |= USART_TXCIF_bm;	//reset interrupt flag
    261a:	e0 e2       	ldi	r30, 0x20	; 32
    261c:	f8 e0       	ldi	r31, 0x08	; 8
    261e:	84 81       	ldd	r24, Z+4	; 0x04
    2620:	80 64       	ori	r24, 0x40	; 64
    2622:	84 83       	std	Z+4, r24	; 0x04
}
    2624:	ff 91       	pop	r31
    2626:	ef 91       	pop	r30
    2628:	9f 91       	pop	r25
    262a:	8f 91       	pop	r24
    262c:	3f 91       	pop	r19
    262e:	2f 91       	pop	r18
    2630:	0f 90       	pop	r0
    2632:	0b be       	out	0x3b, r0	; 59
    2634:	0f 90       	pop	r0
    2636:	0f be       	out	0x3f, r0	; 63
    2638:	0f 90       	pop	r0
    263a:	1f 90       	pop	r1
    263c:	18 95       	reti

0000263e <__divsf3>:
    263e:	0e 94 33 13 	call	0x2666	; 0x2666 <__divsf3x>
    2642:	0c 94 14 14 	jmp	0x2828	; 0x2828 <__fp_round>
    2646:	0e 94 0d 14 	call	0x281a	; 0x281a <__fp_pscB>
    264a:	58 f0       	brcs	.+22     	; 0x2662 <__divsf3+0x24>
    264c:	0e 94 06 14 	call	0x280c	; 0x280c <__fp_pscA>
    2650:	40 f0       	brcs	.+16     	; 0x2662 <__divsf3+0x24>
    2652:	29 f4       	brne	.+10     	; 0x265e <__divsf3+0x20>
    2654:	5f 3f       	cpi	r21, 0xFF	; 255
    2656:	29 f0       	breq	.+10     	; 0x2662 <__divsf3+0x24>
    2658:	0c 94 fd 13 	jmp	0x27fa	; 0x27fa <__fp_inf>
    265c:	51 11       	cpse	r21, r1
    265e:	0c 94 48 14 	jmp	0x2890	; 0x2890 <__fp_szero>
    2662:	0c 94 03 14 	jmp	0x2806	; 0x2806 <__fp_nan>

00002666 <__divsf3x>:
    2666:	0e 94 25 14 	call	0x284a	; 0x284a <__fp_split3>
    266a:	68 f3       	brcs	.-38     	; 0x2646 <__divsf3+0x8>

0000266c <__divsf3_pse>:
    266c:	99 23       	and	r25, r25
    266e:	b1 f3       	breq	.-20     	; 0x265c <__divsf3+0x1e>
    2670:	55 23       	and	r21, r21
    2672:	91 f3       	breq	.-28     	; 0x2658 <__divsf3+0x1a>
    2674:	95 1b       	sub	r25, r21
    2676:	55 0b       	sbc	r21, r21
    2678:	bb 27       	eor	r27, r27
    267a:	aa 27       	eor	r26, r26
    267c:	62 17       	cp	r22, r18
    267e:	73 07       	cpc	r23, r19
    2680:	84 07       	cpc	r24, r20
    2682:	38 f0       	brcs	.+14     	; 0x2692 <__divsf3_pse+0x26>
    2684:	9f 5f       	subi	r25, 0xFF	; 255
    2686:	5f 4f       	sbci	r21, 0xFF	; 255
    2688:	22 0f       	add	r18, r18
    268a:	33 1f       	adc	r19, r19
    268c:	44 1f       	adc	r20, r20
    268e:	aa 1f       	adc	r26, r26
    2690:	a9 f3       	breq	.-22     	; 0x267c <__divsf3_pse+0x10>
    2692:	35 d0       	rcall	.+106    	; 0x26fe <__divsf3_pse+0x92>
    2694:	0e 2e       	mov	r0, r30
    2696:	3a f0       	brmi	.+14     	; 0x26a6 <__divsf3_pse+0x3a>
    2698:	e0 e8       	ldi	r30, 0x80	; 128
    269a:	32 d0       	rcall	.+100    	; 0x2700 <__divsf3_pse+0x94>
    269c:	91 50       	subi	r25, 0x01	; 1
    269e:	50 40       	sbci	r21, 0x00	; 0
    26a0:	e6 95       	lsr	r30
    26a2:	00 1c       	adc	r0, r0
    26a4:	ca f7       	brpl	.-14     	; 0x2698 <__divsf3_pse+0x2c>
    26a6:	2b d0       	rcall	.+86     	; 0x26fe <__divsf3_pse+0x92>
    26a8:	fe 2f       	mov	r31, r30
    26aa:	29 d0       	rcall	.+82     	; 0x26fe <__divsf3_pse+0x92>
    26ac:	66 0f       	add	r22, r22
    26ae:	77 1f       	adc	r23, r23
    26b0:	88 1f       	adc	r24, r24
    26b2:	bb 1f       	adc	r27, r27
    26b4:	26 17       	cp	r18, r22
    26b6:	37 07       	cpc	r19, r23
    26b8:	48 07       	cpc	r20, r24
    26ba:	ab 07       	cpc	r26, r27
    26bc:	b0 e8       	ldi	r27, 0x80	; 128
    26be:	09 f0       	breq	.+2      	; 0x26c2 <__divsf3_pse+0x56>
    26c0:	bb 0b       	sbc	r27, r27
    26c2:	80 2d       	mov	r24, r0
    26c4:	bf 01       	movw	r22, r30
    26c6:	ff 27       	eor	r31, r31
    26c8:	93 58       	subi	r25, 0x83	; 131
    26ca:	5f 4f       	sbci	r21, 0xFF	; 255
    26cc:	3a f0       	brmi	.+14     	; 0x26dc <__divsf3_pse+0x70>
    26ce:	9e 3f       	cpi	r25, 0xFE	; 254
    26d0:	51 05       	cpc	r21, r1
    26d2:	78 f0       	brcs	.+30     	; 0x26f2 <__divsf3_pse+0x86>
    26d4:	0c 94 fd 13 	jmp	0x27fa	; 0x27fa <__fp_inf>
    26d8:	0c 94 48 14 	jmp	0x2890	; 0x2890 <__fp_szero>
    26dc:	5f 3f       	cpi	r21, 0xFF	; 255
    26de:	e4 f3       	brlt	.-8      	; 0x26d8 <__divsf3_pse+0x6c>
    26e0:	98 3e       	cpi	r25, 0xE8	; 232
    26e2:	d4 f3       	brlt	.-12     	; 0x26d8 <__divsf3_pse+0x6c>
    26e4:	86 95       	lsr	r24
    26e6:	77 95       	ror	r23
    26e8:	67 95       	ror	r22
    26ea:	b7 95       	ror	r27
    26ec:	f7 95       	ror	r31
    26ee:	9f 5f       	subi	r25, 0xFF	; 255
    26f0:	c9 f7       	brne	.-14     	; 0x26e4 <__divsf3_pse+0x78>
    26f2:	88 0f       	add	r24, r24
    26f4:	91 1d       	adc	r25, r1
    26f6:	96 95       	lsr	r25
    26f8:	87 95       	ror	r24
    26fa:	97 f9       	bld	r25, 7
    26fc:	08 95       	ret
    26fe:	e1 e0       	ldi	r30, 0x01	; 1
    2700:	66 0f       	add	r22, r22
    2702:	77 1f       	adc	r23, r23
    2704:	88 1f       	adc	r24, r24
    2706:	bb 1f       	adc	r27, r27
    2708:	62 17       	cp	r22, r18
    270a:	73 07       	cpc	r23, r19
    270c:	84 07       	cpc	r24, r20
    270e:	ba 07       	cpc	r27, r26
    2710:	20 f0       	brcs	.+8      	; 0x271a <__divsf3_pse+0xae>
    2712:	62 1b       	sub	r22, r18
    2714:	73 0b       	sbc	r23, r19
    2716:	84 0b       	sbc	r24, r20
    2718:	ba 0b       	sbc	r27, r26
    271a:	ee 1f       	adc	r30, r30
    271c:	88 f7       	brcc	.-30     	; 0x2700 <__divsf3_pse+0x94>
    271e:	e0 95       	com	r30
    2720:	08 95       	ret

00002722 <__fixunssfsi>:
    2722:	0e 94 2d 14 	call	0x285a	; 0x285a <__fp_splitA>
    2726:	88 f0       	brcs	.+34     	; 0x274a <__fixunssfsi+0x28>
    2728:	9f 57       	subi	r25, 0x7F	; 127
    272a:	98 f0       	brcs	.+38     	; 0x2752 <__fixunssfsi+0x30>
    272c:	b9 2f       	mov	r27, r25
    272e:	99 27       	eor	r25, r25
    2730:	b7 51       	subi	r27, 0x17	; 23
    2732:	b0 f0       	brcs	.+44     	; 0x2760 <__fixunssfsi+0x3e>
    2734:	e1 f0       	breq	.+56     	; 0x276e <__fixunssfsi+0x4c>
    2736:	66 0f       	add	r22, r22
    2738:	77 1f       	adc	r23, r23
    273a:	88 1f       	adc	r24, r24
    273c:	99 1f       	adc	r25, r25
    273e:	1a f0       	brmi	.+6      	; 0x2746 <__fixunssfsi+0x24>
    2740:	ba 95       	dec	r27
    2742:	c9 f7       	brne	.-14     	; 0x2736 <__fixunssfsi+0x14>
    2744:	14 c0       	rjmp	.+40     	; 0x276e <__fixunssfsi+0x4c>
    2746:	b1 30       	cpi	r27, 0x01	; 1
    2748:	91 f0       	breq	.+36     	; 0x276e <__fixunssfsi+0x4c>
    274a:	0e 94 47 14 	call	0x288e	; 0x288e <__fp_zero>
    274e:	b1 e0       	ldi	r27, 0x01	; 1
    2750:	08 95       	ret
    2752:	0c 94 47 14 	jmp	0x288e	; 0x288e <__fp_zero>
    2756:	67 2f       	mov	r22, r23
    2758:	78 2f       	mov	r23, r24
    275a:	88 27       	eor	r24, r24
    275c:	b8 5f       	subi	r27, 0xF8	; 248
    275e:	39 f0       	breq	.+14     	; 0x276e <__fixunssfsi+0x4c>
    2760:	b9 3f       	cpi	r27, 0xF9	; 249
    2762:	cc f3       	brlt	.-14     	; 0x2756 <__fixunssfsi+0x34>
    2764:	86 95       	lsr	r24
    2766:	77 95       	ror	r23
    2768:	67 95       	ror	r22
    276a:	b3 95       	inc	r27
    276c:	d9 f7       	brne	.-10     	; 0x2764 <__fixunssfsi+0x42>
    276e:	3e f4       	brtc	.+14     	; 0x277e <__fixunssfsi+0x5c>
    2770:	90 95       	com	r25
    2772:	80 95       	com	r24
    2774:	70 95       	com	r23
    2776:	61 95       	neg	r22
    2778:	7f 4f       	sbci	r23, 0xFF	; 255
    277a:	8f 4f       	sbci	r24, 0xFF	; 255
    277c:	9f 4f       	sbci	r25, 0xFF	; 255
    277e:	08 95       	ret

00002780 <__floatunsisf>:
    2780:	e8 94       	clt
    2782:	09 c0       	rjmp	.+18     	; 0x2796 <__floatsisf+0x12>

00002784 <__floatsisf>:
    2784:	97 fb       	bst	r25, 7
    2786:	3e f4       	brtc	.+14     	; 0x2796 <__floatsisf+0x12>
    2788:	90 95       	com	r25
    278a:	80 95       	com	r24
    278c:	70 95       	com	r23
    278e:	61 95       	neg	r22
    2790:	7f 4f       	sbci	r23, 0xFF	; 255
    2792:	8f 4f       	sbci	r24, 0xFF	; 255
    2794:	9f 4f       	sbci	r25, 0xFF	; 255
    2796:	99 23       	and	r25, r25
    2798:	a9 f0       	breq	.+42     	; 0x27c4 <__floatsisf+0x40>
    279a:	f9 2f       	mov	r31, r25
    279c:	96 e9       	ldi	r25, 0x96	; 150
    279e:	bb 27       	eor	r27, r27
    27a0:	93 95       	inc	r25
    27a2:	f6 95       	lsr	r31
    27a4:	87 95       	ror	r24
    27a6:	77 95       	ror	r23
    27a8:	67 95       	ror	r22
    27aa:	b7 95       	ror	r27
    27ac:	f1 11       	cpse	r31, r1
    27ae:	f8 cf       	rjmp	.-16     	; 0x27a0 <__floatsisf+0x1c>
    27b0:	fa f4       	brpl	.+62     	; 0x27f0 <__floatsisf+0x6c>
    27b2:	bb 0f       	add	r27, r27
    27b4:	11 f4       	brne	.+4      	; 0x27ba <__floatsisf+0x36>
    27b6:	60 ff       	sbrs	r22, 0
    27b8:	1b c0       	rjmp	.+54     	; 0x27f0 <__floatsisf+0x6c>
    27ba:	6f 5f       	subi	r22, 0xFF	; 255
    27bc:	7f 4f       	sbci	r23, 0xFF	; 255
    27be:	8f 4f       	sbci	r24, 0xFF	; 255
    27c0:	9f 4f       	sbci	r25, 0xFF	; 255
    27c2:	16 c0       	rjmp	.+44     	; 0x27f0 <__floatsisf+0x6c>
    27c4:	88 23       	and	r24, r24
    27c6:	11 f0       	breq	.+4      	; 0x27cc <__floatsisf+0x48>
    27c8:	96 e9       	ldi	r25, 0x96	; 150
    27ca:	11 c0       	rjmp	.+34     	; 0x27ee <__floatsisf+0x6a>
    27cc:	77 23       	and	r23, r23
    27ce:	21 f0       	breq	.+8      	; 0x27d8 <__floatsisf+0x54>
    27d0:	9e e8       	ldi	r25, 0x8E	; 142
    27d2:	87 2f       	mov	r24, r23
    27d4:	76 2f       	mov	r23, r22
    27d6:	05 c0       	rjmp	.+10     	; 0x27e2 <__floatsisf+0x5e>
    27d8:	66 23       	and	r22, r22
    27da:	71 f0       	breq	.+28     	; 0x27f8 <__floatsisf+0x74>
    27dc:	96 e8       	ldi	r25, 0x86	; 134
    27de:	86 2f       	mov	r24, r22
    27e0:	70 e0       	ldi	r23, 0x00	; 0
    27e2:	60 e0       	ldi	r22, 0x00	; 0
    27e4:	2a f0       	brmi	.+10     	; 0x27f0 <__floatsisf+0x6c>
    27e6:	9a 95       	dec	r25
    27e8:	66 0f       	add	r22, r22
    27ea:	77 1f       	adc	r23, r23
    27ec:	88 1f       	adc	r24, r24
    27ee:	da f7       	brpl	.-10     	; 0x27e6 <__floatsisf+0x62>
    27f0:	88 0f       	add	r24, r24
    27f2:	96 95       	lsr	r25
    27f4:	87 95       	ror	r24
    27f6:	97 f9       	bld	r25, 7
    27f8:	08 95       	ret

000027fa <__fp_inf>:
    27fa:	97 f9       	bld	r25, 7
    27fc:	9f 67       	ori	r25, 0x7F	; 127
    27fe:	80 e8       	ldi	r24, 0x80	; 128
    2800:	70 e0       	ldi	r23, 0x00	; 0
    2802:	60 e0       	ldi	r22, 0x00	; 0
    2804:	08 95       	ret

00002806 <__fp_nan>:
    2806:	9f ef       	ldi	r25, 0xFF	; 255
    2808:	80 ec       	ldi	r24, 0xC0	; 192
    280a:	08 95       	ret

0000280c <__fp_pscA>:
    280c:	00 24       	eor	r0, r0
    280e:	0a 94       	dec	r0
    2810:	16 16       	cp	r1, r22
    2812:	17 06       	cpc	r1, r23
    2814:	18 06       	cpc	r1, r24
    2816:	09 06       	cpc	r0, r25
    2818:	08 95       	ret

0000281a <__fp_pscB>:
    281a:	00 24       	eor	r0, r0
    281c:	0a 94       	dec	r0
    281e:	12 16       	cp	r1, r18
    2820:	13 06       	cpc	r1, r19
    2822:	14 06       	cpc	r1, r20
    2824:	05 06       	cpc	r0, r21
    2826:	08 95       	ret

00002828 <__fp_round>:
    2828:	09 2e       	mov	r0, r25
    282a:	03 94       	inc	r0
    282c:	00 0c       	add	r0, r0
    282e:	11 f4       	brne	.+4      	; 0x2834 <__fp_round+0xc>
    2830:	88 23       	and	r24, r24
    2832:	52 f0       	brmi	.+20     	; 0x2848 <__fp_round+0x20>
    2834:	bb 0f       	add	r27, r27
    2836:	40 f4       	brcc	.+16     	; 0x2848 <__fp_round+0x20>
    2838:	bf 2b       	or	r27, r31
    283a:	11 f4       	brne	.+4      	; 0x2840 <__fp_round+0x18>
    283c:	60 ff       	sbrs	r22, 0
    283e:	04 c0       	rjmp	.+8      	; 0x2848 <__fp_round+0x20>
    2840:	6f 5f       	subi	r22, 0xFF	; 255
    2842:	7f 4f       	sbci	r23, 0xFF	; 255
    2844:	8f 4f       	sbci	r24, 0xFF	; 255
    2846:	9f 4f       	sbci	r25, 0xFF	; 255
    2848:	08 95       	ret

0000284a <__fp_split3>:
    284a:	57 fd       	sbrc	r21, 7
    284c:	90 58       	subi	r25, 0x80	; 128
    284e:	44 0f       	add	r20, r20
    2850:	55 1f       	adc	r21, r21
    2852:	59 f0       	breq	.+22     	; 0x286a <__fp_splitA+0x10>
    2854:	5f 3f       	cpi	r21, 0xFF	; 255
    2856:	71 f0       	breq	.+28     	; 0x2874 <__fp_splitA+0x1a>
    2858:	47 95       	ror	r20

0000285a <__fp_splitA>:
    285a:	88 0f       	add	r24, r24
    285c:	97 fb       	bst	r25, 7
    285e:	99 1f       	adc	r25, r25
    2860:	61 f0       	breq	.+24     	; 0x287a <__fp_splitA+0x20>
    2862:	9f 3f       	cpi	r25, 0xFF	; 255
    2864:	79 f0       	breq	.+30     	; 0x2884 <__fp_splitA+0x2a>
    2866:	87 95       	ror	r24
    2868:	08 95       	ret
    286a:	12 16       	cp	r1, r18
    286c:	13 06       	cpc	r1, r19
    286e:	14 06       	cpc	r1, r20
    2870:	55 1f       	adc	r21, r21
    2872:	f2 cf       	rjmp	.-28     	; 0x2858 <__fp_split3+0xe>
    2874:	46 95       	lsr	r20
    2876:	f1 df       	rcall	.-30     	; 0x285a <__fp_splitA>
    2878:	08 c0       	rjmp	.+16     	; 0x288a <__fp_splitA+0x30>
    287a:	16 16       	cp	r1, r22
    287c:	17 06       	cpc	r1, r23
    287e:	18 06       	cpc	r1, r24
    2880:	99 1f       	adc	r25, r25
    2882:	f1 cf       	rjmp	.-30     	; 0x2866 <__fp_splitA+0xc>
    2884:	86 95       	lsr	r24
    2886:	71 05       	cpc	r23, r1
    2888:	61 05       	cpc	r22, r1
    288a:	08 94       	sec
    288c:	08 95       	ret

0000288e <__fp_zero>:
    288e:	e8 94       	clt

00002890 <__fp_szero>:
    2890:	bb 27       	eor	r27, r27
    2892:	66 27       	eor	r22, r22
    2894:	77 27       	eor	r23, r23
    2896:	cb 01       	movw	r24, r22
    2898:	97 f9       	bld	r25, 7
    289a:	08 95       	ret

0000289c <__mulsf3>:
    289c:	0e 94 61 14 	call	0x28c2	; 0x28c2 <__mulsf3x>
    28a0:	0c 94 14 14 	jmp	0x2828	; 0x2828 <__fp_round>
    28a4:	0e 94 06 14 	call	0x280c	; 0x280c <__fp_pscA>
    28a8:	38 f0       	brcs	.+14     	; 0x28b8 <__mulsf3+0x1c>
    28aa:	0e 94 0d 14 	call	0x281a	; 0x281a <__fp_pscB>
    28ae:	20 f0       	brcs	.+8      	; 0x28b8 <__mulsf3+0x1c>
    28b0:	95 23       	and	r25, r21
    28b2:	11 f0       	breq	.+4      	; 0x28b8 <__mulsf3+0x1c>
    28b4:	0c 94 fd 13 	jmp	0x27fa	; 0x27fa <__fp_inf>
    28b8:	0c 94 03 14 	jmp	0x2806	; 0x2806 <__fp_nan>
    28bc:	11 24       	eor	r1, r1
    28be:	0c 94 48 14 	jmp	0x2890	; 0x2890 <__fp_szero>

000028c2 <__mulsf3x>:
    28c2:	0e 94 25 14 	call	0x284a	; 0x284a <__fp_split3>
    28c6:	70 f3       	brcs	.-36     	; 0x28a4 <__mulsf3+0x8>

000028c8 <__mulsf3_pse>:
    28c8:	95 9f       	mul	r25, r21
    28ca:	c1 f3       	breq	.-16     	; 0x28bc <__mulsf3+0x20>
    28cc:	95 0f       	add	r25, r21
    28ce:	50 e0       	ldi	r21, 0x00	; 0
    28d0:	55 1f       	adc	r21, r21
    28d2:	62 9f       	mul	r22, r18
    28d4:	f0 01       	movw	r30, r0
    28d6:	72 9f       	mul	r23, r18
    28d8:	bb 27       	eor	r27, r27
    28da:	f0 0d       	add	r31, r0
    28dc:	b1 1d       	adc	r27, r1
    28de:	63 9f       	mul	r22, r19
    28e0:	aa 27       	eor	r26, r26
    28e2:	f0 0d       	add	r31, r0
    28e4:	b1 1d       	adc	r27, r1
    28e6:	aa 1f       	adc	r26, r26
    28e8:	64 9f       	mul	r22, r20
    28ea:	66 27       	eor	r22, r22
    28ec:	b0 0d       	add	r27, r0
    28ee:	a1 1d       	adc	r26, r1
    28f0:	66 1f       	adc	r22, r22
    28f2:	82 9f       	mul	r24, r18
    28f4:	22 27       	eor	r18, r18
    28f6:	b0 0d       	add	r27, r0
    28f8:	a1 1d       	adc	r26, r1
    28fa:	62 1f       	adc	r22, r18
    28fc:	73 9f       	mul	r23, r19
    28fe:	b0 0d       	add	r27, r0
    2900:	a1 1d       	adc	r26, r1
    2902:	62 1f       	adc	r22, r18
    2904:	83 9f       	mul	r24, r19
    2906:	a0 0d       	add	r26, r0
    2908:	61 1d       	adc	r22, r1
    290a:	22 1f       	adc	r18, r18
    290c:	74 9f       	mul	r23, r20
    290e:	33 27       	eor	r19, r19
    2910:	a0 0d       	add	r26, r0
    2912:	61 1d       	adc	r22, r1
    2914:	23 1f       	adc	r18, r19
    2916:	84 9f       	mul	r24, r20
    2918:	60 0d       	add	r22, r0
    291a:	21 1d       	adc	r18, r1
    291c:	82 2f       	mov	r24, r18
    291e:	76 2f       	mov	r23, r22
    2920:	6a 2f       	mov	r22, r26
    2922:	11 24       	eor	r1, r1
    2924:	9f 57       	subi	r25, 0x7F	; 127
    2926:	50 40       	sbci	r21, 0x00	; 0
    2928:	9a f0       	brmi	.+38     	; 0x2950 <__mulsf3_pse+0x88>
    292a:	f1 f0       	breq	.+60     	; 0x2968 <__mulsf3_pse+0xa0>
    292c:	88 23       	and	r24, r24
    292e:	4a f0       	brmi	.+18     	; 0x2942 <__mulsf3_pse+0x7a>
    2930:	ee 0f       	add	r30, r30
    2932:	ff 1f       	adc	r31, r31
    2934:	bb 1f       	adc	r27, r27
    2936:	66 1f       	adc	r22, r22
    2938:	77 1f       	adc	r23, r23
    293a:	88 1f       	adc	r24, r24
    293c:	91 50       	subi	r25, 0x01	; 1
    293e:	50 40       	sbci	r21, 0x00	; 0
    2940:	a9 f7       	brne	.-22     	; 0x292c <__mulsf3_pse+0x64>
    2942:	9e 3f       	cpi	r25, 0xFE	; 254
    2944:	51 05       	cpc	r21, r1
    2946:	80 f0       	brcs	.+32     	; 0x2968 <__mulsf3_pse+0xa0>
    2948:	0c 94 fd 13 	jmp	0x27fa	; 0x27fa <__fp_inf>
    294c:	0c 94 48 14 	jmp	0x2890	; 0x2890 <__fp_szero>
    2950:	5f 3f       	cpi	r21, 0xFF	; 255
    2952:	e4 f3       	brlt	.-8      	; 0x294c <__mulsf3_pse+0x84>
    2954:	98 3e       	cpi	r25, 0xE8	; 232
    2956:	d4 f3       	brlt	.-12     	; 0x294c <__mulsf3_pse+0x84>
    2958:	86 95       	lsr	r24
    295a:	77 95       	ror	r23
    295c:	67 95       	ror	r22
    295e:	b7 95       	ror	r27
    2960:	f7 95       	ror	r31
    2962:	e7 95       	ror	r30
    2964:	9f 5f       	subi	r25, 0xFF	; 255
    2966:	c1 f7       	brne	.-16     	; 0x2958 <__mulsf3_pse+0x90>
    2968:	fe 2b       	or	r31, r30
    296a:	88 0f       	add	r24, r24
    296c:	91 1d       	adc	r25, r1
    296e:	96 95       	lsr	r25
    2970:	87 95       	ror	r24
    2972:	97 f9       	bld	r25, 7
    2974:	08 95       	ret

00002976 <atoi>:
    2976:	fc 01       	movw	r30, r24
    2978:	88 27       	eor	r24, r24
    297a:	99 27       	eor	r25, r25
    297c:	e8 94       	clt
    297e:	21 91       	ld	r18, Z+
    2980:	20 32       	cpi	r18, 0x20	; 32
    2982:	e9 f3       	breq	.-6      	; 0x297e <atoi+0x8>
    2984:	29 30       	cpi	r18, 0x09	; 9
    2986:	10 f0       	brcs	.+4      	; 0x298c <atoi+0x16>
    2988:	2e 30       	cpi	r18, 0x0E	; 14
    298a:	c8 f3       	brcs	.-14     	; 0x297e <atoi+0x8>
    298c:	2b 32       	cpi	r18, 0x2B	; 43
    298e:	41 f0       	breq	.+16     	; 0x29a0 <atoi+0x2a>
    2990:	2d 32       	cpi	r18, 0x2D	; 45
    2992:	39 f4       	brne	.+14     	; 0x29a2 <atoi+0x2c>
    2994:	68 94       	set
    2996:	04 c0       	rjmp	.+8      	; 0x29a0 <atoi+0x2a>
    2998:	0e 94 e4 14 	call	0x29c8	; 0x29c8 <__mulhi_const_10>
    299c:	82 0f       	add	r24, r18
    299e:	91 1d       	adc	r25, r1
    29a0:	21 91       	ld	r18, Z+
    29a2:	20 53       	subi	r18, 0x30	; 48
    29a4:	2a 30       	cpi	r18, 0x0A	; 10
    29a6:	c0 f3       	brcs	.-16     	; 0x2998 <atoi+0x22>
    29a8:	1e f4       	brtc	.+6      	; 0x29b0 <atoi+0x3a>
    29aa:	90 95       	com	r25
    29ac:	81 95       	neg	r24
    29ae:	9f 4f       	sbci	r25, 0xFF	; 255
    29b0:	08 95       	ret

000029b2 <__itoa_ncheck>:
    29b2:	bb 27       	eor	r27, r27
    29b4:	4a 30       	cpi	r20, 0x0A	; 10
    29b6:	31 f4       	brne	.+12     	; 0x29c4 <__itoa_ncheck+0x12>
    29b8:	99 23       	and	r25, r25
    29ba:	22 f4       	brpl	.+8      	; 0x29c4 <__itoa_ncheck+0x12>
    29bc:	bd e2       	ldi	r27, 0x2D	; 45
    29be:	90 95       	com	r25
    29c0:	81 95       	neg	r24
    29c2:	9f 4f       	sbci	r25, 0xFF	; 255
    29c4:	0c 94 ed 14 	jmp	0x29da	; 0x29da <__utoa_common>

000029c8 <__mulhi_const_10>:
    29c8:	7a e0       	ldi	r23, 0x0A	; 10
    29ca:	97 9f       	mul	r25, r23
    29cc:	90 2d       	mov	r25, r0
    29ce:	87 9f       	mul	r24, r23
    29d0:	80 2d       	mov	r24, r0
    29d2:	91 0d       	add	r25, r1
    29d4:	11 24       	eor	r1, r1
    29d6:	08 95       	ret

000029d8 <__utoa_ncheck>:
    29d8:	bb 27       	eor	r27, r27

000029da <__utoa_common>:
    29da:	fb 01       	movw	r30, r22
    29dc:	55 27       	eor	r21, r21
    29de:	aa 27       	eor	r26, r26
    29e0:	88 0f       	add	r24, r24
    29e2:	99 1f       	adc	r25, r25
    29e4:	aa 1f       	adc	r26, r26
    29e6:	a4 17       	cp	r26, r20
    29e8:	10 f0       	brcs	.+4      	; 0x29ee <__utoa_common+0x14>
    29ea:	a4 1b       	sub	r26, r20
    29ec:	83 95       	inc	r24
    29ee:	50 51       	subi	r21, 0x10	; 16
    29f0:	b9 f7       	brne	.-18     	; 0x29e0 <__utoa_common+0x6>
    29f2:	a0 5d       	subi	r26, 0xD0	; 208
    29f4:	aa 33       	cpi	r26, 0x3A	; 58
    29f6:	08 f0       	brcs	.+2      	; 0x29fa <__utoa_common+0x20>
    29f8:	a9 5d       	subi	r26, 0xD9	; 217
    29fa:	a1 93       	st	Z+, r26
    29fc:	00 97       	sbiw	r24, 0x00	; 0
    29fe:	79 f7       	brne	.-34     	; 0x29de <__utoa_common+0x4>
    2a00:	b1 11       	cpse	r27, r1
    2a02:	b1 93       	st	Z+, r27
    2a04:	11 92       	st	Z+, r1
    2a06:	cb 01       	movw	r24, r22
    2a08:	0c 94 57 17 	jmp	0x2eae	; 0x2eae <strrev>

00002a0c <snprintf>:
    2a0c:	0f 93       	push	r16
    2a0e:	1f 93       	push	r17
    2a10:	cf 93       	push	r28
    2a12:	df 93       	push	r29
    2a14:	cd b7       	in	r28, 0x3d	; 61
    2a16:	de b7       	in	r29, 0x3e	; 62
    2a18:	2e 97       	sbiw	r28, 0x0e	; 14
    2a1a:	cd bf       	out	0x3d, r28	; 61
    2a1c:	de bf       	out	0x3e, r29	; 62
    2a1e:	0d 89       	ldd	r16, Y+21	; 0x15
    2a20:	1e 89       	ldd	r17, Y+22	; 0x16
    2a22:	8f 89       	ldd	r24, Y+23	; 0x17
    2a24:	98 8d       	ldd	r25, Y+24	; 0x18
    2a26:	26 e0       	ldi	r18, 0x06	; 6
    2a28:	2c 83       	std	Y+4, r18	; 0x04
    2a2a:	09 83       	std	Y+1, r16	; 0x01
    2a2c:	1a 83       	std	Y+2, r17	; 0x02
    2a2e:	97 ff       	sbrs	r25, 7
    2a30:	02 c0       	rjmp	.+4      	; 0x2a36 <snprintf+0x2a>
    2a32:	80 e0       	ldi	r24, 0x00	; 0
    2a34:	90 e8       	ldi	r25, 0x80	; 128
    2a36:	01 97       	sbiw	r24, 0x01	; 1
    2a38:	8d 83       	std	Y+5, r24	; 0x05
    2a3a:	9e 83       	std	Y+6, r25	; 0x06
    2a3c:	ae 01       	movw	r20, r28
    2a3e:	45 5e       	subi	r20, 0xE5	; 229
    2a40:	5f 4f       	sbci	r21, 0xFF	; 255
    2a42:	69 8d       	ldd	r22, Y+25	; 0x19
    2a44:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2a46:	ce 01       	movw	r24, r28
    2a48:	01 96       	adiw	r24, 0x01	; 1
    2a4a:	0e 94 3d 15 	call	0x2a7a	; 0x2a7a <vfprintf>
    2a4e:	4d 81       	ldd	r20, Y+5	; 0x05
    2a50:	5e 81       	ldd	r21, Y+6	; 0x06
    2a52:	57 fd       	sbrc	r21, 7
    2a54:	0a c0       	rjmp	.+20     	; 0x2a6a <snprintf+0x5e>
    2a56:	2f 81       	ldd	r18, Y+7	; 0x07
    2a58:	38 85       	ldd	r19, Y+8	; 0x08
    2a5a:	42 17       	cp	r20, r18
    2a5c:	53 07       	cpc	r21, r19
    2a5e:	0c f4       	brge	.+2      	; 0x2a62 <snprintf+0x56>
    2a60:	9a 01       	movw	r18, r20
    2a62:	f8 01       	movw	r30, r16
    2a64:	e2 0f       	add	r30, r18
    2a66:	f3 1f       	adc	r31, r19
    2a68:	10 82       	st	Z, r1
    2a6a:	2e 96       	adiw	r28, 0x0e	; 14
    2a6c:	cd bf       	out	0x3d, r28	; 61
    2a6e:	de bf       	out	0x3e, r29	; 62
    2a70:	df 91       	pop	r29
    2a72:	cf 91       	pop	r28
    2a74:	1f 91       	pop	r17
    2a76:	0f 91       	pop	r16
    2a78:	08 95       	ret

00002a7a <vfprintf>:
    2a7a:	2f 92       	push	r2
    2a7c:	3f 92       	push	r3
    2a7e:	4f 92       	push	r4
    2a80:	5f 92       	push	r5
    2a82:	6f 92       	push	r6
    2a84:	7f 92       	push	r7
    2a86:	8f 92       	push	r8
    2a88:	9f 92       	push	r9
    2a8a:	af 92       	push	r10
    2a8c:	bf 92       	push	r11
    2a8e:	cf 92       	push	r12
    2a90:	df 92       	push	r13
    2a92:	ef 92       	push	r14
    2a94:	ff 92       	push	r15
    2a96:	0f 93       	push	r16
    2a98:	1f 93       	push	r17
    2a9a:	cf 93       	push	r28
    2a9c:	df 93       	push	r29
    2a9e:	cd b7       	in	r28, 0x3d	; 61
    2aa0:	de b7       	in	r29, 0x3e	; 62
    2aa2:	2b 97       	sbiw	r28, 0x0b	; 11
    2aa4:	cd bf       	out	0x3d, r28	; 61
    2aa6:	de bf       	out	0x3e, r29	; 62
    2aa8:	6c 01       	movw	r12, r24
    2aaa:	7b 01       	movw	r14, r22
    2aac:	8a 01       	movw	r16, r20
    2aae:	fc 01       	movw	r30, r24
    2ab0:	16 82       	std	Z+6, r1	; 0x06
    2ab2:	17 82       	std	Z+7, r1	; 0x07
    2ab4:	83 81       	ldd	r24, Z+3	; 0x03
    2ab6:	81 ff       	sbrs	r24, 1
    2ab8:	cc c1       	rjmp	.+920    	; 0x2e52 <vfprintf+0x3d8>
    2aba:	ce 01       	movw	r24, r28
    2abc:	01 96       	adiw	r24, 0x01	; 1
    2abe:	3c 01       	movw	r6, r24
    2ac0:	f6 01       	movw	r30, r12
    2ac2:	93 81       	ldd	r25, Z+3	; 0x03
    2ac4:	f7 01       	movw	r30, r14
    2ac6:	93 fd       	sbrc	r25, 3
    2ac8:	85 91       	lpm	r24, Z+
    2aca:	93 ff       	sbrs	r25, 3
    2acc:	81 91       	ld	r24, Z+
    2ace:	7f 01       	movw	r14, r30
    2ad0:	88 23       	and	r24, r24
    2ad2:	09 f4       	brne	.+2      	; 0x2ad6 <vfprintf+0x5c>
    2ad4:	ba c1       	rjmp	.+884    	; 0x2e4a <vfprintf+0x3d0>
    2ad6:	85 32       	cpi	r24, 0x25	; 37
    2ad8:	39 f4       	brne	.+14     	; 0x2ae8 <vfprintf+0x6e>
    2ada:	93 fd       	sbrc	r25, 3
    2adc:	85 91       	lpm	r24, Z+
    2ade:	93 ff       	sbrs	r25, 3
    2ae0:	81 91       	ld	r24, Z+
    2ae2:	7f 01       	movw	r14, r30
    2ae4:	85 32       	cpi	r24, 0x25	; 37
    2ae6:	29 f4       	brne	.+10     	; 0x2af2 <vfprintf+0x78>
    2ae8:	b6 01       	movw	r22, r12
    2aea:	90 e0       	ldi	r25, 0x00	; 0
    2aec:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2af0:	e7 cf       	rjmp	.-50     	; 0x2ac0 <vfprintf+0x46>
    2af2:	91 2c       	mov	r9, r1
    2af4:	21 2c       	mov	r2, r1
    2af6:	31 2c       	mov	r3, r1
    2af8:	ff e1       	ldi	r31, 0x1F	; 31
    2afa:	f3 15       	cp	r31, r3
    2afc:	d8 f0       	brcs	.+54     	; 0x2b34 <vfprintf+0xba>
    2afe:	8b 32       	cpi	r24, 0x2B	; 43
    2b00:	79 f0       	breq	.+30     	; 0x2b20 <vfprintf+0xa6>
    2b02:	38 f4       	brcc	.+14     	; 0x2b12 <vfprintf+0x98>
    2b04:	80 32       	cpi	r24, 0x20	; 32
    2b06:	79 f0       	breq	.+30     	; 0x2b26 <vfprintf+0xac>
    2b08:	83 32       	cpi	r24, 0x23	; 35
    2b0a:	a1 f4       	brne	.+40     	; 0x2b34 <vfprintf+0xba>
    2b0c:	23 2d       	mov	r18, r3
    2b0e:	20 61       	ori	r18, 0x10	; 16
    2b10:	1d c0       	rjmp	.+58     	; 0x2b4c <vfprintf+0xd2>
    2b12:	8d 32       	cpi	r24, 0x2D	; 45
    2b14:	61 f0       	breq	.+24     	; 0x2b2e <vfprintf+0xb4>
    2b16:	80 33       	cpi	r24, 0x30	; 48
    2b18:	69 f4       	brne	.+26     	; 0x2b34 <vfprintf+0xba>
    2b1a:	23 2d       	mov	r18, r3
    2b1c:	21 60       	ori	r18, 0x01	; 1
    2b1e:	16 c0       	rjmp	.+44     	; 0x2b4c <vfprintf+0xd2>
    2b20:	83 2d       	mov	r24, r3
    2b22:	82 60       	ori	r24, 0x02	; 2
    2b24:	38 2e       	mov	r3, r24
    2b26:	e3 2d       	mov	r30, r3
    2b28:	e4 60       	ori	r30, 0x04	; 4
    2b2a:	3e 2e       	mov	r3, r30
    2b2c:	2a c0       	rjmp	.+84     	; 0x2b82 <vfprintf+0x108>
    2b2e:	f3 2d       	mov	r31, r3
    2b30:	f8 60       	ori	r31, 0x08	; 8
    2b32:	1d c0       	rjmp	.+58     	; 0x2b6e <vfprintf+0xf4>
    2b34:	37 fc       	sbrc	r3, 7
    2b36:	2d c0       	rjmp	.+90     	; 0x2b92 <vfprintf+0x118>
    2b38:	20 ed       	ldi	r18, 0xD0	; 208
    2b3a:	28 0f       	add	r18, r24
    2b3c:	2a 30       	cpi	r18, 0x0A	; 10
    2b3e:	40 f0       	brcs	.+16     	; 0x2b50 <vfprintf+0xd6>
    2b40:	8e 32       	cpi	r24, 0x2E	; 46
    2b42:	b9 f4       	brne	.+46     	; 0x2b72 <vfprintf+0xf8>
    2b44:	36 fc       	sbrc	r3, 6
    2b46:	81 c1       	rjmp	.+770    	; 0x2e4a <vfprintf+0x3d0>
    2b48:	23 2d       	mov	r18, r3
    2b4a:	20 64       	ori	r18, 0x40	; 64
    2b4c:	32 2e       	mov	r3, r18
    2b4e:	19 c0       	rjmp	.+50     	; 0x2b82 <vfprintf+0x108>
    2b50:	36 fe       	sbrs	r3, 6
    2b52:	06 c0       	rjmp	.+12     	; 0x2b60 <vfprintf+0xe6>
    2b54:	8a e0       	ldi	r24, 0x0A	; 10
    2b56:	98 9e       	mul	r9, r24
    2b58:	20 0d       	add	r18, r0
    2b5a:	11 24       	eor	r1, r1
    2b5c:	92 2e       	mov	r9, r18
    2b5e:	11 c0       	rjmp	.+34     	; 0x2b82 <vfprintf+0x108>
    2b60:	ea e0       	ldi	r30, 0x0A	; 10
    2b62:	2e 9e       	mul	r2, r30
    2b64:	20 0d       	add	r18, r0
    2b66:	11 24       	eor	r1, r1
    2b68:	22 2e       	mov	r2, r18
    2b6a:	f3 2d       	mov	r31, r3
    2b6c:	f0 62       	ori	r31, 0x20	; 32
    2b6e:	3f 2e       	mov	r3, r31
    2b70:	08 c0       	rjmp	.+16     	; 0x2b82 <vfprintf+0x108>
    2b72:	8c 36       	cpi	r24, 0x6C	; 108
    2b74:	21 f4       	brne	.+8      	; 0x2b7e <vfprintf+0x104>
    2b76:	83 2d       	mov	r24, r3
    2b78:	80 68       	ori	r24, 0x80	; 128
    2b7a:	38 2e       	mov	r3, r24
    2b7c:	02 c0       	rjmp	.+4      	; 0x2b82 <vfprintf+0x108>
    2b7e:	88 36       	cpi	r24, 0x68	; 104
    2b80:	41 f4       	brne	.+16     	; 0x2b92 <vfprintf+0x118>
    2b82:	f7 01       	movw	r30, r14
    2b84:	93 fd       	sbrc	r25, 3
    2b86:	85 91       	lpm	r24, Z+
    2b88:	93 ff       	sbrs	r25, 3
    2b8a:	81 91       	ld	r24, Z+
    2b8c:	7f 01       	movw	r14, r30
    2b8e:	81 11       	cpse	r24, r1
    2b90:	b3 cf       	rjmp	.-154    	; 0x2af8 <vfprintf+0x7e>
    2b92:	98 2f       	mov	r25, r24
    2b94:	9f 7d       	andi	r25, 0xDF	; 223
    2b96:	95 54       	subi	r25, 0x45	; 69
    2b98:	93 30       	cpi	r25, 0x03	; 3
    2b9a:	28 f4       	brcc	.+10     	; 0x2ba6 <vfprintf+0x12c>
    2b9c:	0c 5f       	subi	r16, 0xFC	; 252
    2b9e:	1f 4f       	sbci	r17, 0xFF	; 255
    2ba0:	9f e3       	ldi	r25, 0x3F	; 63
    2ba2:	99 83       	std	Y+1, r25	; 0x01
    2ba4:	0d c0       	rjmp	.+26     	; 0x2bc0 <vfprintf+0x146>
    2ba6:	83 36       	cpi	r24, 0x63	; 99
    2ba8:	31 f0       	breq	.+12     	; 0x2bb6 <vfprintf+0x13c>
    2baa:	83 37       	cpi	r24, 0x73	; 115
    2bac:	71 f0       	breq	.+28     	; 0x2bca <vfprintf+0x150>
    2bae:	83 35       	cpi	r24, 0x53	; 83
    2bb0:	09 f0       	breq	.+2      	; 0x2bb4 <vfprintf+0x13a>
    2bb2:	59 c0       	rjmp	.+178    	; 0x2c66 <vfprintf+0x1ec>
    2bb4:	21 c0       	rjmp	.+66     	; 0x2bf8 <vfprintf+0x17e>
    2bb6:	f8 01       	movw	r30, r16
    2bb8:	80 81       	ld	r24, Z
    2bba:	89 83       	std	Y+1, r24	; 0x01
    2bbc:	0e 5f       	subi	r16, 0xFE	; 254
    2bbe:	1f 4f       	sbci	r17, 0xFF	; 255
    2bc0:	88 24       	eor	r8, r8
    2bc2:	83 94       	inc	r8
    2bc4:	91 2c       	mov	r9, r1
    2bc6:	53 01       	movw	r10, r6
    2bc8:	13 c0       	rjmp	.+38     	; 0x2bf0 <vfprintf+0x176>
    2bca:	28 01       	movw	r4, r16
    2bcc:	f2 e0       	ldi	r31, 0x02	; 2
    2bce:	4f 0e       	add	r4, r31
    2bd0:	51 1c       	adc	r5, r1
    2bd2:	f8 01       	movw	r30, r16
    2bd4:	a0 80       	ld	r10, Z
    2bd6:	b1 80       	ldd	r11, Z+1	; 0x01
    2bd8:	36 fe       	sbrs	r3, 6
    2bda:	03 c0       	rjmp	.+6      	; 0x2be2 <vfprintf+0x168>
    2bdc:	69 2d       	mov	r22, r9
    2bde:	70 e0       	ldi	r23, 0x00	; 0
    2be0:	02 c0       	rjmp	.+4      	; 0x2be6 <vfprintf+0x16c>
    2be2:	6f ef       	ldi	r22, 0xFF	; 255
    2be4:	7f ef       	ldi	r23, 0xFF	; 255
    2be6:	c5 01       	movw	r24, r10
    2be8:	0e 94 4c 17 	call	0x2e98	; 0x2e98 <strnlen>
    2bec:	4c 01       	movw	r8, r24
    2bee:	82 01       	movw	r16, r4
    2bf0:	f3 2d       	mov	r31, r3
    2bf2:	ff 77       	andi	r31, 0x7F	; 127
    2bf4:	3f 2e       	mov	r3, r31
    2bf6:	16 c0       	rjmp	.+44     	; 0x2c24 <vfprintf+0x1aa>
    2bf8:	28 01       	movw	r4, r16
    2bfa:	22 e0       	ldi	r18, 0x02	; 2
    2bfc:	42 0e       	add	r4, r18
    2bfe:	51 1c       	adc	r5, r1
    2c00:	f8 01       	movw	r30, r16
    2c02:	a0 80       	ld	r10, Z
    2c04:	b1 80       	ldd	r11, Z+1	; 0x01
    2c06:	36 fe       	sbrs	r3, 6
    2c08:	03 c0       	rjmp	.+6      	; 0x2c10 <vfprintf+0x196>
    2c0a:	69 2d       	mov	r22, r9
    2c0c:	70 e0       	ldi	r23, 0x00	; 0
    2c0e:	02 c0       	rjmp	.+4      	; 0x2c14 <vfprintf+0x19a>
    2c10:	6f ef       	ldi	r22, 0xFF	; 255
    2c12:	7f ef       	ldi	r23, 0xFF	; 255
    2c14:	c5 01       	movw	r24, r10
    2c16:	0e 94 41 17 	call	0x2e82	; 0x2e82 <strnlen_P>
    2c1a:	4c 01       	movw	r8, r24
    2c1c:	f3 2d       	mov	r31, r3
    2c1e:	f0 68       	ori	r31, 0x80	; 128
    2c20:	3f 2e       	mov	r3, r31
    2c22:	82 01       	movw	r16, r4
    2c24:	33 fc       	sbrc	r3, 3
    2c26:	1b c0       	rjmp	.+54     	; 0x2c5e <vfprintf+0x1e4>
    2c28:	82 2d       	mov	r24, r2
    2c2a:	90 e0       	ldi	r25, 0x00	; 0
    2c2c:	88 16       	cp	r8, r24
    2c2e:	99 06       	cpc	r9, r25
    2c30:	b0 f4       	brcc	.+44     	; 0x2c5e <vfprintf+0x1e4>
    2c32:	b6 01       	movw	r22, r12
    2c34:	80 e2       	ldi	r24, 0x20	; 32
    2c36:	90 e0       	ldi	r25, 0x00	; 0
    2c38:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2c3c:	2a 94       	dec	r2
    2c3e:	f4 cf       	rjmp	.-24     	; 0x2c28 <vfprintf+0x1ae>
    2c40:	f5 01       	movw	r30, r10
    2c42:	37 fc       	sbrc	r3, 7
    2c44:	85 91       	lpm	r24, Z+
    2c46:	37 fe       	sbrs	r3, 7
    2c48:	81 91       	ld	r24, Z+
    2c4a:	5f 01       	movw	r10, r30
    2c4c:	b6 01       	movw	r22, r12
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2c54:	21 10       	cpse	r2, r1
    2c56:	2a 94       	dec	r2
    2c58:	21 e0       	ldi	r18, 0x01	; 1
    2c5a:	82 1a       	sub	r8, r18
    2c5c:	91 08       	sbc	r9, r1
    2c5e:	81 14       	cp	r8, r1
    2c60:	91 04       	cpc	r9, r1
    2c62:	71 f7       	brne	.-36     	; 0x2c40 <vfprintf+0x1c6>
    2c64:	e8 c0       	rjmp	.+464    	; 0x2e36 <vfprintf+0x3bc>
    2c66:	84 36       	cpi	r24, 0x64	; 100
    2c68:	11 f0       	breq	.+4      	; 0x2c6e <vfprintf+0x1f4>
    2c6a:	89 36       	cpi	r24, 0x69	; 105
    2c6c:	41 f5       	brne	.+80     	; 0x2cbe <vfprintf+0x244>
    2c6e:	f8 01       	movw	r30, r16
    2c70:	37 fe       	sbrs	r3, 7
    2c72:	07 c0       	rjmp	.+14     	; 0x2c82 <vfprintf+0x208>
    2c74:	60 81       	ld	r22, Z
    2c76:	71 81       	ldd	r23, Z+1	; 0x01
    2c78:	82 81       	ldd	r24, Z+2	; 0x02
    2c7a:	93 81       	ldd	r25, Z+3	; 0x03
    2c7c:	0c 5f       	subi	r16, 0xFC	; 252
    2c7e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c80:	08 c0       	rjmp	.+16     	; 0x2c92 <vfprintf+0x218>
    2c82:	60 81       	ld	r22, Z
    2c84:	71 81       	ldd	r23, Z+1	; 0x01
    2c86:	07 2e       	mov	r0, r23
    2c88:	00 0c       	add	r0, r0
    2c8a:	88 0b       	sbc	r24, r24
    2c8c:	99 0b       	sbc	r25, r25
    2c8e:	0e 5f       	subi	r16, 0xFE	; 254
    2c90:	1f 4f       	sbci	r17, 0xFF	; 255
    2c92:	f3 2d       	mov	r31, r3
    2c94:	ff 76       	andi	r31, 0x6F	; 111
    2c96:	3f 2e       	mov	r3, r31
    2c98:	97 ff       	sbrs	r25, 7
    2c9a:	09 c0       	rjmp	.+18     	; 0x2cae <vfprintf+0x234>
    2c9c:	90 95       	com	r25
    2c9e:	80 95       	com	r24
    2ca0:	70 95       	com	r23
    2ca2:	61 95       	neg	r22
    2ca4:	7f 4f       	sbci	r23, 0xFF	; 255
    2ca6:	8f 4f       	sbci	r24, 0xFF	; 255
    2ca8:	9f 4f       	sbci	r25, 0xFF	; 255
    2caa:	f0 68       	ori	r31, 0x80	; 128
    2cac:	3f 2e       	mov	r3, r31
    2cae:	2a e0       	ldi	r18, 0x0A	; 10
    2cb0:	30 e0       	ldi	r19, 0x00	; 0
    2cb2:	a3 01       	movw	r20, r6
    2cb4:	0e 94 a3 17 	call	0x2f46	; 0x2f46 <__ultoa_invert>
    2cb8:	88 2e       	mov	r8, r24
    2cba:	86 18       	sub	r8, r6
    2cbc:	45 c0       	rjmp	.+138    	; 0x2d48 <vfprintf+0x2ce>
    2cbe:	85 37       	cpi	r24, 0x75	; 117
    2cc0:	31 f4       	brne	.+12     	; 0x2cce <vfprintf+0x254>
    2cc2:	23 2d       	mov	r18, r3
    2cc4:	2f 7e       	andi	r18, 0xEF	; 239
    2cc6:	b2 2e       	mov	r11, r18
    2cc8:	2a e0       	ldi	r18, 0x0A	; 10
    2cca:	30 e0       	ldi	r19, 0x00	; 0
    2ccc:	25 c0       	rjmp	.+74     	; 0x2d18 <vfprintf+0x29e>
    2cce:	93 2d       	mov	r25, r3
    2cd0:	99 7f       	andi	r25, 0xF9	; 249
    2cd2:	b9 2e       	mov	r11, r25
    2cd4:	8f 36       	cpi	r24, 0x6F	; 111
    2cd6:	c1 f0       	breq	.+48     	; 0x2d08 <vfprintf+0x28e>
    2cd8:	18 f4       	brcc	.+6      	; 0x2ce0 <vfprintf+0x266>
    2cda:	88 35       	cpi	r24, 0x58	; 88
    2cdc:	79 f0       	breq	.+30     	; 0x2cfc <vfprintf+0x282>
    2cde:	b5 c0       	rjmp	.+362    	; 0x2e4a <vfprintf+0x3d0>
    2ce0:	80 37       	cpi	r24, 0x70	; 112
    2ce2:	19 f0       	breq	.+6      	; 0x2cea <vfprintf+0x270>
    2ce4:	88 37       	cpi	r24, 0x78	; 120
    2ce6:	21 f0       	breq	.+8      	; 0x2cf0 <vfprintf+0x276>
    2ce8:	b0 c0       	rjmp	.+352    	; 0x2e4a <vfprintf+0x3d0>
    2cea:	e9 2f       	mov	r30, r25
    2cec:	e0 61       	ori	r30, 0x10	; 16
    2cee:	be 2e       	mov	r11, r30
    2cf0:	b4 fe       	sbrs	r11, 4
    2cf2:	0d c0       	rjmp	.+26     	; 0x2d0e <vfprintf+0x294>
    2cf4:	fb 2d       	mov	r31, r11
    2cf6:	f4 60       	ori	r31, 0x04	; 4
    2cf8:	bf 2e       	mov	r11, r31
    2cfa:	09 c0       	rjmp	.+18     	; 0x2d0e <vfprintf+0x294>
    2cfc:	34 fe       	sbrs	r3, 4
    2cfe:	0a c0       	rjmp	.+20     	; 0x2d14 <vfprintf+0x29a>
    2d00:	29 2f       	mov	r18, r25
    2d02:	26 60       	ori	r18, 0x06	; 6
    2d04:	b2 2e       	mov	r11, r18
    2d06:	06 c0       	rjmp	.+12     	; 0x2d14 <vfprintf+0x29a>
    2d08:	28 e0       	ldi	r18, 0x08	; 8
    2d0a:	30 e0       	ldi	r19, 0x00	; 0
    2d0c:	05 c0       	rjmp	.+10     	; 0x2d18 <vfprintf+0x29e>
    2d0e:	20 e1       	ldi	r18, 0x10	; 16
    2d10:	30 e0       	ldi	r19, 0x00	; 0
    2d12:	02 c0       	rjmp	.+4      	; 0x2d18 <vfprintf+0x29e>
    2d14:	20 e1       	ldi	r18, 0x10	; 16
    2d16:	32 e0       	ldi	r19, 0x02	; 2
    2d18:	f8 01       	movw	r30, r16
    2d1a:	b7 fe       	sbrs	r11, 7
    2d1c:	07 c0       	rjmp	.+14     	; 0x2d2c <vfprintf+0x2b2>
    2d1e:	60 81       	ld	r22, Z
    2d20:	71 81       	ldd	r23, Z+1	; 0x01
    2d22:	82 81       	ldd	r24, Z+2	; 0x02
    2d24:	93 81       	ldd	r25, Z+3	; 0x03
    2d26:	0c 5f       	subi	r16, 0xFC	; 252
    2d28:	1f 4f       	sbci	r17, 0xFF	; 255
    2d2a:	06 c0       	rjmp	.+12     	; 0x2d38 <vfprintf+0x2be>
    2d2c:	60 81       	ld	r22, Z
    2d2e:	71 81       	ldd	r23, Z+1	; 0x01
    2d30:	80 e0       	ldi	r24, 0x00	; 0
    2d32:	90 e0       	ldi	r25, 0x00	; 0
    2d34:	0e 5f       	subi	r16, 0xFE	; 254
    2d36:	1f 4f       	sbci	r17, 0xFF	; 255
    2d38:	a3 01       	movw	r20, r6
    2d3a:	0e 94 a3 17 	call	0x2f46	; 0x2f46 <__ultoa_invert>
    2d3e:	88 2e       	mov	r8, r24
    2d40:	86 18       	sub	r8, r6
    2d42:	fb 2d       	mov	r31, r11
    2d44:	ff 77       	andi	r31, 0x7F	; 127
    2d46:	3f 2e       	mov	r3, r31
    2d48:	36 fe       	sbrs	r3, 6
    2d4a:	0d c0       	rjmp	.+26     	; 0x2d66 <vfprintf+0x2ec>
    2d4c:	23 2d       	mov	r18, r3
    2d4e:	2e 7f       	andi	r18, 0xFE	; 254
    2d50:	a2 2e       	mov	r10, r18
    2d52:	89 14       	cp	r8, r9
    2d54:	58 f4       	brcc	.+22     	; 0x2d6c <vfprintf+0x2f2>
    2d56:	34 fe       	sbrs	r3, 4
    2d58:	0b c0       	rjmp	.+22     	; 0x2d70 <vfprintf+0x2f6>
    2d5a:	32 fc       	sbrc	r3, 2
    2d5c:	09 c0       	rjmp	.+18     	; 0x2d70 <vfprintf+0x2f6>
    2d5e:	83 2d       	mov	r24, r3
    2d60:	8e 7e       	andi	r24, 0xEE	; 238
    2d62:	a8 2e       	mov	r10, r24
    2d64:	05 c0       	rjmp	.+10     	; 0x2d70 <vfprintf+0x2f6>
    2d66:	b8 2c       	mov	r11, r8
    2d68:	a3 2c       	mov	r10, r3
    2d6a:	03 c0       	rjmp	.+6      	; 0x2d72 <vfprintf+0x2f8>
    2d6c:	b8 2c       	mov	r11, r8
    2d6e:	01 c0       	rjmp	.+2      	; 0x2d72 <vfprintf+0x2f8>
    2d70:	b9 2c       	mov	r11, r9
    2d72:	a4 fe       	sbrs	r10, 4
    2d74:	0f c0       	rjmp	.+30     	; 0x2d94 <vfprintf+0x31a>
    2d76:	fe 01       	movw	r30, r28
    2d78:	e8 0d       	add	r30, r8
    2d7a:	f1 1d       	adc	r31, r1
    2d7c:	80 81       	ld	r24, Z
    2d7e:	80 33       	cpi	r24, 0x30	; 48
    2d80:	21 f4       	brne	.+8      	; 0x2d8a <vfprintf+0x310>
    2d82:	9a 2d       	mov	r25, r10
    2d84:	99 7e       	andi	r25, 0xE9	; 233
    2d86:	a9 2e       	mov	r10, r25
    2d88:	09 c0       	rjmp	.+18     	; 0x2d9c <vfprintf+0x322>
    2d8a:	a2 fe       	sbrs	r10, 2
    2d8c:	06 c0       	rjmp	.+12     	; 0x2d9a <vfprintf+0x320>
    2d8e:	b3 94       	inc	r11
    2d90:	b3 94       	inc	r11
    2d92:	04 c0       	rjmp	.+8      	; 0x2d9c <vfprintf+0x322>
    2d94:	8a 2d       	mov	r24, r10
    2d96:	86 78       	andi	r24, 0x86	; 134
    2d98:	09 f0       	breq	.+2      	; 0x2d9c <vfprintf+0x322>
    2d9a:	b3 94       	inc	r11
    2d9c:	a3 fc       	sbrc	r10, 3
    2d9e:	11 c0       	rjmp	.+34     	; 0x2dc2 <vfprintf+0x348>
    2da0:	a0 fe       	sbrs	r10, 0
    2da2:	06 c0       	rjmp	.+12     	; 0x2db0 <vfprintf+0x336>
    2da4:	b2 14       	cp	r11, r2
    2da6:	88 f4       	brcc	.+34     	; 0x2dca <vfprintf+0x350>
    2da8:	28 0c       	add	r2, r8
    2daa:	92 2c       	mov	r9, r2
    2dac:	9b 18       	sub	r9, r11
    2dae:	0e c0       	rjmp	.+28     	; 0x2dcc <vfprintf+0x352>
    2db0:	b2 14       	cp	r11, r2
    2db2:	60 f4       	brcc	.+24     	; 0x2dcc <vfprintf+0x352>
    2db4:	b6 01       	movw	r22, r12
    2db6:	80 e2       	ldi	r24, 0x20	; 32
    2db8:	90 e0       	ldi	r25, 0x00	; 0
    2dba:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2dbe:	b3 94       	inc	r11
    2dc0:	f7 cf       	rjmp	.-18     	; 0x2db0 <vfprintf+0x336>
    2dc2:	b2 14       	cp	r11, r2
    2dc4:	18 f4       	brcc	.+6      	; 0x2dcc <vfprintf+0x352>
    2dc6:	2b 18       	sub	r2, r11
    2dc8:	02 c0       	rjmp	.+4      	; 0x2dce <vfprintf+0x354>
    2dca:	98 2c       	mov	r9, r8
    2dcc:	21 2c       	mov	r2, r1
    2dce:	a4 fe       	sbrs	r10, 4
    2dd0:	10 c0       	rjmp	.+32     	; 0x2df2 <vfprintf+0x378>
    2dd2:	b6 01       	movw	r22, r12
    2dd4:	80 e3       	ldi	r24, 0x30	; 48
    2dd6:	90 e0       	ldi	r25, 0x00	; 0
    2dd8:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2ddc:	a2 fe       	sbrs	r10, 2
    2dde:	17 c0       	rjmp	.+46     	; 0x2e0e <vfprintf+0x394>
    2de0:	a1 fc       	sbrc	r10, 1
    2de2:	03 c0       	rjmp	.+6      	; 0x2dea <vfprintf+0x370>
    2de4:	88 e7       	ldi	r24, 0x78	; 120
    2de6:	90 e0       	ldi	r25, 0x00	; 0
    2de8:	02 c0       	rjmp	.+4      	; 0x2dee <vfprintf+0x374>
    2dea:	88 e5       	ldi	r24, 0x58	; 88
    2dec:	90 e0       	ldi	r25, 0x00	; 0
    2dee:	b6 01       	movw	r22, r12
    2df0:	0c c0       	rjmp	.+24     	; 0x2e0a <vfprintf+0x390>
    2df2:	8a 2d       	mov	r24, r10
    2df4:	86 78       	andi	r24, 0x86	; 134
    2df6:	59 f0       	breq	.+22     	; 0x2e0e <vfprintf+0x394>
    2df8:	a1 fe       	sbrs	r10, 1
    2dfa:	02 c0       	rjmp	.+4      	; 0x2e00 <vfprintf+0x386>
    2dfc:	8b e2       	ldi	r24, 0x2B	; 43
    2dfe:	01 c0       	rjmp	.+2      	; 0x2e02 <vfprintf+0x388>
    2e00:	80 e2       	ldi	r24, 0x20	; 32
    2e02:	a7 fc       	sbrc	r10, 7
    2e04:	8d e2       	ldi	r24, 0x2D	; 45
    2e06:	b6 01       	movw	r22, r12
    2e08:	90 e0       	ldi	r25, 0x00	; 0
    2e0a:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2e0e:	89 14       	cp	r8, r9
    2e10:	38 f4       	brcc	.+14     	; 0x2e20 <vfprintf+0x3a6>
    2e12:	b6 01       	movw	r22, r12
    2e14:	80 e3       	ldi	r24, 0x30	; 48
    2e16:	90 e0       	ldi	r25, 0x00	; 0
    2e18:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2e1c:	9a 94       	dec	r9
    2e1e:	f7 cf       	rjmp	.-18     	; 0x2e0e <vfprintf+0x394>
    2e20:	8a 94       	dec	r8
    2e22:	f3 01       	movw	r30, r6
    2e24:	e8 0d       	add	r30, r8
    2e26:	f1 1d       	adc	r31, r1
    2e28:	80 81       	ld	r24, Z
    2e2a:	b6 01       	movw	r22, r12
    2e2c:	90 e0       	ldi	r25, 0x00	; 0
    2e2e:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2e32:	81 10       	cpse	r8, r1
    2e34:	f5 cf       	rjmp	.-22     	; 0x2e20 <vfprintf+0x3a6>
    2e36:	22 20       	and	r2, r2
    2e38:	09 f4       	brne	.+2      	; 0x2e3c <vfprintf+0x3c2>
    2e3a:	42 ce       	rjmp	.-892    	; 0x2ac0 <vfprintf+0x46>
    2e3c:	b6 01       	movw	r22, r12
    2e3e:	80 e2       	ldi	r24, 0x20	; 32
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	0e 94 67 17 	call	0x2ece	; 0x2ece <fputc>
    2e46:	2a 94       	dec	r2
    2e48:	f6 cf       	rjmp	.-20     	; 0x2e36 <vfprintf+0x3bc>
    2e4a:	f6 01       	movw	r30, r12
    2e4c:	86 81       	ldd	r24, Z+6	; 0x06
    2e4e:	97 81       	ldd	r25, Z+7	; 0x07
    2e50:	02 c0       	rjmp	.+4      	; 0x2e56 <vfprintf+0x3dc>
    2e52:	8f ef       	ldi	r24, 0xFF	; 255
    2e54:	9f ef       	ldi	r25, 0xFF	; 255
    2e56:	2b 96       	adiw	r28, 0x0b	; 11
    2e58:	cd bf       	out	0x3d, r28	; 61
    2e5a:	de bf       	out	0x3e, r29	; 62
    2e5c:	df 91       	pop	r29
    2e5e:	cf 91       	pop	r28
    2e60:	1f 91       	pop	r17
    2e62:	0f 91       	pop	r16
    2e64:	ff 90       	pop	r15
    2e66:	ef 90       	pop	r14
    2e68:	df 90       	pop	r13
    2e6a:	cf 90       	pop	r12
    2e6c:	bf 90       	pop	r11
    2e6e:	af 90       	pop	r10
    2e70:	9f 90       	pop	r9
    2e72:	8f 90       	pop	r8
    2e74:	7f 90       	pop	r7
    2e76:	6f 90       	pop	r6
    2e78:	5f 90       	pop	r5
    2e7a:	4f 90       	pop	r4
    2e7c:	3f 90       	pop	r3
    2e7e:	2f 90       	pop	r2
    2e80:	08 95       	ret

00002e82 <strnlen_P>:
    2e82:	fc 01       	movw	r30, r24
    2e84:	05 90       	lpm	r0, Z+
    2e86:	61 50       	subi	r22, 0x01	; 1
    2e88:	70 40       	sbci	r23, 0x00	; 0
    2e8a:	01 10       	cpse	r0, r1
    2e8c:	d8 f7       	brcc	.-10     	; 0x2e84 <strnlen_P+0x2>
    2e8e:	80 95       	com	r24
    2e90:	90 95       	com	r25
    2e92:	8e 0f       	add	r24, r30
    2e94:	9f 1f       	adc	r25, r31
    2e96:	08 95       	ret

00002e98 <strnlen>:
    2e98:	fc 01       	movw	r30, r24
    2e9a:	61 50       	subi	r22, 0x01	; 1
    2e9c:	70 40       	sbci	r23, 0x00	; 0
    2e9e:	01 90       	ld	r0, Z+
    2ea0:	01 10       	cpse	r0, r1
    2ea2:	d8 f7       	brcc	.-10     	; 0x2e9a <strnlen+0x2>
    2ea4:	80 95       	com	r24
    2ea6:	90 95       	com	r25
    2ea8:	8e 0f       	add	r24, r30
    2eaa:	9f 1f       	adc	r25, r31
    2eac:	08 95       	ret

00002eae <strrev>:
    2eae:	dc 01       	movw	r26, r24
    2eb0:	fc 01       	movw	r30, r24
    2eb2:	67 2f       	mov	r22, r23
    2eb4:	71 91       	ld	r23, Z+
    2eb6:	77 23       	and	r23, r23
    2eb8:	e1 f7       	brne	.-8      	; 0x2eb2 <strrev+0x4>
    2eba:	32 97       	sbiw	r30, 0x02	; 2
    2ebc:	04 c0       	rjmp	.+8      	; 0x2ec6 <strrev+0x18>
    2ebe:	7c 91       	ld	r23, X
    2ec0:	6d 93       	st	X+, r22
    2ec2:	70 83       	st	Z, r23
    2ec4:	62 91       	ld	r22, -Z
    2ec6:	ae 17       	cp	r26, r30
    2ec8:	bf 07       	cpc	r27, r31
    2eca:	c8 f3       	brcs	.-14     	; 0x2ebe <strrev+0x10>
    2ecc:	08 95       	ret

00002ece <fputc>:
    2ece:	0f 93       	push	r16
    2ed0:	1f 93       	push	r17
    2ed2:	cf 93       	push	r28
    2ed4:	df 93       	push	r29
    2ed6:	fb 01       	movw	r30, r22
    2ed8:	23 81       	ldd	r18, Z+3	; 0x03
    2eda:	21 fd       	sbrc	r18, 1
    2edc:	03 c0       	rjmp	.+6      	; 0x2ee4 <fputc+0x16>
    2ede:	8f ef       	ldi	r24, 0xFF	; 255
    2ee0:	9f ef       	ldi	r25, 0xFF	; 255
    2ee2:	2c c0       	rjmp	.+88     	; 0x2f3c <fputc+0x6e>
    2ee4:	22 ff       	sbrs	r18, 2
    2ee6:	16 c0       	rjmp	.+44     	; 0x2f14 <fputc+0x46>
    2ee8:	46 81       	ldd	r20, Z+6	; 0x06
    2eea:	57 81       	ldd	r21, Z+7	; 0x07
    2eec:	24 81       	ldd	r18, Z+4	; 0x04
    2eee:	35 81       	ldd	r19, Z+5	; 0x05
    2ef0:	42 17       	cp	r20, r18
    2ef2:	53 07       	cpc	r21, r19
    2ef4:	44 f4       	brge	.+16     	; 0x2f06 <fputc+0x38>
    2ef6:	a0 81       	ld	r26, Z
    2ef8:	b1 81       	ldd	r27, Z+1	; 0x01
    2efa:	9d 01       	movw	r18, r26
    2efc:	2f 5f       	subi	r18, 0xFF	; 255
    2efe:	3f 4f       	sbci	r19, 0xFF	; 255
    2f00:	20 83       	st	Z, r18
    2f02:	31 83       	std	Z+1, r19	; 0x01
    2f04:	8c 93       	st	X, r24
    2f06:	26 81       	ldd	r18, Z+6	; 0x06
    2f08:	37 81       	ldd	r19, Z+7	; 0x07
    2f0a:	2f 5f       	subi	r18, 0xFF	; 255
    2f0c:	3f 4f       	sbci	r19, 0xFF	; 255
    2f0e:	26 83       	std	Z+6, r18	; 0x06
    2f10:	37 83       	std	Z+7, r19	; 0x07
    2f12:	14 c0       	rjmp	.+40     	; 0x2f3c <fputc+0x6e>
    2f14:	8b 01       	movw	r16, r22
    2f16:	ec 01       	movw	r28, r24
    2f18:	fb 01       	movw	r30, r22
    2f1a:	00 84       	ldd	r0, Z+8	; 0x08
    2f1c:	f1 85       	ldd	r31, Z+9	; 0x09
    2f1e:	e0 2d       	mov	r30, r0
    2f20:	09 95       	icall
    2f22:	89 2b       	or	r24, r25
    2f24:	e1 f6       	brne	.-72     	; 0x2ede <fputc+0x10>
    2f26:	d8 01       	movw	r26, r16
    2f28:	16 96       	adiw	r26, 0x06	; 6
    2f2a:	8d 91       	ld	r24, X+
    2f2c:	9c 91       	ld	r25, X
    2f2e:	17 97       	sbiw	r26, 0x07	; 7
    2f30:	01 96       	adiw	r24, 0x01	; 1
    2f32:	16 96       	adiw	r26, 0x06	; 6
    2f34:	8d 93       	st	X+, r24
    2f36:	9c 93       	st	X, r25
    2f38:	17 97       	sbiw	r26, 0x07	; 7
    2f3a:	ce 01       	movw	r24, r28
    2f3c:	df 91       	pop	r29
    2f3e:	cf 91       	pop	r28
    2f40:	1f 91       	pop	r17
    2f42:	0f 91       	pop	r16
    2f44:	08 95       	ret

00002f46 <__ultoa_invert>:
    2f46:	fa 01       	movw	r30, r20
    2f48:	aa 27       	eor	r26, r26
    2f4a:	28 30       	cpi	r18, 0x08	; 8
    2f4c:	51 f1       	breq	.+84     	; 0x2fa2 <__ultoa_invert+0x5c>
    2f4e:	20 31       	cpi	r18, 0x10	; 16
    2f50:	81 f1       	breq	.+96     	; 0x2fb2 <__ultoa_invert+0x6c>
    2f52:	e8 94       	clt
    2f54:	6f 93       	push	r22
    2f56:	6e 7f       	andi	r22, 0xFE	; 254
    2f58:	6e 5f       	subi	r22, 0xFE	; 254
    2f5a:	7f 4f       	sbci	r23, 0xFF	; 255
    2f5c:	8f 4f       	sbci	r24, 0xFF	; 255
    2f5e:	9f 4f       	sbci	r25, 0xFF	; 255
    2f60:	af 4f       	sbci	r26, 0xFF	; 255
    2f62:	b1 e0       	ldi	r27, 0x01	; 1
    2f64:	3e d0       	rcall	.+124    	; 0x2fe2 <__ultoa_invert+0x9c>
    2f66:	b4 e0       	ldi	r27, 0x04	; 4
    2f68:	3c d0       	rcall	.+120    	; 0x2fe2 <__ultoa_invert+0x9c>
    2f6a:	67 0f       	add	r22, r23
    2f6c:	78 1f       	adc	r23, r24
    2f6e:	89 1f       	adc	r24, r25
    2f70:	9a 1f       	adc	r25, r26
    2f72:	a1 1d       	adc	r26, r1
    2f74:	68 0f       	add	r22, r24
    2f76:	79 1f       	adc	r23, r25
    2f78:	8a 1f       	adc	r24, r26
    2f7a:	91 1d       	adc	r25, r1
    2f7c:	a1 1d       	adc	r26, r1
    2f7e:	6a 0f       	add	r22, r26
    2f80:	71 1d       	adc	r23, r1
    2f82:	81 1d       	adc	r24, r1
    2f84:	91 1d       	adc	r25, r1
    2f86:	a1 1d       	adc	r26, r1
    2f88:	20 d0       	rcall	.+64     	; 0x2fca <__ultoa_invert+0x84>
    2f8a:	09 f4       	brne	.+2      	; 0x2f8e <__ultoa_invert+0x48>
    2f8c:	68 94       	set
    2f8e:	3f 91       	pop	r19
    2f90:	2a e0       	ldi	r18, 0x0A	; 10
    2f92:	26 9f       	mul	r18, r22
    2f94:	11 24       	eor	r1, r1
    2f96:	30 19       	sub	r19, r0
    2f98:	30 5d       	subi	r19, 0xD0	; 208
    2f9a:	31 93       	st	Z+, r19
    2f9c:	de f6       	brtc	.-74     	; 0x2f54 <__ultoa_invert+0xe>
    2f9e:	cf 01       	movw	r24, r30
    2fa0:	08 95       	ret
    2fa2:	46 2f       	mov	r20, r22
    2fa4:	47 70       	andi	r20, 0x07	; 7
    2fa6:	40 5d       	subi	r20, 0xD0	; 208
    2fa8:	41 93       	st	Z+, r20
    2faa:	b3 e0       	ldi	r27, 0x03	; 3
    2fac:	0f d0       	rcall	.+30     	; 0x2fcc <__ultoa_invert+0x86>
    2fae:	c9 f7       	brne	.-14     	; 0x2fa2 <__ultoa_invert+0x5c>
    2fb0:	f6 cf       	rjmp	.-20     	; 0x2f9e <__ultoa_invert+0x58>
    2fb2:	46 2f       	mov	r20, r22
    2fb4:	4f 70       	andi	r20, 0x0F	; 15
    2fb6:	40 5d       	subi	r20, 0xD0	; 208
    2fb8:	4a 33       	cpi	r20, 0x3A	; 58
    2fba:	18 f0       	brcs	.+6      	; 0x2fc2 <__ultoa_invert+0x7c>
    2fbc:	49 5d       	subi	r20, 0xD9	; 217
    2fbe:	31 fd       	sbrc	r19, 1
    2fc0:	40 52       	subi	r20, 0x20	; 32
    2fc2:	41 93       	st	Z+, r20
    2fc4:	02 d0       	rcall	.+4      	; 0x2fca <__ultoa_invert+0x84>
    2fc6:	a9 f7       	brne	.-22     	; 0x2fb2 <__ultoa_invert+0x6c>
    2fc8:	ea cf       	rjmp	.-44     	; 0x2f9e <__ultoa_invert+0x58>
    2fca:	b4 e0       	ldi	r27, 0x04	; 4
    2fcc:	a6 95       	lsr	r26
    2fce:	97 95       	ror	r25
    2fd0:	87 95       	ror	r24
    2fd2:	77 95       	ror	r23
    2fd4:	67 95       	ror	r22
    2fd6:	ba 95       	dec	r27
    2fd8:	c9 f7       	brne	.-14     	; 0x2fcc <__ultoa_invert+0x86>
    2fda:	00 97       	sbiw	r24, 0x00	; 0
    2fdc:	61 05       	cpc	r22, r1
    2fde:	71 05       	cpc	r23, r1
    2fe0:	08 95       	ret
    2fe2:	9b 01       	movw	r18, r22
    2fe4:	ac 01       	movw	r20, r24
    2fe6:	0a 2e       	mov	r0, r26
    2fe8:	06 94       	lsr	r0
    2fea:	57 95       	ror	r21
    2fec:	47 95       	ror	r20
    2fee:	37 95       	ror	r19
    2ff0:	27 95       	ror	r18
    2ff2:	ba 95       	dec	r27
    2ff4:	c9 f7       	brne	.-14     	; 0x2fe8 <__ultoa_invert+0xa2>
    2ff6:	62 0f       	add	r22, r18
    2ff8:	73 1f       	adc	r23, r19
    2ffa:	84 1f       	adc	r24, r20
    2ffc:	95 1f       	adc	r25, r21
    2ffe:	a0 1d       	adc	r26, r0
    3000:	08 95       	ret

00003002 <ccp_write_io>:
    3002:	dc 01       	movw	r26, r24
    3004:	28 ed       	ldi	r18, 0xD8	; 216
    3006:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__TEXT_REGION_LENGTH__+0x7e0034>
    300a:	6c 93       	st	X, r22
    300c:	08 95       	ret

0000300e <_exit>:
    300e:	f8 94       	cli

00003010 <__stop_program>:
    3010:	ff cf       	rjmp	.-2      	; 0x3010 <__stop_program>
